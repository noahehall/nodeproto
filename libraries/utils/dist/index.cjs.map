{
  "version": 3,
  "sources": ["../../../common/temp/node_modules/.pnpm/dotenv@10.0.0/node_modules/dotenv/lib/main.js", "../../../common/temp/node_modules/.pnpm/mkdirp@1.0.4/node_modules/mkdirp/lib/opts-arg.js", "../../../common/temp/node_modules/.pnpm/mkdirp@1.0.4/node_modules/mkdirp/lib/path-arg.js", "../../../common/temp/node_modules/.pnpm/mkdirp@1.0.4/node_modules/mkdirp/lib/find-made.js", "../../../common/temp/node_modules/.pnpm/mkdirp@1.0.4/node_modules/mkdirp/lib/mkdirp-manual.js", "../../../common/temp/node_modules/.pnpm/mkdirp@1.0.4/node_modules/mkdirp/lib/mkdirp-native.js", "../../../common/temp/node_modules/.pnpm/mkdirp@1.0.4/node_modules/mkdirp/lib/use-native.js", "../../../common/temp/node_modules/.pnpm/mkdirp@1.0.4/node_modules/mkdirp/index.js", "../../../common/temp/node_modules/.pnpm/es6-promisify@6.1.1/node_modules/es6-promisify/dist/promisify.js", "../../../common/temp/node_modules/.pnpm/os-tmpdir@1.0.2/node_modules/os-tmpdir/index.js", "../../../common/temp/node_modules/.pnpm/pem@1.14.4/node_modules/pem/lib/helper.js", "../../../common/temp/node_modules/.pnpm/isexe@2.0.0/node_modules/isexe/windows.js", "../../../common/temp/node_modules/.pnpm/isexe@2.0.0/node_modules/isexe/mode.js", "../../../common/temp/node_modules/.pnpm/isexe@2.0.0/node_modules/isexe/index.js", "../../../common/temp/node_modules/.pnpm/which@2.0.2/node_modules/which/which.js", "../../../common/temp/node_modules/.pnpm/pem@1.14.4/node_modules/pem/lib/openssl.js", "../../../common/temp/node_modules/.pnpm/pem@1.14.4/node_modules/pem/lib/convert.js", "../../../common/temp/node_modules/.pnpm/pem@1.14.4/node_modules/pem/lib/pem.js", "../index.mjs", "../envproto/index.mjs", "../envproto/envvars.mjs", "../fsproto/index.mjs", "../../../common/temp/node_modules/.pnpm/es-main@1.0.2/node_modules/es-main/main.js", "../envproto/ssl.mjs", "../esproto/index.mjs", "../esproto/plugins/popCopy.mjs"],
  "sourcesContent": ["/* @flow */\n/*::\n\ntype DotenvParseOptions = {\n  debug?: boolean\n}\n\n// keys and values from src\ntype DotenvParseOutput = { [string]: string }\n\ntype DotenvConfigOptions = {\n  path?: string, // path to .env file\n  encoding?: string, // encoding of .env file\n  debug?: string // turn on logging for debugging purposes\n}\n\ntype DotenvConfigOutput = {\n  parsed?: DotenvParseOutput,\n  error?: Error\n}\n\n*/\n\nconst fs = require('fs')\nconst path = require('path')\nconst os = require('os')\n\nfunction log (message /*: string */) {\n  console.log(`[dotenv][DEBUG] ${message}`)\n}\n\nconst NEWLINE = '\\n'\nconst RE_INI_KEY_VAL = /^\\s*([\\w.-]+)\\s*=\\s*(.*)?\\s*$/\nconst RE_NEWLINES = /\\\\n/g\nconst NEWLINES_MATCH = /\\r\\n|\\n|\\r/\n\n// Parses src into an Object\nfunction parse (src /*: string | Buffer */, options /*: ?DotenvParseOptions */) /*: DotenvParseOutput */ {\n  const debug = Boolean(options && options.debug)\n  const obj = {}\n\n  // convert Buffers before splitting into lines and processing\n  src.toString().split(NEWLINES_MATCH).forEach(function (line, idx) {\n    // matching \"KEY' and 'VAL' in 'KEY=VAL'\n    const keyValueArr = line.match(RE_INI_KEY_VAL)\n    // matched?\n    if (keyValueArr != null) {\n      const key = keyValueArr[1]\n      // default undefined or missing values to empty string\n      let val = (keyValueArr[2] || '')\n      const end = val.length - 1\n      const isDoubleQuoted = val[0] === '\"' && val[end] === '\"'\n      const isSingleQuoted = val[0] === \"'\" && val[end] === \"'\"\n\n      // if single or double quoted, remove quotes\n      if (isSingleQuoted || isDoubleQuoted) {\n        val = val.substring(1, end)\n\n        // if double quoted, expand newlines\n        if (isDoubleQuoted) {\n          val = val.replace(RE_NEWLINES, NEWLINE)\n        }\n      } else {\n        // remove surrounding whitespace\n        val = val.trim()\n      }\n\n      obj[key] = val\n    } else if (debug) {\n      log(`did not match key and value when parsing line ${idx + 1}: ${line}`)\n    }\n  })\n\n  return obj\n}\n\nfunction resolveHome (envPath) {\n  return envPath[0] === '~' ? path.join(os.homedir(), envPath.slice(1)) : envPath\n}\n\n// Populates process.env from .env file\nfunction config (options /*: ?DotenvConfigOptions */) /*: DotenvConfigOutput */ {\n  let dotenvPath = path.resolve(process.cwd(), '.env')\n  let encoding /*: string */ = 'utf8'\n  let debug = false\n\n  if (options) {\n    if (options.path != null) {\n      dotenvPath = resolveHome(options.path)\n    }\n    if (options.encoding != null) {\n      encoding = options.encoding\n    }\n    if (options.debug != null) {\n      debug = true\n    }\n  }\n\n  try {\n    // specifying an encoding returns a string instead of a buffer\n    const parsed = parse(fs.readFileSync(dotenvPath, { encoding }), { debug })\n\n    Object.keys(parsed).forEach(function (key) {\n      if (!Object.prototype.hasOwnProperty.call(process.env, key)) {\n        process.env[key] = parsed[key]\n      } else if (debug) {\n        log(`\"${key}\" is already defined in \\`process.env\\` and will not be overwritten`)\n      }\n    })\n\n    return { parsed }\n  } catch (e) {\n    return { error: e }\n  }\n}\n\nmodule.exports.config = config\nmodule.exports.parse = parse\n", "const { promisify } = require('util')\nconst fs = require('fs')\nconst optsArg = opts => {\n  if (!opts)\n    opts = { mode: 0o777, fs }\n  else if (typeof opts === 'object')\n    opts = { mode: 0o777, fs, ...opts }\n  else if (typeof opts === 'number')\n    opts = { mode: opts, fs }\n  else if (typeof opts === 'string')\n    opts = { mode: parseInt(opts, 8), fs }\n  else\n    throw new TypeError('invalid options argument')\n\n  opts.mkdir = opts.mkdir || opts.fs.mkdir || fs.mkdir\n  opts.mkdirAsync = promisify(opts.mkdir)\n  opts.stat = opts.stat || opts.fs.stat || fs.stat\n  opts.statAsync = promisify(opts.stat)\n  opts.statSync = opts.statSync || opts.fs.statSync || fs.statSync\n  opts.mkdirSync = opts.mkdirSync || opts.fs.mkdirSync || fs.mkdirSync\n  return opts\n}\nmodule.exports = optsArg\n", "const platform = process.env.__TESTING_MKDIRP_PLATFORM__ || process.platform\nconst { resolve, parse } = require('path')\nconst pathArg = path => {\n  if (/\\0/.test(path)) {\n    // simulate same failure that node raises\n    throw Object.assign(\n      new TypeError('path must be a string without null bytes'),\n      {\n        path,\n        code: 'ERR_INVALID_ARG_VALUE',\n      }\n    )\n  }\n\n  path = resolve(path)\n  if (platform === 'win32') {\n    const badWinChars = /[*|\"<>?:]/\n    const {root} = parse(path)\n    if (badWinChars.test(path.substr(root.length))) {\n      throw Object.assign(new Error('Illegal characters in path.'), {\n        path,\n        code: 'EINVAL',\n      })\n    }\n  }\n\n  return path\n}\nmodule.exports = pathArg\n", "const {dirname} = require('path')\n\nconst findMade = (opts, parent, path = undefined) => {\n  // we never want the 'made' return value to be a root directory\n  if (path === parent)\n    return Promise.resolve()\n\n  return opts.statAsync(parent).then(\n    st => st.isDirectory() ? path : undefined, // will fail later\n    er => er.code === 'ENOENT'\n      ? findMade(opts, dirname(parent), parent)\n      : undefined\n  )\n}\n\nconst findMadeSync = (opts, parent, path = undefined) => {\n  if (path === parent)\n    return undefined\n\n  try {\n    return opts.statSync(parent).isDirectory() ? path : undefined\n  } catch (er) {\n    return er.code === 'ENOENT'\n      ? findMadeSync(opts, dirname(parent), parent)\n      : undefined\n  }\n}\n\nmodule.exports = {findMade, findMadeSync}\n", "const {dirname} = require('path')\n\nconst mkdirpManual = (path, opts, made) => {\n  opts.recursive = false\n  const parent = dirname(path)\n  if (parent === path) {\n    return opts.mkdirAsync(path, opts).catch(er => {\n      // swallowed by recursive implementation on posix systems\n      // any other error is a failure\n      if (er.code !== 'EISDIR')\n        throw er\n    })\n  }\n\n  return opts.mkdirAsync(path, opts).then(() => made || path, er => {\n    if (er.code === 'ENOENT')\n      return mkdirpManual(parent, opts)\n        .then(made => mkdirpManual(path, opts, made))\n    if (er.code !== 'EEXIST' && er.code !== 'EROFS')\n      throw er\n    return opts.statAsync(path).then(st => {\n      if (st.isDirectory())\n        return made\n      else\n        throw er\n    }, () => { throw er })\n  })\n}\n\nconst mkdirpManualSync = (path, opts, made) => {\n  const parent = dirname(path)\n  opts.recursive = false\n\n  if (parent === path) {\n    try {\n      return opts.mkdirSync(path, opts)\n    } catch (er) {\n      // swallowed by recursive implementation on posix systems\n      // any other error is a failure\n      if (er.code !== 'EISDIR')\n        throw er\n      else\n        return\n    }\n  }\n\n  try {\n    opts.mkdirSync(path, opts)\n    return made || path\n  } catch (er) {\n    if (er.code === 'ENOENT')\n      return mkdirpManualSync(path, opts, mkdirpManualSync(parent, opts, made))\n    if (er.code !== 'EEXIST' && er.code !== 'EROFS')\n      throw er\n    try {\n      if (!opts.statSync(path).isDirectory())\n        throw er\n    } catch (_) {\n      throw er\n    }\n  }\n}\n\nmodule.exports = {mkdirpManual, mkdirpManualSync}\n", "const {dirname} = require('path')\nconst {findMade, findMadeSync} = require('./find-made.js')\nconst {mkdirpManual, mkdirpManualSync} = require('./mkdirp-manual.js')\n\nconst mkdirpNative = (path, opts) => {\n  opts.recursive = true\n  const parent = dirname(path)\n  if (parent === path)\n    return opts.mkdirAsync(path, opts)\n\n  return findMade(opts, path).then(made =>\n    opts.mkdirAsync(path, opts).then(() => made)\n    .catch(er => {\n      if (er.code === 'ENOENT')\n        return mkdirpManual(path, opts)\n      else\n        throw er\n    }))\n}\n\nconst mkdirpNativeSync = (path, opts) => {\n  opts.recursive = true\n  const parent = dirname(path)\n  if (parent === path)\n    return opts.mkdirSync(path, opts)\n\n  const made = findMadeSync(opts, path)\n  try {\n    opts.mkdirSync(path, opts)\n    return made\n  } catch (er) {\n    if (er.code === 'ENOENT')\n      return mkdirpManualSync(path, opts)\n    else\n      throw er\n  }\n}\n\nmodule.exports = {mkdirpNative, mkdirpNativeSync}\n", "const fs = require('fs')\n\nconst version = process.env.__TESTING_MKDIRP_NODE_VERSION__ || process.version\nconst versArr = version.replace(/^v/, '').split('.')\nconst hasNative = +versArr[0] > 10 || +versArr[0] === 10 && +versArr[1] >= 12\n\nconst useNative = !hasNative ? () => false : opts => opts.mkdir === fs.mkdir\nconst useNativeSync = !hasNative ? () => false : opts => opts.mkdirSync === fs.mkdirSync\n\nmodule.exports = {useNative, useNativeSync}\n", "const optsArg = require('./lib/opts-arg.js')\nconst pathArg = require('./lib/path-arg.js')\n\nconst {mkdirpNative, mkdirpNativeSync} = require('./lib/mkdirp-native.js')\nconst {mkdirpManual, mkdirpManualSync} = require('./lib/mkdirp-manual.js')\nconst {useNative, useNativeSync} = require('./lib/use-native.js')\n\n\nconst mkdirp = (path, opts) => {\n  path = pathArg(path)\n  opts = optsArg(opts)\n  return useNative(opts)\n    ? mkdirpNative(path, opts)\n    : mkdirpManual(path, opts)\n}\n\nconst mkdirpSync = (path, opts) => {\n  path = pathArg(path)\n  opts = optsArg(opts)\n  return useNativeSync(opts)\n    ? mkdirpNativeSync(path, opts)\n    : mkdirpManualSync(path, opts)\n}\n\nmkdirp.sync = mkdirpSync\nmkdirp.native = (path, opts) => mkdirpNative(pathArg(path), optsArg(opts))\nmkdirp.manual = (path, opts) => mkdirpManual(pathArg(path), optsArg(opts))\nmkdirp.nativeSync = (path, opts) => mkdirpNativeSync(pathArg(path), optsArg(opts))\nmkdirp.manualSync = (path, opts) => mkdirpManualSync(pathArg(path), optsArg(opts))\n\nmodule.exports = mkdirp\n", "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.promisify = promisify;\n// Symbols is a better way to do this, but not all browsers have good support,\n// so instead we'll just make do with a very unlikely string.\nvar customArgumentsToken = \"__ES6-PROMISIFY--CUSTOM-ARGUMENTS__\";\n/**\n * promisify()\n * Transforms callback-based function -- func(arg1, arg2 .. argN, callback) --\n * into an ES6-compatible Promise. Promisify provides a default callback of the\n * form (error, result) and rejects when `error` is truthy.\n *\n * @param {function} original - The function to promisify\n * @return {function} A promisified version of `original`\n */\n\nfunction promisify(original) {\n  // Ensure the argument is a function\n  if (typeof original !== \"function\") {\n    throw new TypeError(\"Argument to promisify must be a function\");\n  } // If the user has asked us to decode argument names for them, honour that\n\n\n  var argumentNames = original[customArgumentsToken]; // If the user has supplied a custom Promise implementation, use it.\n  // Otherwise fall back to whatever we can find on the global object.\n\n  var ES6Promise = promisify.Promise || Promise; // If we can find no Promise implemention, then fail now.\n\n  if (typeof ES6Promise !== \"function\") {\n    throw new Error(\"No Promise implementation found; do you need a polyfill?\");\n  }\n\n  return function () {\n    var _this = this;\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    return new ES6Promise(function (resolve, reject) {\n      // Append the callback bound to the context\n      args.push(function callback(err) {\n        if (err) {\n          return reject(err);\n        }\n\n        for (var _len2 = arguments.length, values = new Array(_len2 > 1 ? _len2 - 1 : 0), _key2 = 1; _key2 < _len2; _key2++) {\n          values[_key2 - 1] = arguments[_key2];\n        }\n\n        if (values.length === 1 || !argumentNames) {\n          return resolve(values[0]);\n        }\n\n        var o = {};\n        values.forEach(function (value, index) {\n          var name = argumentNames[index];\n\n          if (name) {\n            o[name] = value;\n          }\n        });\n        resolve(o);\n      }); // Call the function.\n\n      original.apply(_this, args);\n    });\n  };\n} // Attach this symbol to the exported function, so users can use it\n\n\npromisify.argumentNames = customArgumentsToken;\npromisify.Promise = undefined; // Export the public API", "'use strict';\nvar isWindows = process.platform === 'win32';\nvar trailingSlashRe = isWindows ? /[^:]\\\\$/ : /.\\/$/;\n\n// https://github.com/nodejs/node/blob/3e7a14381497a3b73dda68d05b5130563cdab420/lib/os.js#L25-L43\nmodule.exports = function () {\n\tvar path;\n\n\tif (isWindows) {\n\t\tpath = process.env.TEMP ||\n\t\t\tprocess.env.TMP ||\n\t\t\t(process.env.SystemRoot || process.env.windir) + '\\\\temp';\n\t} else {\n\t\tpath = process.env.TMPDIR ||\n\t\t\tprocess.env.TMP ||\n\t\t\tprocess.env.TEMP ||\n\t\t\t'/tmp';\n\t}\n\n\tif (trailingSlashRe.test(path)) {\n\t\tpath = path.slice(0, -1);\n\t}\n\n\treturn path;\n};\n", "'use strict'\r\n\r\nvar pathlib = require('path')\r\nvar fs = require('fs')\r\nvar crypto = require('crypto')\r\nvar osTmpdir = require('os-tmpdir')\r\nvar tempDir = process.env.PEMJS_TMPDIR || osTmpdir()\r\n\r\n/**\r\n * pem helper module\r\n *\r\n * @module helper\r\n */\r\n\r\n/**\r\n * helper function to check is the string a number or not\r\n * @param {String} str String that should be checked to be a number\r\n */\r\nmodule.exports.isNumber = function (str) {\r\n  if (Array.isArray(str)) {\r\n    return false\r\n  }\r\n  /*\r\n  var bstr = str && str.toString()\r\n  str = str + ''\r\n\r\n  return bstr - parseFloat(bstr) + 1 >= 0 &&\r\n          !/^\\s+|\\s+$/g.test(str) && /^\\d+$/g.test(str) &&\r\n          !isNaN(str) && !isNaN(parseFloat(str))\r\n  */\r\n  return /^\\d+$/g.test(str)\r\n}\r\n\r\n/**\r\n * helper function to check is the string a hexaceximal value\r\n * @param {String} hex String that should be checked to be a hexaceximal\r\n */\r\nmodule.exports.isHex = function isHex (hex) {\r\n  return /^(0x){0,1}([0-9A-F]{1,40}|[0-9A-F]{1,40})$/gi.test(hex)\r\n}\r\n\r\n/**\r\n * helper function to convert a string to a hexaceximal value\r\n * @param {String} str String that should be converted to a hexaceximal\r\n */\r\nmodule.exports.toHex = function toHex (str) {\r\n  var hex = ''\r\n  for (var i = 0; i < str.length; i++) {\r\n    hex += '' + str.charCodeAt(i).toString(16)\r\n  }\r\n  return hex\r\n}\r\n\r\n// cipherPassword returns an array of supported ciphers.\r\n/**\r\n * list of supported ciphers\r\n * @type {Array}\r\n */\r\nmodule.exports.ciphers = ['aes128', 'aes192', 'aes256', 'camellia128', 'camellia192', 'camellia256', 'des', 'des3', 'idea']\r\nvar ciphers = module.exports.ciphers\r\n\r\n/**\r\n * Creates a PasswordFile to hide the password form process infos via `ps auxf` etc.\r\n * @param {Object} options object of cipher, password and passType, mustPass, {cipher:'aes128', password:'xxxx', passType:\"in/out/word\"}, if the object empty we do nothing\r\n * @param {String} options.cipher cipher like 'aes128', 'aes192', 'aes256', 'camellia128', 'camellia192', 'camellia256', 'des', 'des3', 'idea'\r\n * @param {String} options.password password can be empty or at last 4 to 1023 chars\r\n * @param {String} options.passType passType: can be in/out/word for passIN/passOUT/passWORD\r\n * @param {Boolean} options.mustPass mustPass is used when you need to set the pass like as \"-password pass:\" most needed when empty password\r\n * @param {Object} params params will be extended with the data that need for the openssl command. IS USED AS POINTER!\r\n * @param {String} PasswordFileArray PasswordFileArray is an array of filePaths that later need to deleted ,after the openssl command. IS USED AS POINTER!\r\n * @return {Boolean} result\r\n */\r\nmodule.exports.createPasswordFile = function (options, params, PasswordFileArray) {\r\n  if (!options || !Object.prototype.hasOwnProperty.call(options, 'password') || !Object.prototype.hasOwnProperty.call(options, 'passType') || !/^(word|in|out)$/.test(options.passType)) {\r\n    return false\r\n  }\r\n  var PasswordFile = pathlib.join(tempDir, crypto.randomBytes(20).toString('hex'))\r\n  PasswordFileArray.push(PasswordFile)\r\n  options.password = options.password.trim()\r\n  if (options.password === '') {\r\n    options.mustPass = true\r\n  }\r\n  if (options.cipher && (ciphers.indexOf(options.cipher) !== -1)) {\r\n    params.push('-' + options.cipher)\r\n  }\r\n  params.push('-pass' + options.passType)\r\n  if (options.mustPass) {\r\n    params.push('pass:' + options.password)\r\n  } else {\r\n    fs.writeFileSync(PasswordFile, options.password)\r\n    params.push('file:' + PasswordFile)\r\n  }\r\n  return true\r\n}\r\n\r\n/**\r\n * Deletes a file or an array of files\r\n * @param {Array} files array of files that shoudld be deleted\r\n * @param {errorCallback} callback Callback function with an error object\r\n */\r\nmodule.exports.deleteTempFiles = function (files, callback) {\r\n  var rmFiles = []\r\n  if (typeof files === 'string') {\r\n    rmFiles.push(files)\r\n  } else if (Array.isArray(files)) {\r\n    rmFiles = files\r\n  } else {\r\n    return callback(new Error('Unexcepted files parameter type; only string or array supported'))\r\n  }\r\n  var deleteSeries = function (list, finalCallback) {\r\n    if (list.length) {\r\n      var file = list.shift()\r\n      var myCallback = function (err) {\r\n        if (err && err.code === 'ENOENT') {\r\n          // file doens't exist\r\n          return deleteSeries(list, finalCallback)\r\n        } else if (err) {\r\n          // other errors, e.g. maybe we don't have enough permission\r\n          return finalCallback(err)\r\n        } else {\r\n          return deleteSeries(list, finalCallback)\r\n        }\r\n      }\r\n      if (file && typeof file === 'string') {\r\n        fs.unlink(file, myCallback)\r\n      } else {\r\n        return deleteSeries(list, finalCallback)\r\n      }\r\n    } else {\r\n      return finalCallback(null) // no errors\r\n    }\r\n  }\r\n  deleteSeries(rmFiles, callback)\r\n}\r\n/**\r\n * Callback for return an error object.\r\n * @callback errorCallback\r\n * @param {Error} err - An Error Object or null\r\n */\n", "module.exports = isexe\nisexe.sync = sync\n\nvar fs = require('fs')\n\nfunction checkPathExt (path, options) {\n  var pathext = options.pathExt !== undefined ?\n    options.pathExt : process.env.PATHEXT\n\n  if (!pathext) {\n    return true\n  }\n\n  pathext = pathext.split(';')\n  if (pathext.indexOf('') !== -1) {\n    return true\n  }\n  for (var i = 0; i < pathext.length; i++) {\n    var p = pathext[i].toLowerCase()\n    if (p && path.substr(-p.length).toLowerCase() === p) {\n      return true\n    }\n  }\n  return false\n}\n\nfunction checkStat (stat, path, options) {\n  if (!stat.isSymbolicLink() && !stat.isFile()) {\n    return false\n  }\n  return checkPathExt(path, options)\n}\n\nfunction isexe (path, options, cb) {\n  fs.stat(path, function (er, stat) {\n    cb(er, er ? false : checkStat(stat, path, options))\n  })\n}\n\nfunction sync (path, options) {\n  return checkStat(fs.statSync(path), path, options)\n}\n", "module.exports = isexe\nisexe.sync = sync\n\nvar fs = require('fs')\n\nfunction isexe (path, options, cb) {\n  fs.stat(path, function (er, stat) {\n    cb(er, er ? false : checkStat(stat, options))\n  })\n}\n\nfunction sync (path, options) {\n  return checkStat(fs.statSync(path), options)\n}\n\nfunction checkStat (stat, options) {\n  return stat.isFile() && checkMode(stat, options)\n}\n\nfunction checkMode (stat, options) {\n  var mod = stat.mode\n  var uid = stat.uid\n  var gid = stat.gid\n\n  var myUid = options.uid !== undefined ?\n    options.uid : process.getuid && process.getuid()\n  var myGid = options.gid !== undefined ?\n    options.gid : process.getgid && process.getgid()\n\n  var u = parseInt('100', 8)\n  var g = parseInt('010', 8)\n  var o = parseInt('001', 8)\n  var ug = u | g\n\n  var ret = (mod & o) ||\n    (mod & g) && gid === myGid ||\n    (mod & u) && uid === myUid ||\n    (mod & ug) && myUid === 0\n\n  return ret\n}\n", "var fs = require('fs')\nvar core\nif (process.platform === 'win32' || global.TESTING_WINDOWS) {\n  core = require('./windows.js')\n} else {\n  core = require('./mode.js')\n}\n\nmodule.exports = isexe\nisexe.sync = sync\n\nfunction isexe (path, options, cb) {\n  if (typeof options === 'function') {\n    cb = options\n    options = {}\n  }\n\n  if (!cb) {\n    if (typeof Promise !== 'function') {\n      throw new TypeError('callback not provided')\n    }\n\n    return new Promise(function (resolve, reject) {\n      isexe(path, options || {}, function (er, is) {\n        if (er) {\n          reject(er)\n        } else {\n          resolve(is)\n        }\n      })\n    })\n  }\n\n  core(path, options || {}, function (er, is) {\n    // ignore EACCES because that just means we aren't allowed to run it\n    if (er) {\n      if (er.code === 'EACCES' || options && options.ignoreErrors) {\n        er = null\n        is = false\n      }\n    }\n    cb(er, is)\n  })\n}\n\nfunction sync (path, options) {\n  // my kingdom for a filtered catch\n  try {\n    return core.sync(path, options || {})\n  } catch (er) {\n    if (options && options.ignoreErrors || er.code === 'EACCES') {\n      return false\n    } else {\n      throw er\n    }\n  }\n}\n", "const isWindows = process.platform === 'win32' ||\n    process.env.OSTYPE === 'cygwin' ||\n    process.env.OSTYPE === 'msys'\n\nconst path = require('path')\nconst COLON = isWindows ? ';' : ':'\nconst isexe = require('isexe')\n\nconst getNotFoundError = (cmd) =>\n  Object.assign(new Error(`not found: ${cmd}`), { code: 'ENOENT' })\n\nconst getPathInfo = (cmd, opt) => {\n  const colon = opt.colon || COLON\n\n  // If it has a slash, then we don't bother searching the pathenv.\n  // just check the file itself, and that's it.\n  const pathEnv = cmd.match(/\\//) || isWindows && cmd.match(/\\\\/) ? ['']\n    : (\n      [\n        // windows always checks the cwd first\n        ...(isWindows ? [process.cwd()] : []),\n        ...(opt.path || process.env.PATH ||\n          /* istanbul ignore next: very unusual */ '').split(colon),\n      ]\n    )\n  const pathExtExe = isWindows\n    ? opt.pathExt || process.env.PATHEXT || '.EXE;.CMD;.BAT;.COM'\n    : ''\n  const pathExt = isWindows ? pathExtExe.split(colon) : ['']\n\n  if (isWindows) {\n    if (cmd.indexOf('.') !== -1 && pathExt[0] !== '')\n      pathExt.unshift('')\n  }\n\n  return {\n    pathEnv,\n    pathExt,\n    pathExtExe,\n  }\n}\n\nconst which = (cmd, opt, cb) => {\n  if (typeof opt === 'function') {\n    cb = opt\n    opt = {}\n  }\n  if (!opt)\n    opt = {}\n\n  const { pathEnv, pathExt, pathExtExe } = getPathInfo(cmd, opt)\n  const found = []\n\n  const step = i => new Promise((resolve, reject) => {\n    if (i === pathEnv.length)\n      return opt.all && found.length ? resolve(found)\n        : reject(getNotFoundError(cmd))\n\n    const ppRaw = pathEnv[i]\n    const pathPart = /^\".*\"$/.test(ppRaw) ? ppRaw.slice(1, -1) : ppRaw\n\n    const pCmd = path.join(pathPart, cmd)\n    const p = !pathPart && /^\\.[\\\\\\/]/.test(cmd) ? cmd.slice(0, 2) + pCmd\n      : pCmd\n\n    resolve(subStep(p, i, 0))\n  })\n\n  const subStep = (p, i, ii) => new Promise((resolve, reject) => {\n    if (ii === pathExt.length)\n      return resolve(step(i + 1))\n    const ext = pathExt[ii]\n    isexe(p + ext, { pathExt: pathExtExe }, (er, is) => {\n      if (!er && is) {\n        if (opt.all)\n          found.push(p + ext)\n        else\n          return resolve(p + ext)\n      }\n      return resolve(subStep(p, i, ii + 1))\n    })\n  })\n\n  return cb ? step(0).then(res => cb(null, res), cb) : step(0)\n}\n\nconst whichSync = (cmd, opt) => {\n  opt = opt || {}\n\n  const { pathEnv, pathExt, pathExtExe } = getPathInfo(cmd, opt)\n  const found = []\n\n  for (let i = 0; i < pathEnv.length; i ++) {\n    const ppRaw = pathEnv[i]\n    const pathPart = /^\".*\"$/.test(ppRaw) ? ppRaw.slice(1, -1) : ppRaw\n\n    const pCmd = path.join(pathPart, cmd)\n    const p = !pathPart && /^\\.[\\\\\\/]/.test(cmd) ? cmd.slice(0, 2) + pCmd\n      : pCmd\n\n    for (let j = 0; j < pathExt.length; j ++) {\n      const cur = p + pathExt[j]\n      try {\n        const is = isexe.sync(cur, { pathExt: pathExtExe })\n        if (is) {\n          if (opt.all)\n            found.push(cur)\n          else\n            return cur\n        }\n      } catch (ex) {}\n    }\n  }\n\n  if (opt.all && found.length)\n    return found\n\n  if (opt.nothrow)\n    return null\n\n  throw getNotFoundError(cmd)\n}\n\nmodule.exports = which\nwhich.sync = whichSync\n", "var helper = require('./helper.js')\nvar cpspawn = require('child_process').spawn\nvar pathlib = require('path')\nvar fs = require('fs')\nvar osTmpdir = require('os-tmpdir')\nvar crypto = require('crypto')\nvar which = require('which')\nvar settings = {}\nvar tempDir = process.env.PEMJS_TMPDIR || osTmpdir()\n\n/**\n * pem openssl module\n *\n * @module openssl\n */\n\n/**\n * configue this openssl module\n *\n * @static\n * @param {String} option name e.g. pathOpenSSL, openSslVersion; TODO rethink nomenclature\n * @param {*} value value\n */\nfunction set (option, value) {\n  settings[option] = value\n}\n\n/**\n * get configuration setting value\n *\n * @static\n * @param {String} option name\n */\nfunction get (option) {\n  return settings[option] || null\n}\n\n/**\n * Spawn an openssl command\n *\n * @static\n * @param {Array} params Array of openssl command line parameters\n * @param {String} searchStr String to use to find data\n * @param {Array} [tmpfiles] list of temporary files\n * @param {Function} callback Called with (error, stdout-substring)\n */\nfunction exec (params, searchStr, tmpfiles, callback) {\n  if (!callback && typeof tmpfiles === 'function') {\n    callback = tmpfiles\n    tmpfiles = false\n  }\n\n  spawnWrapper(params, tmpfiles, function (err, code, stdout, stderr) {\n    var start, end\n\n    if (err) {\n      return callback(err)\n    }\n\n    if ((start = stdout.match(new RegExp('\\\\-+BEGIN ' + searchStr + '\\\\-+$', 'm')))) {\n      start = start.index\n    } else {\n      start = -1\n    }\n\n    // To get the full EC key with parameters and private key\n    if (searchStr === 'EC PARAMETERS') {\n      searchStr = 'EC PRIVATE KEY'\n    }\n\n    if ((end = stdout.match(new RegExp('^\\\\-+END ' + searchStr + '\\\\-+', 'm')))) {\n      end = end.index + end[0].length\n    } else {\n      end = -1\n    }\n\n    if (start >= 0 && end >= 0) {\n      return callback(null, stdout.substring(start, end))\n    } else {\n      return callback(new Error(searchStr + ' not found from openssl output:\\n---stdout---\\n' + stdout + '\\n---stderr---\\n' + stderr + '\\ncode: ' + code))\n    }\n  })\n}\n\n/**\n *  Spawn an openssl command and get binary output\n *\n * @static\n * @param {Array} params Array of openssl command line parameters\n * @param {Array} [tmpfiles] list of temporary files\n * @param {Function} callback Called with (error, stdout)\n*/\nfunction execBinary (params, tmpfiles, callback) {\n  if (!callback && typeof tmpfiles === 'function') {\n    callback = tmpfiles\n    tmpfiles = false\n  }\n  spawnWrapper(params, tmpfiles, true, function (err, code, stdout, stderr) {\n    if (err) {\n      return callback(err)\n    }\n    return callback(null, stdout)\n  })\n}\n\n/**\n * Generically spawn openSSL, without processing the result\n *\n * @static\n * @param {Array}        params   The parameters to pass to openssl\n * @param {Boolean}      binary   Output of openssl is binary or text\n * @param {Function}     callback Called with (error, exitCode, stdout, stderr)\n */\nfunction spawn (params, binary, callback) {\n  var pathBin = get('pathOpenSSL') || process.env.OPENSSL_BIN || 'openssl'\n\n  testOpenSSLPath(pathBin, function (err) {\n    if (err) {\n      return callback(err)\n    }\n    var openssl = cpspawn(pathBin, params)\n    var stderr = ''\n\n    var stdout = (binary ? Buffer.alloc(0) : '')\n    openssl.stdout.on('data', function (data) {\n      if (!binary) {\n        stdout += data.toString('binary')\n      } else {\n        stdout = Buffer.concat([stdout, data])\n      }\n    })\n\n    openssl.stderr.on('data', function (data) {\n      stderr += data.toString('binary')\n    })\n    // We need both the return code and access to all of stdout.  Stdout isn't\n    // *really* available until the close event fires; the timing nuance was\n    // making this fail periodically.\n    var needed = 2 // wait for both exit and close.\n    var code = -1\n    var finished = false\n    var done = function (err) {\n      if (finished) {\n        return\n      }\n\n      if (err) {\n        finished = true\n        return callback(err)\n      }\n\n      if (--needed < 1) {\n        finished = true\n        if (code) {\n          if (code === 2 && (stderr === '' || /depth lookup: unable to/.test(stderr))) {\n            return callback(null, code, stdout, stderr)\n          }\n          return callback(new Error('Invalid openssl exit code: ' + code + '\\n% openssl ' + params.join(' ') + '\\n' + stderr), code)\n        } else {\n          return callback(null, code, stdout, stderr)\n        }\n      }\n    }\n\n    openssl.on('error', done)\n\n    openssl.on('exit', function (ret) {\n      code = ret\n      done()\n    })\n\n    openssl.on('close', function () {\n      stdout = (binary ? stdout : Buffer.from(stdout, 'binary').toString('utf-8'))\n      stderr = Buffer.from(stderr, 'binary').toString('utf-8')\n      done()\n    })\n  })\n}\n\n/**\n * Wrapper for spawn method\n *\n * @static\n * @param {Array} params The parameters to pass to openssl\n * @param {Array} [tmpfiles] list of temporary files\n * @param {Boolean} [binary] Output of openssl is binary or text\n * @param {Function} callback Called with (error, exitCode, stdout, stderr)\n */\nfunction spawnWrapper (params, tmpfiles, binary, callback) {\n  if (!callback && typeof binary === 'function') {\n    callback = binary\n    binary = false\n  }\n\n  var files = []\n  var delTempPWFiles = []\n\n  if (tmpfiles) {\n    tmpfiles = [].concat(tmpfiles)\n    var fpath, i\n    for (i = 0; i < params.length; i++) {\n      if (params[i] === '--TMPFILE--') {\n        fpath = pathlib.join(tempDir, crypto.randomBytes(20).toString('hex'))\n        files.push({\n          path: fpath,\n          contents: tmpfiles.shift()\n        })\n        params[i] = fpath\n        delTempPWFiles.push(fpath)\n      }\n    }\n  }\n\n  var file\n  for (i = 0; i < files.length; i++) {\n    file = files[i]\n    fs.writeFileSync(file.path, file.contents)\n  }\n\n  spawn(params, binary, function (err, code, stdout, stderr) {\n    helper.deleteTempFiles(delTempPWFiles, function (fsErr) {\n      callback(err || fsErr, code, stdout, stderr)\n    })\n  })\n}\n\n/**\n * Validates the pathBin for the openssl command\n *\n * @private\n * @param {String} pathBin The path to OpenSSL Bin\n * @param {Function} callback Callback function with an error object\n */\nfunction testOpenSSLPath (pathBin, callback) {\n  which(pathBin, function (error) {\n    if (error) {\n      return callback(new Error('Could not find openssl on your system on this path: ' + pathBin))\n    }\n    callback()\n  })\n}\n\n/* Once PEM is imported, the openSslVersion is set with this function. */\nspawn(['version'], false, function (err, code, stdout, stderr) {\n  var text = String(stdout) + '\\n' + String(stderr) + '\\n' + String(err)\n  var tmp = text.match(/^LibreSSL/i)\n  set('openSslVersion', (tmp && tmp[0] ? 'LibreSSL' : 'openssl').toUpperCase())\n})\n\nmodule.exports = {\n  exec: exec,\n  execBinary: execBinary,\n  spawn: spawn,\n  spawnWrapper: spawnWrapper,\n  set: set,\n  get: get\n}\n", "'use strict'\n\nvar openssl = require('./openssl.js')\nvar helper = require('./helper.js')\n\n// PEM format: .pem, .crt, .cer (!bin), .key\n// base64 encoded; the cert file might also include the private key; so key file is optional\n\n// DER format: .der, .cer (bin)\n// binary encoded format; cannot include key file\n\n// PKCS#7 / P7B format: .p7b, .p7c\n// contains cert and ca chain cert files, but not the key file\n// A PKCS7 certificate is serialized using either PEM or DER format.\n\n// PKCS#12 / PFX format: .pfx, .p12\n// contains all files: key file, cert and ca chain cert files\n\n/**\n * pem convert module\n *\n * @module convert\n */\n\n/**\n * conversion from PEM to DER format\n * if private key is included in PEM encoded file, it won't be included in DER file\n * use this method with type 'rsa' to export private key in that case\n * @param  {String} pathIN  path of the PEM encoded certificate file\n * @param  {String} pathOUT path of the DER encoded certificate file to generate\n * @param  {String} [type] type of file, use 'rsa' for key file, 'x509' otherwise or leave this parameter out\n * @param  {Function} callback callback method called with error, boolean result\n */\nmodule.exports.PEM2DER = function (pathIN, pathOUT, type, callback) {\n  if (!callback && typeof type === 'function') {\n    callback = type\n    type = 'x509'\n  }\n  var params = [\n    type,\n    '-outform',\n    'der',\n    '-in',\n    pathIN,\n    '-out',\n    pathOUT\n  ]\n  openssl.spawnWrapper(params, false, function (error, code) {\n    if (error) {\n      callback(error)\n    } else {\n      callback(null, code === 0)\n    }\n  })\n}\n\n/**\n * conversion from DER to PEM format\n * @param  {String} pathIN  path of the DER encoded certificate file\n * @param  {String} pathOUT path of the PEM encoded certificate file to generate\n * @param  {String} [type] type of file, use 'rsa' for key file, 'x509' otherwise or leave this parameter out\n * @param  {Function} callback callback method called with error, boolean result\n */\nmodule.exports.DER2PEM = function (pathIN, pathOUT, type, callback) {\n  if (!callback && typeof type === 'function') {\n    callback = type\n    type = 'x509'\n  }\n  var params = [\n    type,\n    '-inform',\n    'der',\n    '-in',\n    pathIN,\n    '-out',\n    pathOUT\n  ]\n  openssl.spawnWrapper(params, false, function (error, code) {\n    if (error) {\n      callback(error)\n    } else {\n      callback(null, code === 0)\n    }\n  })\n}\n\n/**\n * conversion from PEM to P7B format\n * @param  {Object} pathBundleIN  paths of the PEM encoded certificate files ({cert: '...', ca: '...' or ['...', ...]})\n * @param  {String} pathOUT path of the P7B encoded certificate file to generate\n * @param  {Function} callback callback method called with error, boolean result\n */\nmodule.exports.PEM2P7B = function (pathBundleIN, pathOUT, callback) {\n  var params = [\n    'crl2pkcs7',\n    '-nocrl',\n    '-certfile',\n    pathBundleIN.cert,\n    '-out',\n    pathOUT\n  ]\n  if (pathBundleIN.ca) {\n    if (!Array.isArray(pathBundleIN.ca)) {\n      pathBundleIN.ca = [pathBundleIN.ca]\n    }\n    pathBundleIN.ca.forEach(function (ca) {\n      params.push('-certfile')\n      params.push(ca)\n    })\n  }\n  openssl.spawnWrapper(params, false, function (error, code) {\n    if (error) {\n      callback(error)\n    } else {\n      callback(null, code === 0)\n    }\n  })\n}\n\n/**\n * conversion from P7B to PEM format\n * @param  {String} pathIN  path of the P7B encoded certificate file\n * @param  {String} pathOUT path of the PEM encoded certificate file to generate\n * @param  {Function} callback callback method called with error, boolean result\n */\nmodule.exports.P7B2PEM = function (pathIN, pathOUT, callback) {\n  var params = [\n    'pkcs7',\n    '-print_certs',\n    '-in',\n    pathIN,\n    '-out',\n    pathOUT\n  ]\n  openssl.spawnWrapper(params, false, function (error, code) {\n    if (error) {\n      callback(error)\n    } else {\n      callback(null, code === 0)\n    }\n  })\n}// TODO: CA also included?\n\n/**\n * conversion from PEM to PFX\n * @param  {Object} pathBundleIN paths of the PEM encoded certificate files ({cert: '...', key: '...', ca: '...' or ['...', ...]})\n * @param  {String} pathOUT path of the PFX encoded certificate file to generate\n * @param  {String} password password to set for accessing the PFX file\n * @param  {Function} callback callback method called with error, boolean result\n */\nmodule.exports.PEM2PFX = function (pathBundleIN, pathOUT, password, callback) {\n  var params = [\n    'pkcs12',\n    '-export',\n    '-out',\n    pathOUT,\n    '-inkey',\n    pathBundleIN.key,\n    '-in',\n    pathBundleIN.cert\n  ]\n  if (pathBundleIN.ca) {\n    if (!Array.isArray(pathBundleIN.ca)) {\n      pathBundleIN.ca = [pathBundleIN.ca]\n    }\n    pathBundleIN.ca.forEach(function (ca) {\n      params.push('-certfile')\n      params.push(ca)\n    })\n  }\n  var delTempPWFiles = []\n  helper.createPasswordFile({ cipher: '', password: password, passType: 'in' }, params, delTempPWFiles)\n  helper.createPasswordFile({ cipher: '', password: password, passType: 'out' }, params, delTempPWFiles)\n  openssl.spawnWrapper(params, false, function (error, code) {\n    function done (error) {\n      if (error) {\n        callback(error)\n      } else {\n        callback(null, code === 0)\n      }\n    }\n    helper.deleteTempFiles(delTempPWFiles, function (fsErr) {\n      done(error || fsErr)\n    })\n  })\n}\n\n/**\n * conversion from PFX to PEM\n * @param  {Object} pathIN  path of the PFX encoded certificate file\n * @param  {String} pathOUT path of the PEM encoded certificate file to generate\n * @param  {String} password password to set for accessing the PFX file\n * @param  {Function} callback callback method called with error, boolean result\n */\nmodule.exports.PFX2PEM = function (pathIN, pathOUT, password, callback) {\n  var params = [\n    'pkcs12',\n    '-in',\n    pathIN,\n    '-out',\n    pathOUT,\n    '-nodes'\n  ]\n  var delTempPWFiles = []\n  helper.createPasswordFile({ cipher: '', password: password, passType: 'in' }, params, delTempPWFiles)\n  helper.createPasswordFile({ cipher: '', password: password, passType: 'out' }, params, delTempPWFiles)\n  openssl.spawnWrapper(params, false, function (error, code) {\n    function done (error) {\n      if (error) {\n        callback(error)\n      } else {\n        callback(null, code === 0)\n      }\n    }\n    helper.deleteTempFiles(delTempPWFiles, function (fsErr) {\n      done(error || fsErr)\n    })\n  })\n}\n\n/**\n * conversion from P7B to PFX/PKCS#12\n * @param  {Object} pathBundleIN  paths of the PEM encoded certificate files ({cert: '...', key: '...', ca: '...' or ['...', ...]})\n * @param  {String} pathOUT path of the PFX certificate file to generate\n * @param  {String} password password to be set for the PFX file and to be used to access the key file\n * @param  {Function} callback callback method called with error, boolean result\n */\nmodule.exports.P7B2PFX = function (pathBundleIN, pathOUT, password, callback) {\n  var tmpfile = pathBundleIN.cert.replace(/\\.[^.]+$/, '.cer')\n  var params = [\n    'pkcs7',\n    '-print_certs',\n    '-in',\n    pathBundleIN.cert,\n    '-out',\n    tmpfile\n  ]\n  openssl.spawnWrapper(params, false, function (error, code) {\n    if (error) {\n      callback(error)\n    } else {\n      var params = [\n        'pkcs12',\n        '-export',\n        '-in',\n        tmpfile,\n        '-inkey',\n        pathBundleIN.key,\n        '-out',\n        pathOUT\n      ]\n      if (pathBundleIN.ca) {\n        if (!Array.isArray(pathBundleIN.ca)) {\n          pathBundleIN.ca = [pathBundleIN.ca]\n        }\n        pathBundleIN.ca.forEach(function (ca) {\n          params.push('-certfile')\n          params.push(ca)\n        })\n      }\n      var delTempPWFiles = [tmpfile]\n      helper.createPasswordFile({ cipher: '', password: password, passType: 'in' }, params, delTempPWFiles)\n      helper.createPasswordFile({ cipher: '', password: password, passType: 'out' }, params, delTempPWFiles)\n      openssl.spawnWrapper(params, false, function (error, code) {\n        function done (error) {\n          if (error) {\n            callback(error)\n          } else {\n            callback(null, code === 0)\n          }\n        }\n        helper.deleteTempFiles(delTempPWFiles, function (fsErr) {\n          done(error || fsErr)\n        })\n      })\n    }\n  })\n}\n", "'use strict'\n\n/**\n * pem module\n *\n * @module pem\n */\n\nconst { promisify } = require('es6-promisify')\nvar net = require('net')\nvar helper = require('./helper.js')\nvar openssl = require('./openssl.js')\n\nmodule.exports.createPrivateKey = createPrivateKey\nmodule.exports.createDhparam = createDhparam\nmodule.exports.createEcparam = createEcparam\nmodule.exports.createCSR = createCSR\nmodule.exports.createCertificate = createCertificate\nmodule.exports.readCertificateInfo = readCertificateInfo\nmodule.exports.getPublicKey = getPublicKey\nmodule.exports.getFingerprint = getFingerprint\nmodule.exports.getModulus = getModulus\nmodule.exports.getDhparamInfo = getDhparamInfo\nmodule.exports.createPkcs12 = createPkcs12\nmodule.exports.readPkcs12 = readPkcs12\nmodule.exports.verifySigningChain = verifySigningChain\nmodule.exports.checkCertificate = checkCertificate\nmodule.exports.checkPkcs12 = checkPkcs12\nmodule.exports.config = config\n\n/**\n * quick access the convert module\n * @type {module:convert}\n */\nmodule.exports.convert = require('./convert.js')\n\nvar KEY_START = '-----BEGIN PRIVATE KEY-----'\nvar KEY_END = '-----END PRIVATE KEY-----'\nvar RSA_KEY_START = '-----BEGIN RSA PRIVATE KEY-----'\nvar RSA_KEY_END = '-----END RSA PRIVATE KEY-----'\nvar ENCRYPTED_KEY_START = '-----BEGIN ENCRYPTED PRIVATE KEY-----'\nvar ENCRYPTED_KEY_END = '-----END ENCRYPTED PRIVATE KEY-----'\nvar CERT_START = '-----BEGIN CERTIFICATE-----'\nvar CERT_END = '-----END CERTIFICATE-----'\n\n/**\n * Creates a private key\n *\n * @static\n * @param {Number} [keyBitsize=2048] Size of the key, defaults to 2048bit\n * @param {Object} [options] object of cipher and password {cipher:'aes128',password:'xxx'}, defaults empty object\n * @param {String} [options.cipher] string of the cipher for the encryption - needed with password\n * @param {String} [options.password] string of the cipher password for the encryption needed with cipher\n * @param {Function} callback Callback function with an error object and {key}\n */\nfunction createPrivateKey (keyBitsize, options, callback) {\n  if (!callback && !options && typeof keyBitsize === 'function') {\n    callback = keyBitsize\n    keyBitsize = undefined\n    options = {}\n  } else if (!callback && keyBitsize && typeof options === 'function') {\n    callback = options\n    options = {}\n  }\n\n  keyBitsize = Number(keyBitsize) || 2048\n\n  var params = ['genrsa']\n  var delTempPWFiles = []\n\n  if (options && options.cipher && (Number(helper.ciphers.indexOf(options.cipher)) !== -1) && options.password) {\n    helper.createPasswordFile({ cipher: options.cipher, password: options.password, passType: 'out' }, params, delTempPWFiles)\n  }\n\n  params.push(keyBitsize)\n\n  openssl.exec(params, 'RSA PRIVATE KEY', function (sslErr, key) {\n    function done (err) {\n      if (err) {\n        return callback(err)\n      }\n      callback(null, {\n        key: key\n      })\n    }\n    helper.deleteTempFiles(delTempPWFiles, function (fsErr) {\n      done(sslErr || fsErr)\n    })\n  })\n}\n\n/**\n * Creates a dhparam key\n *\n * @static\n * @param {Number} [keyBitsize=512] Size of the key, defaults to 512bit\n * @param {Function} callback Callback function with an error object and {dhparam}\n */\nfunction createDhparam (keyBitsize, callback) {\n  if (!callback && typeof keyBitsize === 'function') {\n    callback = keyBitsize\n    keyBitsize = undefined\n  }\n\n  keyBitsize = Number(keyBitsize) || 512\n\n  var params = ['dhparam',\n    '-outform',\n    'PEM',\n    keyBitsize\n  ]\n\n  openssl.exec(params, 'DH PARAMETERS', function (error, dhparam) {\n    if (error) {\n      return callback(error)\n    }\n    return callback(null, {\n      dhparam: dhparam\n    })\n  })\n}\n\n/**\n * Creates a ecparam key\n * @static\n * @param {String} [keyName=secp256k1] Name of the key, defaults to secp256k1\n * @param {String} [paramEnc=explicit] Encoding of the elliptic curve parameters, defaults to explicit\n * @param {Boolean} [noOut=false] This option inhibits the output of the encoded version of the parameters.\n * @param {Function} callback Callback function with an error object and {ecparam}\n */\nfunction createEcparam (keyName, paramEnc, noOut, callback) {\n  if (!callback && typeof noOut === 'undefined' && !paramEnc && typeof keyName === 'function') {\n    callback = keyName\n    keyName = undefined\n  } else if (!callback && typeof noOut === 'undefined' && keyName && typeof paramEnc === 'function') {\n    callback = paramEnc\n    paramEnc = undefined\n  } else if (!callback && typeof noOut === 'function' && keyName && paramEnc) {\n    callback = noOut\n    noOut = undefined\n  }\n\n  keyName = keyName || 'secp256k1'\n  paramEnc = paramEnc || 'explicit'\n  noOut = noOut || false\n\n  var params = ['ecparam',\n    '-name',\n    keyName,\n    '-genkey',\n    '-param_enc',\n    paramEnc\n  ]\n\n  var searchString = 'EC PARAMETERS'\n  if (noOut) {\n    params.push('-noout')\n    searchString = 'EC PRIVATE KEY'\n  }\n\n  openssl.exec(params, searchString, function (error, ecparam) {\n    if (error) {\n      return callback(error)\n    }\n    return callback(null, {\n      ecparam: ecparam\n    })\n  })\n}\n\n/**\n * Creates a Certificate Signing Request\n * If client key is undefined, a new key is created automatically. The used key is included\n * in the callback return as clientKey\n * @static\n * @param {Object} [options] Optional options object\n * @param {String} [options.clientKey] Optional client key to use\n * @param {Number} [options.keyBitsize] If clientKey is undefined, bit size to use for generating a new key (defaults to 2048)\n * @param {String} [options.hash] Hash function to use (either md5 sha1 or sha256, defaults to sha256)\n * @param {String} [options.country] CSR country field\n * @param {String} [options.state] CSR state field\n * @param {String} [options.locality] CSR locality field\n * @param {String} [options.organization] CSR organization field\n * @param {String} [options.organizationUnit] CSR organizational unit field\n * @param {String} [options.commonName='localhost'] CSR common name field\n * @param {String} [options.emailAddress] CSR email address field\n * @param {String} [options.csrConfigFile] CSR config file\n * @param {Array}  [options.altNames] is a list of subjectAltNames in the subjectAltName field\n * @param {Function} callback Callback function with an error object and {csr, clientKey}\n */\nfunction createCSR (options, callback) {\n  if (!callback && typeof options === 'function') {\n    callback = options\n    options = undefined\n  }\n\n  options = options || {}\n\n  // http://stackoverflow.com/questions/14089872/why-does-node-js-accept-ip-addresses-in-certificates-only-for-san-not-for-cn\n  if (options.commonName && (net.isIPv4(options.commonName) || net.isIPv6(options.commonName))) {\n    if (!options.altNames) {\n      options.altNames = [options.commonName]\n    } else if (options.altNames.indexOf(options.commonName) === -1) {\n      options.altNames = options.altNames.concat([options.commonName])\n    }\n  }\n\n  if (!options.clientKey) {\n    createPrivateKey(options.keyBitsize || 2048, function (error, keyData) {\n      if (error) {\n        return callback(error)\n      }\n      options.clientKey = keyData.key\n      createCSR(options, callback)\n    })\n    return\n  }\n\n  var params = ['req',\n    '-new',\n    '-' + (options.hash || 'sha256')\n  ]\n\n  if (options.csrConfigFile) {\n    params.push('-config')\n    params.push(options.csrConfigFile)\n  } else {\n    params.push('-subj')\n    params.push(generateCSRSubject(options))\n  }\n\n  params.push('-key')\n  params.push('--TMPFILE--')\n\n  var tmpfiles = [options.clientKey]\n  var config = null\n\n  if (options.altNames && Array.isArray(options.altNames) && options.altNames.length) {\n    params.push('-extensions')\n    params.push('v3_req')\n    params.push('-config')\n    params.push('--TMPFILE--')\n    var altNamesRep = []\n    for (var i = 0; i < options.altNames.length; i++) {\n      altNamesRep.push((net.isIP(options.altNames[i]) ? 'IP' : 'DNS') + '.' + (i + 1) + ' = ' + options.altNames[i])\n    }\n\n    tmpfiles.push(config = [\n      '[req]',\n      'req_extensions = v3_req',\n      'distinguished_name = req_distinguished_name',\n      '[v3_req]',\n      'subjectAltName = @alt_names',\n      '[alt_names]',\n      altNamesRep.join('\\n'),\n      '[req_distinguished_name]',\n      'commonName = Common Name',\n      'commonName_max = 64'\n    ].join('\\n'))\n  } else if (options.config) {\n    config = options.config\n  }\n\n  var delTempPWFiles = []\n  if (options.clientKeyPassword) {\n    helper.createPasswordFile({ cipher: '', password: options.clientKeyPassword, passType: 'in' }, params, delTempPWFiles)\n  }\n\n  openssl.exec(params, 'CERTIFICATE REQUEST', tmpfiles, function (sslErr, data) {\n    function done (err) {\n      if (err) {\n        return callback(err)\n      }\n      callback(null, {\n        csr: data,\n        config: config,\n        clientKey: options.clientKey\n      })\n    }\n    helper.deleteTempFiles(delTempPWFiles, function (fsErr) {\n      done(sslErr || fsErr)\n    })\n  })\n}\n\n/**\n * Creates a certificate based on a CSR. If CSR is not defined, a new one\n * will be generated automatically. For CSR generation all the options values\n * can be used as with createCSR.\n * @static\n * @param {Object} [options] Optional options object\n * @param {String} [options.serviceCertificate] PEM encoded certificate\n * @param {String} [options.serviceKey] Private key for signing the certificate, if not defined a new one is generated\n * @param {String} [options.serviceKeyPassword] Password of the service key\n * @param {Boolean} [options.selfSigned] If set to true and serviceKey is not defined, use clientKey for signing\n * @param {String|Number} [options.serial] Set a serial max. 20 octets - only together with options.serviceCertificate\n * @param {String} [options.serialFile] Set the name of the serial file, without extension. - only together with options.serviceCertificate and never in tandem with options.serial\n * @param {String} [options.hash] Hash function to use (either md5 sha1 or sha256, defaults to sha256)\n * @param {String} [options.csr] CSR for the certificate, if not defined a new one is generated\n * @param {Number} [options.days] Certificate expire time in days\n * @param {String} [options.clientKeyPassword] Password of the client key\n * @param {String} [options.extFile] extension config file - without '-extensions v3_req'\n * @param {String} [options.config] extension config file - with '-extensions v3_req'\n * @param {String} [options.csrConfigFile] CSR config file - only used if no options.csr is provided\n * @param {Array}  [options.altNames] is a list of subjectAltNames in the subjectAltName field - only used if no options.csr is provided\n * @param {Function} callback Callback function with an error object and {certificate, csr, clientKey, serviceKey}\n */\nfunction createCertificate (options, callback) {\n  if (!callback && typeof options === 'function') {\n    callback = options\n    options = undefined\n  }\n\n  options = options || {}\n\n  if (!options.csr) {\n    createCSR(options, function (error, keyData) {\n      if (error) {\n        return callback(error)\n      }\n      options.csr = keyData.csr\n      options.config = keyData.config\n      options.clientKey = keyData.clientKey\n      createCertificate(options, callback)\n    })\n    return\n  }\n\n  if (!options.clientKey) {\n    options.clientKey = ''\n  }\n\n  if (!options.serviceKey) {\n    if (options.selfSigned) {\n      options.serviceKey = options.clientKey\n    } else {\n      createPrivateKey(options.keyBitsize || 2048, function (error, keyData) {\n        if (error) {\n          return callback(error)\n        }\n        options.serviceKey = keyData.key\n        createCertificate(options, callback)\n      })\n      return\n    }\n  }\n\n  readCertificateInfo(options.csr, function (error2, data2) {\n    if (error2) {\n      return callback(error2)\n    }\n\n    var params = ['x509',\n      '-req',\n      '-' + (options.hash || 'sha256'),\n      '-days',\n      Number(options.days) || '365',\n      '-in',\n      '--TMPFILE--'\n    ]\n    var tmpfiles = [options.csr]\n    var delTempPWFiles = []\n\n    if (options.serviceCertificate) {\n      params.push('-CA')\n      params.push('--TMPFILE--')\n      params.push('-CAkey')\n      params.push('--TMPFILE--')\n      if (options.serial) {\n        params.push('-set_serial')\n        if (helper.isNumber(options.serial)) {\n        // set the serial to the max lenth of 20 octets ()\n        // A certificate serial number is not decimal conforming. That is the\n        // bytes in a serial number do not necessarily map to a printable ASCII\n        // character.\n        // eg: 0x00 is a valid serial number and can not be represented in a\n        // human readable format (atleast one that can be directly mapped to\n        // the ACSII table).\n          params.push('0x' + ('0000000000000000000000000000000000000000' + options.serial.toString(16)).slice(-40))\n        } else {\n          if (helper.isHex(options.serial)) {\n            if (options.serial.startsWith('0x')) {\n              options.serial = options.serial.substring(2, options.serial.length)\n            }\n            params.push('0x' + ('0000000000000000000000000000000000000000' + options.serial).slice(-40))\n          } else {\n            params.push('0x' + ('0000000000000000000000000000000000000000' + helper.toHex(options.serial)).slice(-40))\n          }\n        }\n      } else {\n        params.push('-CAcreateserial')\n        if (options.serialFile) {\n          params.push('-CAserial')\n          params.push(options.serialFile + '.srl')\n        }\n      }\n      if (options.serviceKeyPassword) {\n        helper.createPasswordFile({ cipher: '', password: options.serviceKeyPassword, passType: 'in' }, params, delTempPWFiles)\n      }\n      tmpfiles.push(options.serviceCertificate)\n      tmpfiles.push(options.serviceKey)\n    } else {\n      params.push('-signkey')\n      params.push('--TMPFILE--')\n      if (options.serviceKeyPassword) {\n        helper.createPasswordFile({ cipher: '', password: options.serviceKeyPassword, passType: 'in' }, params, delTempPWFiles)\n      }\n      tmpfiles.push(options.serviceKey)\n    }\n\n    if (options.config) {\n      params.push('-extensions')\n      params.push('v3_req')\n      params.push('-extfile')\n      params.push('--TMPFILE--')\n      tmpfiles.push(options.config)\n    } else if (options.extFile) {\n      params.push('-extfile')\n      params.push(options.extFile)\n    } else {\n      var altNamesRep = []\n      if (data2 && data2.san) {\n        for (var i = 0; i < data2.san.dns.length; i++) {\n          altNamesRep.push('DNS' + '.' + (i + 1) + ' = ' + data2.san.dns[i])\n        }\n        for (var i2 = 0; i2 < data2.san.ip.length; i2++) {\n          altNamesRep.push('IP' + '.' + (i2 + 1) + ' = ' + data2.san.ip[i2])\n        }\n        for (var i3 = 0; i3 < data2.san.email.length; i3++) {\n          altNamesRep.push('email' + '.' + (i3 + 1) + ' = ' + data2.san.email[i3])\n        }\n        params.push('-extensions')\n        params.push('v3_req')\n        params.push('-extfile')\n        params.push('--TMPFILE--')\n        tmpfiles.push([\n          '[v3_req]',\n          'subjectAltName = @alt_names',\n          '[alt_names]',\n          altNamesRep.join('\\n')\n        ].join('\\n'))\n      }\n    }\n\n    if (options.clientKeyPassword) {\n      helper.createPasswordFile({ cipher: '', password: options.clientKeyPassword, passType: 'in' }, params, delTempPWFiles)\n    }\n\n    openssl.exec(params, 'CERTIFICATE', tmpfiles, function (sslErr, data) {\n      function done (err) {\n        if (err) {\n          return callback(err)\n        }\n        var response = {\n          csr: options.csr,\n          clientKey: options.clientKey,\n          certificate: data,\n          serviceKey: options.serviceKey\n        }\n        return callback(null, response)\n      }\n\n      helper.deleteTempFiles(delTempPWFiles, function (fsErr) {\n        done(sslErr || fsErr)\n      })\n    })\n  })\n}\n\n/**\n * Exports a public key from a private key, CSR or certificate\n * @static\n * @param {String} certificate PEM encoded private key, CSR or certificate\n * @param {Function} callback Callback function with an error object and {publicKey}\n */\nfunction getPublicKey (certificate, callback) {\n  if (!callback && typeof certificate === 'function') {\n    callback = certificate\n    certificate = undefined\n  }\n\n  certificate = (certificate || '').toString()\n\n  var params\n\n  if (certificate.match(/BEGIN(\\sNEW)? CERTIFICATE REQUEST/)) {\n    params = ['req',\n      '-in',\n      '--TMPFILE--',\n      '-pubkey',\n      '-noout'\n    ]\n  } else if (certificate.match(/BEGIN RSA PRIVATE KEY/) || certificate.match(/BEGIN PRIVATE KEY/)) {\n    params = ['rsa',\n      '-in',\n      '--TMPFILE--',\n      '-pubout'\n    ]\n  } else {\n    params = ['x509',\n      '-in',\n      '--TMPFILE--',\n      '-pubkey',\n      '-noout'\n    ]\n  }\n\n  openssl.exec(params, 'PUBLIC KEY', certificate, function (error, key) {\n    if (error) {\n      return callback(error)\n    }\n    return callback(null, {\n      publicKey: key\n    })\n  })\n}\n\n/**\n * Reads subject data from a certificate or a CSR\n * @static\n * @param {String} certificate PEM encoded CSR or certificate\n * @param {Function} callback Callback function with an error object and {country, state, locality, organization, organizationUnit, commonName, emailAddress}\n */\nfunction readCertificateInfo (certificate, callback) {\n  if (!callback && typeof certificate === 'function') {\n    callback = certificate\n    certificate = undefined\n  }\n\n  certificate = (certificate || '').toString()\n  var isMatch = certificate.match(/BEGIN(\\sNEW)? CERTIFICATE REQUEST/)\n  var type = isMatch ? 'req' : 'x509'\n  var params = [type,\n    '-noout',\n    '-nameopt',\n    'RFC2253,sep_multiline,space_eq,-esc_msb,utf8',\n    '-text',\n    '-in',\n    '--TMPFILE--'\n  ]\n  openssl.spawnWrapper(params, certificate, function (err, code, stdout, stderr) {\n    if (err) {\n      return callback(err)\n    } else if (stderr) {\n      return callback(stderr)\n    }\n    return fetchCertificateData(stdout, callback)\n  })\n}\n\n/**\n * get the modulus from a certificate, a CSR or a private key\n * @static\n * @param {String} certificate PEM encoded, CSR PEM encoded, or private key\n * @param {String} [password] password for the certificate\n * @param {String} [hash] hash function to use (up to now `md5` supported) (default: none)\n * @param {Function} callback Callback function with an error object and {modulus}\n */\nfunction getModulus (certificate, password, hash, callback) {\n  if (!callback && !hash && typeof password === 'function') {\n    callback = password\n    password = undefined\n    hash = false\n  } else if (!callback && hash && typeof hash === 'function') {\n    callback = hash\n    hash = false\n    // password will be falsy if not provided\n  }\n  // adding hash function to params, is not supported by openssl.\n  // process piping would be the right way (... | openssl md5)\n  // No idea how this can be achieved in easy with the current build in methods\n  // of pem.\n  if (hash && hash !== 'md5') {\n    hash = false\n  }\n\n  certificate = (Buffer.isBuffer(certificate) && certificate.toString()) || certificate\n\n  var type = ''\n  if (certificate.match(/BEGIN(\\sNEW)? CERTIFICATE REQUEST/)) {\n    type = 'req'\n  } else if (certificate.match(/BEGIN RSA PRIVATE KEY/) || certificate.match(/BEGIN PRIVATE KEY/)) {\n    type = 'rsa'\n  } else {\n    type = 'x509'\n  }\n  var params = [\n    type,\n    '-noout',\n    '-modulus',\n    '-in',\n    '--TMPFILE--'\n  ]\n  var delTempPWFiles = []\n  if (password) {\n    helper.createPasswordFile({ cipher: '', password: password, passType: 'in' }, params, delTempPWFiles)\n  }\n\n  openssl.spawnWrapper(params, certificate, function (sslErr, code, stdout, stderr) {\n    function done (err) {\n      if (err) {\n        return callback(err)\n      }\n      var match = stdout.match(/Modulus=([0-9a-fA-F]+)$/m)\n      if (match) {\n        return callback(null, {\n          modulus: hash ? require(hash)(match[1]) : match[1]\n        })\n      } else {\n        return callback(new Error('No modulus'))\n      }\n    }\n    helper.deleteTempFiles(delTempPWFiles, function (fsErr) {\n      done(sslErr || fsErr || stderr)\n    })\n  })\n}\n\n/**\n * get the size and prime of DH parameters\n * @static\n * @param {String} DH parameters PEM encoded\n * @param {Function} callback Callback function with an error object and {size, prime}\n */\nfunction getDhparamInfo (dh, callback) {\n  dh = (Buffer.isBuffer(dh) && dh.toString()) || dh\n\n  var params = [\n    'dhparam',\n    '-text',\n    '-in',\n    '--TMPFILE--'\n  ]\n\n  openssl.spawnWrapper(params, dh, function (err, code, stdout, stderr) {\n    if (err) {\n      return callback(err)\n    } else if (stderr) {\n      return callback(stderr)\n    }\n\n    var result = {}\n    var match = stdout.match(/Parameters: \\((\\d+) bit\\)/)\n\n    if (match) {\n      result.size = Number(match[1])\n    }\n\n    var prime = ''\n    stdout.split('\\n').forEach(function (line) {\n      if (/\\s+([0-9a-f][0-9a-f]:)+[0-9a-f]?[0-9a-f]?/g.test(line)) {\n        prime += line.trim()\n      }\n    })\n\n    if (prime) {\n      result.prime = prime\n    }\n\n    if (!match && !prime) {\n      return callback(new Error('No DH info found'))\n    }\n\n    return callback(null, result)\n  })\n}\n\n/**\n * config the pem module\n * @static\n * @param {Object} options\n */\nfunction config (options) {\n  Object.keys(options).forEach(function (k) {\n    openssl.set(k, options[k])\n  })\n}\n\n/**\n * Gets the fingerprint for a certificate\n * @static\n * @param {String} PEM encoded certificate\n * @param {String} [hash] hash function to use (either `md5`, `sha1` or `sha256`, defaults to `sha1`)\n * @param {Function} callback Callback function with an error object and {fingerprint}\n */\nfunction getFingerprint (certificate, hash, callback) {\n  if (!callback && typeof hash === 'function') {\n    callback = hash\n    hash = undefined\n  }\n\n  hash = hash || 'sha1'\n\n  var params = ['x509',\n    '-in',\n    '--TMPFILE--',\n    '-fingerprint',\n    '-noout',\n    '-' + hash\n  ]\n\n  openssl.spawnWrapper(params, certificate, function (err, code, stdout, stderr) {\n    if (err) {\n      return callback(err)\n    } else if (stderr) {\n      return callback(stderr)\n    }\n    var match = stdout.match(/Fingerprint=([0-9a-fA-F:]+)$/m)\n    if (match) {\n      return callback(null, {\n        fingerprint: match[1]\n      })\n    } else {\n      return callback(new Error('No fingerprint'))\n    }\n  })\n}\n\n/**\n * Export private key and certificate to a PKCS12 keystore\n * @static\n * @param {String} PEM encoded private key\n * @param {String} PEM encoded certificate\n * @param {String} Password of the result PKCS12 file\n * @param {Object} [options] object of cipher and optional client key password {cipher:'aes128', clientKeyPassword: 'xxxx', certFiles: ['file1','file2']}\n * @param {Function} callback Callback function with an error object and {pkcs12}\n */\nfunction createPkcs12 (key, certificate, password, options, callback) {\n  if (!callback && typeof options === 'function') {\n    callback = options\n    options = {}\n  }\n\n  var params = ['pkcs12', '-export']\n  var delTempPWFiles = []\n\n  if (options.cipher && options.clientKeyPassword) {\n    // NOTICE: The password field is needed! self if it is empty.\n    // create password file for the import \"-passin\"\n    helper.createPasswordFile({ cipher: options.cipher, password: options.clientKeyPassword, passType: 'in' }, params, delTempPWFiles)\n  }\n  // NOTICE: The password field is needed! self if it is empty.\n  // create password file for the password \"-password\"\n  helper.createPasswordFile({ cipher: '', password: password, passType: 'word' }, params, delTempPWFiles)\n\n  params.push('-in')\n  params.push('--TMPFILE--')\n  params.push('-inkey')\n  params.push('--TMPFILE--')\n\n  var tmpfiles = [certificate, key]\n\n  if (options.certFiles) {\n    tmpfiles.push(options.certFiles.join(''))\n\n    params.push('-certfile')\n    params.push('--TMPFILE--')\n  }\n\n  openssl.execBinary(params, tmpfiles, function (sslErr, pkcs12) {\n    function done (err) {\n      if (err) {\n        return callback(err)\n      }\n      return callback(null, {\n        pkcs12: pkcs12\n      })\n    }\n    helper.deleteTempFiles(delTempPWFiles, function (fsErr) {\n      done(sslErr || fsErr)\n    })\n  })\n}\n\n/**\n * read sslcert data from Pkcs12 file. Results are provided in callback response in object notation ({cert: .., ca:..., key:...})\n * @static\n * @param  {Buffer|String}   bufferOrPath Buffer or path to file\n * @param  {Object}   [options]      openssl options\n * @param  {Function} callback     Called with error object and sslcert bundle object\n */\nfunction readPkcs12 (bufferOrPath, options, callback) {\n  if (!callback && typeof options === 'function') {\n    callback = options\n    options = {}\n  }\n\n  options.p12Password = options.p12Password || ''\n\n  var tmpfiles = []\n  var delTempPWFiles = []\n  var args = ['pkcs12', '-in', bufferOrPath]\n\n  helper.createPasswordFile({ cipher: '', password: options.p12Password, passType: 'in' }, args, delTempPWFiles)\n\n  if (Buffer.isBuffer(bufferOrPath)) {\n    tmpfiles = [bufferOrPath]\n    args[2] = '--TMPFILE--'\n  }\n\n  if (options.clientKeyPassword) {\n    helper.createPasswordFile({ cipher: '', password: options.clientKeyPassword, passType: 'out' }, args, delTempPWFiles)\n  } else {\n    args.push('-nodes')\n  }\n\n  openssl.execBinary(args, tmpfiles, function (sslErr, stdout) {\n    function done (err) {\n      var keybundle = {}\n\n      if (err && err.message.indexOf('No such file or directory') !== -1) {\n        err.code = 'ENOENT'\n      }\n\n      if (!err) {\n        var certs = readFromString(stdout, CERT_START, CERT_END)\n        keybundle.cert = certs.shift()\n        keybundle.ca = certs\n        keybundle.key = readFromString(stdout, KEY_START, KEY_END).pop()\n\n        if (keybundle.key) {\n        // convert to RSA key\n          return openssl.exec(['rsa', '-in', '--TMPFILE--'], 'RSA PRIVATE KEY', [keybundle.key], function (err, key) {\n            keybundle.key = key\n\n            return callback(err, keybundle)\n          })\n        }\n\n        if (options.clientKeyPassword) {\n          keybundle.key = readFromString(stdout, ENCRYPTED_KEY_START, ENCRYPTED_KEY_END).pop()\n        } else {\n          keybundle.key = readFromString(stdout, RSA_KEY_START, RSA_KEY_END).pop()\n        }\n      }\n\n      return callback(err, keybundle)\n    }\n    helper.deleteTempFiles(delTempPWFiles, function (fsErr) {\n      done(sslErr || fsErr)\n    })\n  })\n}\n\n/**\n * Check a certificate\n * @static\n * @param {String} PEM encoded certificate\n * @param {String} [passphrase] password for the certificate\n * @param {Function} callback Callback function with an error object and a boolean valid\n */\nfunction checkCertificate (certificate, passphrase, callback) {\n  var params\n  var delTempPWFiles = []\n\n  if (!callback && typeof passphrase === 'function') {\n    callback = passphrase\n    passphrase = undefined\n  }\n  certificate = (certificate || '').toString()\n\n  if (certificate.match(/BEGIN(\\sNEW)? CERTIFICATE REQUEST/)) {\n    params = ['req', '-text', '-noout', '-verify', '-in', '--TMPFILE--']\n  } else if (certificate.match(/BEGIN RSA PRIVATE KEY/) || certificate.match(/BEGIN PRIVATE KEY/)) {\n    params = ['rsa', '-noout', '-check', '-in', '--TMPFILE--']\n  } else {\n    params = ['x509', '-text', '-noout', '-in', '--TMPFILE--']\n  }\n  if (passphrase) {\n    helper.createPasswordFile({ cipher: '', password: passphrase, passType: 'in' }, params, delTempPWFiles)\n  }\n\n  openssl.spawnWrapper(params, certificate, function (sslErr, code, stdout, stderr) {\n    function done (err) {\n      if (err && err.toString().trim() !== 'verify OK') {\n        return callback(err)\n      }\n      var result\n      switch (params[0]) {\n        case 'rsa':\n          result = /^Rsa key ok$/i.test(stdout.trim())\n          break\n        default:\n          result = /Signature Algorithm/im.test(stdout)\n          break\n      }\n\n      callback(null, result)\n    }\n    helper.deleteTempFiles(delTempPWFiles, function (fsErr) {\n      done(sslErr || fsErr || stderr)\n    })\n  })\n}\n\n/**\n * check a PKCS#12 file (.pfx or.p12)\n * @static\n * @param {Buffer|String} bufferOrPath PKCS#12 certificate\n * @param {String} [passphrase] optional passphrase which will be used to open the keystore\n * @param {Function} callback Callback function with an error object and a boolean valid\n */\nfunction checkPkcs12 (bufferOrPath, passphrase, callback) {\n  if (!callback && typeof passphrase === 'function') {\n    callback = passphrase\n    passphrase = ''\n  }\n\n  var tmpfiles = []\n  var delTempPWFiles = []\n  var args = ['pkcs12', '-info', '-in', bufferOrPath, '-noout', '-maciter', '-nodes']\n\n  helper.createPasswordFile({ cipher: '', password: passphrase, passType: 'in' }, args, delTempPWFiles)\n\n  if (Buffer.isBuffer(bufferOrPath)) {\n    tmpfiles = [bufferOrPath]\n    args[3] = '--TMPFILE--'\n  }\n\n  openssl.spawnWrapper(args, tmpfiles, function (sslErr, code, stdout, stderr) {\n    function done (err) {\n      if (err) {\n        return callback(err)\n      }\n      callback(null, (/MAC verified OK/im.test(stderr) || (!(/MAC verified OK/im.test(stderr)) && !(/Mac verify error/im.test(stderr)))))\n    }\n    helper.deleteTempFiles(delTempPWFiles, function (fsErr) {\n      done(sslErr || fsErr)\n    })\n  })\n}\n\n/**\n * Verifies the signing chain of the passed certificate\n * @static\n * @param {String|Array} PEM encoded certificate include intermediate certificates\n * @param {String|Array} [List] of CA certificates\n * @param {Function} callback Callback function with an error object and a boolean valid\n */\nfunction verifySigningChain (certificate, ca, callback) {\n  if (!callback && typeof ca === 'function') {\n    callback = ca\n    ca = undefined\n  }\n  if (!Array.isArray(certificate)) {\n    certificate = [certificate]\n  }\n  if (!Array.isArray(ca) && ca !== undefined) {\n    if (ca !== '') {\n      ca = [ca]\n    }\n  }\n\n  var files = []\n\n  if (ca !== undefined) {\n    // ca certificates\n    files.push(ca.join('\\n'))\n  }\n  // certificate incl. intermediate certificates\n  files.push(certificate.join('\\n'))\n\n  var params = ['verify']\n\n  if (ca !== undefined) {\n    // ca certificates\n    params.push('-CAfile')\n    params.push('--TMPFILE--')\n  }\n  // certificate incl. intermediate certificates\n  params.push('--TMPFILE--')\n\n  openssl.spawnWrapper(params, files, function (err, code, stdout, stderr) {\n    if (err) {\n      return callback(err)\n    }\n\n    callback(null, stdout.trim().slice(-4) === ': OK')\n  })\n}\n\n// HELPER FUNCTIONS\nfunction fetchCertificateData (certData, callback) {\n  // try catch : if something will fail in parsing it won't crash the calling code\n  try {\n    certData = (certData || '').toString()\n\n    var serial, subject, tmp, issuer\n    var certValues = {\n      issuer: {}\n    }\n    var validity = {}\n    var san\n\n    var ky, i\n\n    // serial\n    if ((serial = certData.match(/\\s*Serial Number:\\r?\\n?\\s*([^\\r\\n]*)\\r?\\n\\s*\\b/)) && serial.length > 1) {\n      certValues.serial = serial[1]\n    }\n\n    if ((subject = certData.match(/\\s*Subject:\\r?\\n(\\s*(([a-zA-Z0-9.]+)\\s=\\s[^\\r\\n]+\\r?\\n))*\\s*\\b/)) && subject.length > 1) {\n      subject = subject[0]\n      tmp = matchAll(subject, /\\s([a-zA-Z0-9.]+)\\s=\\s([^\\r\\n].*)/g)\n      if (tmp) {\n        for (i = 0; i < tmp.length; i++) {\n          ky = tmp[i][1].trim()\n          if (ky.match('(C|ST|L|O|OU|CN|emailAddress|DC)') || ky === '') {\n            continue\n          }\n          certValues[ky] = tmp[i][2].trim()\n        }\n      }\n\n      // country\n      tmp = subject.match(/\\sC\\s=\\s([^\\r\\n].*?)[\\r\\n]/)\n      certValues.country = (tmp && tmp[1]) || ''\n\n      // state\n      tmp = subject.match(/\\sST\\s=\\s([^\\r\\n].*?)[\\r\\n]/)\n      certValues.state = (tmp && tmp[1]) || ''\n\n      // locality\n      tmp = subject.match(/\\sL\\s=\\s([^\\r\\n].*?)[\\r\\n]/)\n      certValues.locality = (tmp && tmp[1]) || ''\n\n      // organization\n      tmp = matchAll(subject, /\\sO\\s=\\s([^\\r\\n].*)/g)\n      certValues.organization = tmp ? (tmp.length > 1 ? tmp.sort(function (t, n) {\n        var e = t[1].toUpperCase()\n        var r = n[1].toUpperCase()\n        return r > e ? -1 : e > r ? 1 : 0\n      }).sort(function (t, n) {\n        return t[1].length - n[1].length\n      }).map(function (t) {\n        return t[1]\n      }) : tmp[0][1]) : ''\n\n      // unit\n      tmp = matchAll(subject, /\\sOU\\s=\\s([^\\r\\n].*)/g)\n      certValues.organizationUnit = tmp ? (tmp.length > 1 ? tmp.sort(function (t, n) {\n        var e = t[1].toUpperCase()\n        var r = n[1].toUpperCase()\n        return r > e ? -1 : e > r ? 1 : 0\n      }).sort(function (t, n) {\n        return t[1].length - n[1].length\n      }).map(function (t) {\n        return t[1]\n      }) : tmp[0][1]) : ''\n\n      // common name\n      tmp = matchAll(subject, /\\sCN\\s=\\s([^\\r\\n].*)/g)\n      certValues.commonName = tmp ? (tmp.length > 1 ? tmp.sort(function (t, n) {\n        var e = t[1].toUpperCase()\n        var r = n[1].toUpperCase()\n        return r > e ? -1 : e > r ? 1 : 0\n      }).sort(function (t, n) {\n        return t[1].length - n[1].length\n      }).map(function (t) {\n        return t[1]\n      }) : tmp[0][1]) : ''\n\n      // email\n      tmp = matchAll(subject, /emailAddress\\s=\\s([^\\r\\n].*)/g)\n      certValues.emailAddress = tmp ? (tmp.length > 1 ? tmp.sort(function (t, n) {\n        var e = t[1].toUpperCase()\n        var r = n[1].toUpperCase()\n        return r > e ? -1 : e > r ? 1 : 0\n      }).sort(function (t, n) {\n        return t[1].length - n[1].length\n      }).map(function (t) {\n        return t[1]\n      }) : tmp[0][1]) : ''\n\n      // DC name\n      tmp = matchAll(subject, /\\sDC\\s=\\s([^\\r\\n].*)/g)\n      certValues.dc = tmp ? (tmp.length > 1 ? tmp.sort(function (t, n) {\n        var e = t[1].toUpperCase()\n        var r = n[1].toUpperCase()\n        return r > e ? -1 : e > r ? 1 : 0\n      }).sort(function (t, n) {\n        return t[1].length - n[1].length\n      }).map(function (t) {\n        return t[1]\n      }) : tmp[0][1]) : ''\n    }\n\n    if ((issuer = certData.match(/\\s*Issuer:\\r?\\n(\\s*([a-zA-Z0-9.]+)\\s=\\s[^\\r\\n].*\\r?\\n)*\\s*\\b/)) && issuer.length > 1) {\n      issuer = issuer[0]\n      tmp = matchAll(issuer, /\\s([a-zA-Z0-9.]+)\\s=\\s([^\\r\\n].*)/g)\n      for (i = 0; i < tmp.length; i++) {\n        ky = tmp[i][1].toString()\n        if (ky.match('(C|ST|L|O|OU|CN|emailAddress|DC)')) {\n          continue\n        }\n        certValues.issuer[ky] = tmp[i][2].toString()\n      }\n\n      // country\n      tmp = issuer.match(/\\sC\\s=\\s([^\\r\\n].*?)[\\r\\n]/)\n      certValues.issuer.country = (tmp && tmp[1]) || ''\n\n      // state\n      tmp = issuer.match(/\\sST\\s=\\s([^\\r\\n].*?)[\\r\\n]/)\n      certValues.issuer.state = (tmp && tmp[1]) || ''\n\n      // locality\n      tmp = issuer.match(/\\sL\\s=\\s([^\\r\\n].*?)[\\r\\n]/)\n      certValues.issuer.locality = (tmp && tmp[1]) || ''\n\n      // organization\n      tmp = matchAll(issuer, /\\sO\\s=\\s([^\\r\\n].*)/g)\n      certValues.issuer.organization = tmp ? (tmp.length > 1 ? tmp.sort(function (t, n) {\n        var e = t[1].toUpperCase()\n        var r = n[1].toUpperCase()\n        return r > e ? -1 : e > r ? 1 : 0\n      }).sort(function (t, n) {\n        return t[1].length - n[1].length\n      }).map(function (t) {\n        return t[1]\n      }) : tmp[0][1]) : ''\n\n      // unit\n      tmp = matchAll(issuer, /\\sOU\\s=\\s([^\\r\\n].*)/g)\n      certValues.issuer.organizationUnit = tmp ? (tmp.length > 1 ? tmp.sort(function (t, n) {\n        var e = t[1].toUpperCase()\n        var\n          r = n[1].toUpperCase()\n        return r > e ? -1 : e > r ? 1 : 0\n      }).sort(function (t, n) {\n        return t[1].length - n[1].length\n      }).map(function (t) {\n        return t[1]\n      }) : tmp[0][1]) : ''\n\n      // common name\n      tmp = matchAll(issuer, /\\sCN\\s=\\s([^\\r\\n].*)/g)\n      certValues.issuer.commonName = tmp ? (tmp.length > 1 ? tmp.sort(function (t, n) {\n        var e = t[1].toUpperCase()\n        var\n          r = n[1].toUpperCase()\n        return r > e ? -1 : e > r ? 1 : 0\n      }).sort(function (t, n) {\n        return t[1].length - n[1].length\n      }).map(function (t) {\n        return t[1]\n      }) : tmp[0][1]) : ''\n\n      // DC name\n      tmp = matchAll(issuer, /\\sDC\\s=\\s([^\\r\\n].*)/g)\n      certValues.issuer.dc = tmp ? (tmp.length > 1 ? tmp.sort(function (t, n) {\n        var e = t[1].toUpperCase()\n        var\n          r = n[1].toUpperCase()\n        return r > e ? -1 : e > r ? 1 : 0\n      }).sort(function (t, n) {\n        return t[1].length - n[1].length\n      }).map(function (t) {\n        return t[1]\n      }) : tmp[0][1]) : ''\n    }\n\n    // SAN\n    if ((san = certData.match(/X509v3 Subject Alternative Name: \\r?\\n([^\\r\\n]*)\\r?\\n/)) && san.length > 1) {\n      san = san[1].trim() + '\\n'\n      certValues.san = {}\n\n      // hostnames\n      tmp = pregMatchAll('DNS:([^,\\\\r\\\\n].*?)[,\\\\r\\\\n\\\\s]', san)\n      certValues.san.dns = tmp || ''\n\n      // IP-Addresses IPv4 & IPv6\n      tmp = pregMatchAll('IP Address:([^,\\\\r\\\\n].*?)[,\\\\r\\\\n\\\\s]', san)\n      certValues.san.ip = tmp || ''\n\n      // Email Addresses\n      tmp = pregMatchAll('email:([^,\\\\r\\\\n].*?)[,\\\\r\\\\n\\\\s]', san)\n      certValues.san.email = tmp || ''\n    }\n\n    // Validity\n    if ((tmp = certData.match(/Not Before\\s?:\\s?([^\\r\\n]*)\\r?\\n/)) && tmp.length > 1) {\n      validity.start = Date.parse((tmp && tmp[1]) || '')\n    }\n\n    if ((tmp = certData.match(/Not After\\s?:\\s?([^\\r\\n]*)\\r?\\n/)) && tmp.length > 1) {\n      validity.end = Date.parse((tmp && tmp[1]) || '')\n    }\n\n    if (validity.start && validity.end) {\n      certValues.validity = validity\n    }\n    // Validity end\n\n    // Signature Algorithm\n    if ((tmp = certData.match(/Signature Algorithm: ([^\\r\\n]*)\\r?\\n/)) && tmp.length > 1) {\n      certValues.signatureAlgorithm = (tmp && tmp[1]) || ''\n    }\n\n    // Public Key\n    if ((tmp = certData.match(/Public[ -]Key: ([^\\r\\n]*)\\r?\\n/)) && tmp.length > 1) {\n      certValues.publicKeySize = ((tmp && tmp[1]) || '').replace(/[()]/g, '')\n    }\n\n    // Public Key Algorithm\n    if ((tmp = certData.match(/Public Key Algorithm: ([^\\r\\n]*)\\r?\\n/)) && tmp.length > 1) {\n      certValues.publicKeyAlgorithm = (tmp && tmp[1]) || ''\n    }\n\n    callback(null, certValues)\n  } catch (err) {\n    callback(err)\n  }\n}\n\nfunction matchAll (str, regexp) {\n  var matches = []\n  str.replace(regexp, function () {\n    var arr = ([]).slice.call(arguments, 0)\n    var extras = arr.splice(-2)\n    arr.index = extras[0]\n    arr.input = extras[1]\n    matches.push(arr)\n  })\n  return matches.length ? matches : null\n}\n\nfunction pregMatchAll (regex, haystack) {\n  var globalRegex = new RegExp(regex, 'g')\n  var globalMatch = haystack.match(globalRegex) || []\n  var matchArray = []\n  var nonGlobalRegex, nonGlobalMatch\n  for (var i = 0; i < globalMatch.length; i++) {\n    nonGlobalRegex = new RegExp(regex)\n    nonGlobalMatch = globalMatch[i].match(nonGlobalRegex)\n    matchArray.push(nonGlobalMatch[1])\n  }\n  return matchArray\n}\n\nfunction generateCSRSubject (options) {\n  options = options || {}\n\n  var csrData = {\n    C: options.country || options.C,\n    ST: options.state || options.ST,\n    L: options.locality || options.L,\n    O: options.organization || options.O,\n    OU: options.organizationUnit || options.OU,\n    CN: options.commonName || options.CN || 'localhost',\n    DC: options.dc || options.DC || '',\n    emailAddress: options.emailAddress\n  }\n\n  var csrBuilder = Object.keys(csrData).map(function (key) {\n    if (csrData[key]) {\n      if (typeof csrData[key] === 'object' && csrData[key].length >= 1) {\n        var tmpStr = ''\n        csrData[key].map(function (o) {\n          tmpStr += '/' + key + '=' + o.replace(/[^\\w .*\\-,@']+/g, ' ').trim()\n        })\n        return tmpStr\n      } else {\n        return '/' + key + '=' + csrData[key].replace(/[^\\w .*\\-,@']+/g, ' ').trim()\n      }\n    }\n  })\n\n  return csrBuilder.join('')\n}\n\nfunction readFromString (string, start, end) {\n  if (Buffer.isBuffer(string)) {\n    string = string.toString('utf8')\n  }\n\n  var output = []\n\n  if (!string) {\n    return output\n  }\n\n  var offset = string.indexOf(start)\n\n  while (offset !== -1) {\n    string = string.substring(offset)\n\n    var endOffset = string.indexOf(end)\n\n    if (endOffset === -1) {\n      break\n    }\n\n    endOffset += end.length\n\n    output.push(string.substring(0, endOffset))\n    offset = string.indexOf(start, endOffset)\n  }\n\n  return output\n}\n\n// promisify not tested yet\n/**\n * Verifies the signing chain of the passed certificate\n * @namespace\n * @name promisified\n * @property {function}  createPrivateKey               @see createPrivateKey\n * @property {function}  createDhparam       - The default number of players.\n * @property {function}  createEcparam         - The default level for the party.\n * @property {function}  createCSR      - The default treasure.\n * @property {function}  createCertificate - How much gold the party starts with.\n */\nmodule.exports.promisified = {\n  createPrivateKey: promisify(createPrivateKey),\n  createDhparam: promisify(createDhparam),\n  createEcparam: promisify(createEcparam),\n  createCSR: promisify(createCSR),\n  createCertificate: promisify(createCertificate),\n  readCertificateInfo: promisify(readCertificateInfo),\n  getPublicKey: promisify(getPublicKey),\n  getFingerprint: promisify(getFingerprint),\n  getModulus: promisify(getModulus),\n  getDhparamInfo: promisify(getDhparamInfo),\n  createPkcs12: promisify(createPkcs12),\n  readPkcs12: promisify(readPkcs12),\n  verifySigningChain: promisify(verifySigningChain),\n  checkCertificate: promisify(checkCertificate),\n  checkPkcs12: promisify(checkPkcs12)\n}\n", "import * as envproto from './envproto/index.mjs';\nimport * as esproto from './esproto/index.mjs';\nimport * as fsproto from './fsproto/index.mjs';\n\nexport {\n  envproto,\n  esproto,\n  fsproto,\n}\n\nexport default { envproto, esproto, fsproto }\n\n\n", "export * from './envvars.mjs';\nexport * from './ssl.mjs';\n", "'use strict'\n\n/* eslint-disable comma-dangle */\n\n/**\n * shit releted to environment variables\n */\n\nimport dotenv from 'dotenv'\n\n// load env\nconst parsed = dotenv.config().parsed\nconst wrapValue = v => ('\"' + v + '\"')\n/**\n * injects .env variables into an object\n * + suitable for adding .env vars  to a webpack|esbuild define plugin config as process.env.THING:VALUE\n *\n * @param env [default=dotenv.config().parsed] object of {key:value}\n * @returns object of {process.env.KEY: VALUE, ...}\n */\nexport const buildEnv = (env = parsed) => Object.entries(env)\n  .reduce(\n    (a, [k, v]) => (a[`process.env.${k}`] = wrapValue(env[k])) && a,\n    {}\n  )\n\n/**\n * uses the default config.values for env variables present but undefined in the .env file\n * updates process.env if it exists\n *\n * @param param0 container for config, e.g. a package.json\n * @returns  { parsed, processEnv } containing new env in parsed, and formatted env in processEnv (keys as process.env.K)\n */\nexport const syncEnv = ({ config = {}, ...opts } = {}) => {\n  for (const k in config) {\n    if (config.hasOwnProperty(k) && parsed[k]?.length === 0) { // eslint-disable-line no-prototype-builtins\n      // update the global process.env if it exists\n      // update parsed created by dotenv\n      if (process?.env) process.env[k] = config[k]\n      parsed[k] = config[k]\n    }\n  }\n\n  return { parsed, processEnv: buildEnv() }\n}\n/**\n * upserts env into opts.config\n * + matching keys in opts.config will be overwritten with values from env\n *\n * @param param0 container for config, e.g. a package.json\n * @returns opts with opts.config synced to values in env\n */\nexport const syncConfig = ({ config = {}, ...opts } = {}) => ({\n  ...opts,\n  config: Object.assign({}, config, parsed)\n})\n\n/**\n * pushes .env values into param0.config and injects param0.config values into process.env if process.env values are undefined\n * @param param0 container for a config, e.g. a package.json\n * @returns { config, processEnv, parsed, ...opts } with updated values\n */\nexport const syncEnvAndConfig = ({ config = {}, ...opts }) => {\n\n  return Object.assign(\n    {},\n    syncEnv({ config }), // must come first!\n    syncConfig({ config, ...opts }),\n  )\n}\n", "\nimport { fileURLToPath } from 'url';\nimport esMain from 'es-main';\nimport fs from 'fs';\nimport mkdirp from 'mkdirp'\nimport path from 'path';\n\n/**\n * determine if some file was invoked on CLI\n *\n * @param mod module\n * @param importMeta import.meta\n * @returns bool true if file was run directly\n */\nexport const isMain = (requireMain, importMeta) => {\n  if (typeof require !== 'undefined') {\n    return requireMain == module;\n  }\n  else {\n    if (!(typeof importMeta)) throw 'must pass in import.meta';\n\n    return esMain(importMeta)\n  }\n}\n\nexport const readFile = fs.promises.readFile;\nexport const readFiles = async (files = []) => {\n  return !files.length\n  ? []\n  : Promise.all(files.map(({filename, encoding = 'utf8'}) => (\n      readFile(filename, encoding)\n    )));\n  }\n\nexport const writeFile = async (...opts) => {\n  try {\n    await mkdirp(path.dirname(opts[0]));\n  } catch (e) {}\n  finally {\n    return fs.promises.writeFile.apply(fs, opts);\n  }\n}\n\nexport const writeFiles = async (files = []) => {\n  return !files.length\n    ? []\n    : Promise.all(files.map(\n      ({filename, data, encoding ='utf8', ...opts}) => writeFile(\n          filename,\n          data,\n          { encoding, ...opts }\n        )\n      )).catch(e => [e]);\n};\n\n\nexport const parentUri = (importMeta = import.meta) => (\n  importMeta?.url\n    ? fileURLToPath(importMeta.url)\n    : module.filename\n);\n// directory where the code is being run\n// export const cwd = path.resolve('', path.dirname(parentUri()));\n/**\n *\n * @param fileToImport filename\n * @param parent absolute path of the parent\n * @returns\n */\nexport const resolve = async (fileToImport, parent = parentUri()) => {\n  return import.meta?.resolve\n    ? await import.meta.resolve(fileToImport, parent)\n    : path.join(path.dirname(parent), fileToImport)\n};\n", "import {fileURLToPath} from 'url';\nimport process from 'process';\nimport path from 'path';\n\nexport function stripExt(name) {\n  const extension = path.extname(name);\n  if (!extension) {\n    return name;\n  }\n\n  return name.slice(0, -extension.length);\n}\n\nexport default function(meta) {\n  const modulePath = fileURLToPath(meta.url);\n\n  const scriptPath = process.argv[1];\n  const extension = path.extname(scriptPath);\n  if (extension) {\n    return modulePath === scriptPath;\n  }\n\n  return stripExt(modulePath) === scriptPath;\n}\n", "'use strict';\n\n/**\n * shit related to ssl certs\n * @see https://github.com/Dexus/pem/blob/master/test/pem.spec.js\n */\n\nimport * as fsproto from '../fsproto/index.mjs'\nimport path from 'path';\nimport pem from 'pem';\n\n\nexport const getDevCert = async ({\n  selfSigned = true,\n  days = 7,\n  domain = process.env.DEV_DOMAIN || 'localhost',\n  tmpDir = process.env.PEMJS_TMPDIR,\n\n  // dependent\n  commonName = `*.${domain}`,\n\n  ...opts\n} = {}) => {\n  // where to save dev certs\n  if (!tmpDir) process.env.PEMJS_TMPDIR = path.dirname(fsproto.parentUri(import.meta)) + '/certs';\n\n\n  // get cert and key with name DOMAIN.serviceKey & DOMAIN.certificate\n  let certificate, clientKey, csr, serviceKey, msgs = [];\n  const names = {\n    certificate: process.env.PEMJS_TMPDIR + '/' + `${domain}.certificate`,\n    clientKey: process.env.PEMJS_TMPDIR + '/' + `${domain}.clientKey`,\n    csr: process.env.PEMJS_TMPDIR + '/' + `${domain}.csr`,\n    serviceKey: process.env.PEMJS_TMPDIR + '/' + `${domain}.serviceKey`,\n  };\n\n  try {\n    ([\n      certificate,\n      clientKey,\n      csr,\n      serviceKey,\n    ] = await fsproto.readFiles([\n      { filename: names.certificate },\n      { filename: names.clientKey },\n      { filename: names.csr },\n      { filename: names.serviceKey },\n    ]));\n\n    if (!certificate || !serviceKey || !csr || !clientKey) throw 'couldnt read dev keys';\n\n\n    const certValid = await pem.promisified.checkCertificate(certificate);\n\n    if (!certValid) throw 'need to create new dev cert';\n\n    return {\n      certificate,\n      clientKey,\n      csr,\n      serviceKey,\n    };\n  } catch (e) { msgs.push(e.message); }\n\n   try {\n    ({\n      certificate,\n      clientKey,\n      csr,\n      serviceKey,\n    } = await pem.promisified.createCertificate({\n      selfSigned,\n      days,\n      commonName,\n    }));\n\n    if (certificate instanceof Error) {\n      console.info('\\n\\n could not create certs', certificate);\n\n      return {};\n    }\n\n    else if (!certificate || !serviceKey || !csr || !clientKey) throw '@noahedwardhall needs to fix @nodeproto/lib/envproto';\n\n    return fsproto.writeFiles([\n      { filename: names.certificate, data: certificate },\n      { filename: names.clientKey, data: clientKey },\n      { filename: names.csr, data: csr },\n      { filename: names.serviceKey, data: serviceKey },\n    ]).then(() => ({ certificate, clientKey, csr, serviceKey }));\n  } catch (e) {\n    console.error('\\n\\n could not retrieve, create, or save new|old dev certs', msgs.concat(e.message), e)\n  }\n}\n", "\nexport * from './plugins/popCopy.mjs';\n", "\n/**\n * @see https://www.youtube.com/watch?v=zR7LOtMix9w\n *\n * popCopy esbuild plugin\n * copies files synchronously before EACH build into the output directory\n * caches results: incremental builds > than initial\n *\n * TODO: https://esbuild.github.io/api/#incremental\n * implement watching yaml files\n */\n\n// import fs from 'fs';\nimport fs from 'fs'\nimport path from 'path';\n\n// cache mapping { filepath: { input, output} }\n// for us to return the previous output if the input hasnt change\n// ALWAYS use the filepath as key\n// @see https://esbuild.github.io/plugins/#caching-your-plugin\nexport const cache = new Map();\n\n\n// fileShouldCopy(path) => lastModified in MS or undefined\nexport const fileShouldCopy = async sourcepath => {\n  let fd;\n  try {\n    fd = await fs.promises.open(sourcepath,'r');\n    if (!fd) return;\n\n    const mtimeMs = (await fd.stat()).mtimeMs;\n    const cacheMs = cache.get(sourcepath)?.ms;\n    fd.close();\n    return (!cacheMs || (cacheMs < mtimeMs)) && mtimeMs\n  } catch (e) {\n    console.warn('error accessing file, removing from cache\\n', {sourcepath, e});\n    fd?.close();\n    cache.delete(sourcepath);\n\n    return false;\n  }\n};\n\n// copy file into specified outdir && caches file time in ms\nexport const fileCopy = async (newCacheMs, sourcepath, outdir) => {\n  try {\n    if (newCacheMs) {\n      const outpath = `${outdir}/${path.basename(sourcepath)}`;\n      cache.set(sourcepath, { ms: newCacheMs, outpath });\n\n      await fs.promises.mkdir(outdir, { recursive: true  })\n      await fs.promises.copyFile(sourcepath, outpath); // dont catch let it throw\n\n    }\n  } catch (e) {\n    cache.delete(sourcepath);\n    console.warn('\\n\\n error copying file into outdir', {sourcepath, e});\n  }\n};\n\n\n// searches for files to copy\n// sets filepaths as keys in cache\nexport const filesToCopy = options => {\n  const msg = 'not copying files:';\n\n  if (!options.length) return console.warn(`${msg} options empty`, options);\n\n  options.forEach(async ({ outdir, endingWith, indir, recurse, ...opts }) => {\n    try {\n      if (\n        !(endingWith instanceof RegExp)\n        || (!indir || !indir.startsWith('/'))\n        || (!outdir || !outdir.startsWith('/'))\n      )\n        return console.warn(\n        `${msg} invalid params`,\n        {outdir, endingWith, indir, recurse, opts}\n      );\n\n      const sourcedirs = await fs.promises.readdir(indir, { encoding: 'utf8', withFileTypes: true }) ?? [];\n\n      sourcedirs.forEach(dirEnt => {\n        // check all child-dirs\n        // need to check dirEnt[symbol] type === 2\n        // because duh files without extensions\n        if (!dirEnt.name.includes('.') && recurse) filesToCopy([\n            {\n              outdir,\n              endingWith,\n              recurse,\n              indir: `${indir}/${dirEnt.name}`,\n              ...opts\n            }\n          ]);\n        else {\n          // check if filename endsWith regex\n          if (endingWith.test(dirEnt.name)) {\n            // check if files should be copied\n            const sourcepath = `${indir}/${dirEnt.name}`;\n            const outpath = `${outdir}/${dirEnt.name}`;\n            cache.set(sourcepath, { ms: null, outpath })\n          }\n        }\n      });\n    } catch (e) {\n      console.error('\\n\\n error in popcopy', e);\n    }\n  });\n};\n\n\nconst name = 'popCopyPlugin';\n\nexport function popCopy (config) {\n  popCopy.options = config;\n  popCopy.onStarted = false;\n\n  return {\n    name,\n    setup (build) {\n      /**\n       * options\n       * { options: [{ indir, endingWith, recurse, outdir }]}\n       * @example\n       *          finds all files endingWith /openapi\\.(yml|yaml)$/\n       *          and copies them into esbuild.config.outdir\n       *          { options: [{\n       *              indir: '/absolute/path',\n       *              outdir: /absolute/path'\n       *              endingWith: /openapi\\.(yml|yaml)$/,\n       *              recurse: true,\n       *          }]}\n       */\n      const { options } = popCopy.options ?? {};\n      if (!options) return;\n\n      // STEP 1\n      // retrieve asset directories from options\n      // scan each dir for files matching provided regex\n      // for each file found run cache.set(filePath, undefined)\n      filesToCopy(options);\n\n      build.onResolve(\n        {filter: /^popcopy$/},\n        () => ({})\n      );\n      // @see https://esbuild.github.io/plugins/#start-callbacks\n      build.onStart(async () => {\n        if (popCopy.onStarted) return;\n        popCopy.onStarted = true;\n\n        // STEP 2\n        // loop cache and copy files if necessary\n        if (cache.size) for (const [sourcepath, { ms, outpath }] of cache) {\n          try {\n            const newCacheMs = await fileShouldCopy(sourcepath);\n            if (newCacheMs) await fileCopy(newCacheMs, sourcepath, path.dirname(outpath));\n          } catch (e) {\n            console.warn('popCopy.onStart error', e);\n          }\n        }\n\n        return;\n      });\n\n      // @see https://esbuild.github.io/plugins/#end-callbacks\n      build.onEnd(result => {\n        popCopy.onStarted = false;\n        return;\n      });\n    },\n  };\n};\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AAAA;AAuBA,QAAM,MAAK,QAAQ;AACnB,QAAM,QAAO,QAAQ;AACrB,QAAM,KAAK,QAAQ;AAEnB,iBAAc,SAAuB;AACnC,cAAQ,IAAI,mBAAmB;AAAA;AAGjC,QAAM,UAAU;AAChB,QAAM,iBAAiB;AACvB,QAAM,cAAc;AACpB,QAAM,iBAAiB;AAGvB,mBAAgB,KAA4B,SAA6D;AACvG,YAAM,QAAQ,QAAQ,WAAW,QAAQ;AACzC,YAAM,MAAM;AAGZ,UAAI,WAAW,MAAM,gBAAgB,QAAQ,SAAU,MAAM,KAAK;AAEhE,cAAM,cAAc,KAAK,MAAM;AAE/B,YAAI,eAAe,MAAM;AACvB,gBAAM,MAAM,YAAY;AAExB,cAAI,MAAO,YAAY,MAAM;AAC7B,gBAAM,MAAM,IAAI,SAAS;AACzB,gBAAM,iBAAiB,IAAI,OAAO,OAAO,IAAI,SAAS;AACtD,gBAAM,iBAAiB,IAAI,OAAO,OAAO,IAAI,SAAS;AAGtD,cAAI,kBAAkB,gBAAgB;AACpC,kBAAM,IAAI,UAAU,GAAG;AAGvB,gBAAI,gBAAgB;AAClB,oBAAM,IAAI,QAAQ,aAAa;AAAA;AAAA,iBAE5B;AAEL,kBAAM,IAAI;AAAA;AAGZ,cAAI,OAAO;AAAA,mBACF,OAAO;AAChB,cAAI,iDAAiD,MAAM,MAAM;AAAA;AAAA;AAIrE,aAAO;AAAA;AAGT,yBAAsB,SAAS;AAC7B,aAAO,QAAQ,OAAO,MAAM,MAAK,KAAK,GAAG,WAAW,QAAQ,MAAM,MAAM;AAAA;AAI1E,oBAAiB,SAA+D;AAC9E,UAAI,aAAa,MAAK,QAAQ,QAAQ,OAAO;AAC7C,UAAI,WAAyB;AAC7B,UAAI,QAAQ;AAEZ,UAAI,SAAS;AACX,YAAI,QAAQ,QAAQ,MAAM;AACxB,uBAAa,YAAY,QAAQ;AAAA;AAEnC,YAAI,QAAQ,YAAY,MAAM;AAC5B,qBAAW,QAAQ;AAAA;AAErB,YAAI,QAAQ,SAAS,MAAM;AACzB,kBAAQ;AAAA;AAAA;AAIZ,UAAI;AAEF,cAAM,UAAS,MAAM,IAAG,aAAa,YAAY,EAAE,aAAa,EAAE;AAElE,eAAO,KAAK,SAAQ,QAAQ,SAAU,KAAK;AACzC,cAAI,CAAC,OAAO,UAAU,eAAe,KAAK,QAAQ,KAAK,MAAM;AAC3D,oBAAQ,IAAI,OAAO,QAAO;AAAA,qBACjB,OAAO;AAChB,gBAAI,IAAI;AAAA;AAAA;AAIZ,eAAO,EAAE;AAAA,eACF,GAAP;AACA,eAAO,EAAE,OAAO;AAAA;AAAA;AAIpB,YAAO,QAAQ,SAAS;AACxB,YAAO,QAAQ,QAAQ;AAAA;AAAA;;;ACrHvB;AAAA;AAAA,QAAM,EAAE,cAAc,QAAQ;AAC9B,QAAM,MAAK,QAAQ;AACnB,QAAM,UAAU,UAAQ;AACtB,UAAI,CAAC;AACH,eAAO,EAAE,MAAM,KAAO;AAAA,eACf,OAAO,SAAS;AACvB,eAAO,iBAAE,MAAM,KAAO,WAAO;AAAA,eACtB,OAAO,SAAS;AACvB,eAAO,EAAE,MAAM,MAAM;AAAA,eACd,OAAO,SAAS;AACvB,eAAO,EAAE,MAAM,SAAS,MAAM,IAAI;AAAA;AAElC,cAAM,IAAI,UAAU;AAEtB,WAAK,QAAQ,KAAK,SAAS,KAAK,GAAG,SAAS,IAAG;AAC/C,WAAK,aAAa,UAAU,KAAK;AACjC,WAAK,OAAO,KAAK,QAAQ,KAAK,GAAG,QAAQ,IAAG;AAC5C,WAAK,YAAY,UAAU,KAAK;AAChC,WAAK,WAAW,KAAK,YAAY,KAAK,GAAG,YAAY,IAAG;AACxD,WAAK,YAAY,KAAK,aAAa,KAAK,GAAG,aAAa,IAAG;AAC3D,aAAO;AAAA;AAET,YAAO,UAAU;AAAA;AAAA;;;ACtBjB;AAAA;AAAA,QAAM,WAAW,QAAQ,IAAI,+BAA+B,QAAQ;AACpE,QAAM,EAAE,mBAAS,UAAU,QAAQ;AACnC,QAAM,UAAU,WAAQ;AACtB,UAAI,KAAK,KAAK,QAAO;AAEnB,cAAM,OAAO,OACX,IAAI,UAAU,6CACd;AAAA,UACE;AAAA,UACA,MAAM;AAAA;AAAA;AAKZ,cAAO,SAAQ;AACf,UAAI,aAAa,SAAS;AACxB,cAAM,cAAc;AACpB,cAAM,EAAC,SAAQ,MAAM;AACrB,YAAI,YAAY,KAAK,MAAK,OAAO,KAAK,UAAU;AAC9C,gBAAM,OAAO,OAAO,IAAI,MAAM,gCAAgC;AAAA,YAC5D;AAAA,YACA,MAAM;AAAA;AAAA;AAAA;AAKZ,aAAO;AAAA;AAET,YAAO,UAAU;AAAA;AAAA;;;AC5BjB;AAAA;AAAA,QAAM,EAAC,YAAW,QAAQ;AAE1B,QAAM,WAAW,CAAC,MAAM,QAAQ,QAAO,WAAc;AAEnD,UAAI,UAAS;AACX,eAAO,QAAQ;AAEjB,aAAO,KAAK,UAAU,QAAQ,KAC5B,QAAM,GAAG,gBAAgB,QAAO,QAChC,QAAM,GAAG,SAAS,WACd,SAAS,MAAM,QAAQ,SAAS,UAChC;AAAA;AAIR,QAAM,eAAe,CAAC,MAAM,QAAQ,QAAO,WAAc;AACvD,UAAI,UAAS;AACX,eAAO;AAET,UAAI;AACF,eAAO,KAAK,SAAS,QAAQ,gBAAgB,QAAO;AAAA,eAC7C,IAAP;AACA,eAAO,GAAG,SAAS,WACf,aAAa,MAAM,QAAQ,SAAS,UACpC;AAAA;AAAA;AAIR,YAAO,UAAU,EAAC,UAAU;AAAA;AAAA;;;AC5B5B;AAAA;AAAA,QAAM,EAAC,YAAW,QAAQ;AAE1B,QAAM,eAAe,CAAC,OAAM,MAAM,SAAS;AACzC,WAAK,YAAY;AACjB,YAAM,SAAS,QAAQ;AACvB,UAAI,WAAW,OAAM;AACnB,eAAO,KAAK,WAAW,OAAM,MAAM,MAAM,QAAM;AAG7C,cAAI,GAAG,SAAS;AACd,kBAAM;AAAA;AAAA;AAIZ,aAAO,KAAK,WAAW,OAAM,MAAM,KAAK,MAAM,QAAQ,OAAM,QAAM;AAChE,YAAI,GAAG,SAAS;AACd,iBAAO,aAAa,QAAQ,MACzB,KAAK,WAAQ,aAAa,OAAM,MAAM;AAC3C,YAAI,GAAG,SAAS,YAAY,GAAG,SAAS;AACtC,gBAAM;AACR,eAAO,KAAK,UAAU,OAAM,KAAK,QAAM;AACrC,cAAI,GAAG;AACL,mBAAO;AAAA;AAEP,kBAAM;AAAA,WACP,MAAM;AAAE,gBAAM;AAAA;AAAA;AAAA;AAIrB,QAAM,mBAAmB,CAAC,OAAM,MAAM,SAAS;AAC7C,YAAM,SAAS,QAAQ;AACvB,WAAK,YAAY;AAEjB,UAAI,WAAW,OAAM;AACnB,YAAI;AACF,iBAAO,KAAK,UAAU,OAAM;AAAA,iBACrB,IAAP;AAGA,cAAI,GAAG,SAAS;AACd,kBAAM;AAAA;AAEN;AAAA;AAAA;AAIN,UAAI;AACF,aAAK,UAAU,OAAM;AACrB,eAAO,QAAQ;AAAA,eACR,IAAP;AACA,YAAI,GAAG,SAAS;AACd,iBAAO,iBAAiB,OAAM,MAAM,iBAAiB,QAAQ,MAAM;AACrE,YAAI,GAAG,SAAS,YAAY,GAAG,SAAS;AACtC,gBAAM;AACR,YAAI;AACF,cAAI,CAAC,KAAK,SAAS,OAAM;AACvB,kBAAM;AAAA,iBACD,GAAP;AACA,gBAAM;AAAA;AAAA;AAAA;AAKZ,YAAO,UAAU,EAAC,cAAc;AAAA;AAAA;;;AC/DhC;AAAA;AAAA,QAAM,EAAC,YAAW,QAAQ;AAC1B,QAAM,EAAC,UAAU,iBAAgB;AACjC,QAAM,EAAC,cAAc,qBAAoB;AAEzC,QAAM,eAAe,CAAC,OAAM,SAAS;AACnC,WAAK,YAAY;AACjB,YAAM,SAAS,QAAQ;AACvB,UAAI,WAAW;AACb,eAAO,KAAK,WAAW,OAAM;AAE/B,aAAO,SAAS,MAAM,OAAM,KAAK,UAC/B,KAAK,WAAW,OAAM,MAAM,KAAK,MAAM,MACtC,MAAM,QAAM;AACX,YAAI,GAAG,SAAS;AACd,iBAAO,aAAa,OAAM;AAAA;AAE1B,gBAAM;AAAA;AAAA;AAId,QAAM,mBAAmB,CAAC,OAAM,SAAS;AACvC,WAAK,YAAY;AACjB,YAAM,SAAS,QAAQ;AACvB,UAAI,WAAW;AACb,eAAO,KAAK,UAAU,OAAM;AAE9B,YAAM,OAAO,aAAa,MAAM;AAChC,UAAI;AACF,aAAK,UAAU,OAAM;AACrB,eAAO;AAAA,eACA,IAAP;AACA,YAAI,GAAG,SAAS;AACd,iBAAO,iBAAiB,OAAM;AAAA;AAE9B,gBAAM;AAAA;AAAA;AAIZ,YAAO,UAAU,EAAC,cAAc;AAAA;AAAA;;;ACtChC;AAAA;AAAA,QAAM,MAAK,QAAQ;AAEnB,QAAM,UAAU,QAAQ,IAAI,mCAAmC,QAAQ;AACvE,QAAM,UAAU,QAAQ,QAAQ,MAAM,IAAI,MAAM;AAChD,QAAM,YAAY,CAAC,QAAQ,KAAK,MAAM,CAAC,QAAQ,OAAO,MAAM,CAAC,QAAQ,MAAM;AAE3E,QAAM,YAAY,CAAC,YAAY,MAAM,QAAQ,UAAQ,KAAK,UAAU,IAAG;AACvE,QAAM,gBAAgB,CAAC,YAAY,MAAM,QAAQ,UAAQ,KAAK,cAAc,IAAG;AAE/E,YAAO,UAAU,EAAC,WAAW;AAAA;AAAA;;;ACT7B;AAAA;AAAA,QAAM,UAAU;AAChB,QAAM,UAAU;AAEhB,QAAM,EAAC,cAAc,qBAAoB;AACzC,QAAM,EAAC,cAAc,qBAAoB;AACzC,QAAM,EAAC,WAAW,kBAAiB;AAGnC,QAAM,UAAS,CAAC,OAAM,SAAS;AAC7B,cAAO,QAAQ;AACf,aAAO,QAAQ;AACf,aAAO,UAAU,QACb,aAAa,OAAM,QACnB,aAAa,OAAM;AAAA;AAGzB,QAAM,aAAa,CAAC,OAAM,SAAS;AACjC,cAAO,QAAQ;AACf,aAAO,QAAQ;AACf,aAAO,cAAc,QACjB,iBAAiB,OAAM,QACvB,iBAAiB,OAAM;AAAA;AAG7B,YAAO,OAAO;AACd,YAAO,SAAS,CAAC,OAAM,SAAS,aAAa,QAAQ,QAAO,QAAQ;AACpE,YAAO,SAAS,CAAC,OAAM,SAAS,aAAa,QAAQ,QAAO,QAAQ;AACpE,YAAO,aAAa,CAAC,OAAM,SAAS,iBAAiB,QAAQ,QAAO,QAAQ;AAC5E,YAAO,aAAa,CAAC,OAAM,SAAS,iBAAiB,QAAQ,QAAO,QAAQ;AAE5E,YAAO,UAAU;AAAA;AAAA;;;AC9BjB;AAAA;AAAA;AAEA,WAAO,eAAe,SAAS,cAAc;AAAA,MAC3C,OAAO;AAAA;AAET,YAAQ,YAAY;AAGpB,QAAI,uBAAuB;AAW3B,uBAAmB,UAAU;AAE3B,UAAI,OAAO,aAAa,YAAY;AAClC,cAAM,IAAI,UAAU;AAAA;AAItB,UAAI,gBAAgB,SAAS;AAG7B,UAAI,aAAa,UAAU,WAAW;AAEtC,UAAI,OAAO,eAAe,YAAY;AACpC,cAAM,IAAI,MAAM;AAAA;AAGlB,aAAO,WAAY;AACjB,YAAI,QAAQ;AAEZ,iBAAS,OAAO,UAAU,QAAQ,OAAO,IAAI,MAAM,OAAO,OAAO,GAAG,OAAO,MAAM,QAAQ;AACvF,eAAK,QAAQ,UAAU;AAAA;AAGzB,eAAO,IAAI,WAAW,SAAU,UAAS,QAAQ;AAE/C,eAAK,KAAK,kBAAkB,KAAK;AAC/B,gBAAI,KAAK;AACP,qBAAO,OAAO;AAAA;AAGhB,qBAAS,QAAQ,UAAU,QAAQ,SAAS,IAAI,MAAM,QAAQ,IAAI,QAAQ,IAAI,IAAI,QAAQ,GAAG,QAAQ,OAAO,SAAS;AACnH,qBAAO,QAAQ,KAAK,UAAU;AAAA;AAGhC,gBAAI,OAAO,WAAW,KAAK,CAAC,eAAe;AACzC,qBAAO,SAAQ,OAAO;AAAA;AAGxB,gBAAI,IAAI;AACR,mBAAO,QAAQ,SAAU,OAAO,OAAO;AACrC,kBAAI,QAAO,cAAc;AAEzB,kBAAI,OAAM;AACR,kBAAE,SAAQ;AAAA;AAAA;AAGd,qBAAQ;AAAA;AAGV,mBAAS,MAAM,OAAO;AAAA;AAAA;AAAA;AAM5B,cAAU,gBAAgB;AAC1B,cAAU,UAAU;AAAA;AAAA;;;AC3EpB;AAAA;AAAA;AACA,QAAI,YAAY,QAAQ,aAAa;AACrC,QAAI,kBAAkB,YAAY,YAAY;AAG9C,YAAO,UAAU,WAAY;AAC5B,UAAI;AAEJ,UAAI,WAAW;AACd,gBAAO,QAAQ,IAAI,QAClB,QAAQ,IAAI,OACX,SAAQ,IAAI,cAAc,QAAQ,IAAI,UAAU;AAAA,aAC5C;AACN,gBAAO,QAAQ,IAAI,UAClB,QAAQ,IAAI,OACZ,QAAQ,IAAI,QACZ;AAAA;AAGF,UAAI,gBAAgB,KAAK,QAAO;AAC/B,gBAAO,MAAK,MAAM,GAAG;AAAA;AAGtB,aAAO;AAAA;AAAA;AAAA;;;ACvBR;AAAA;AAAA;AAEA,QAAI,UAAU,QAAQ;AACtB,QAAI,MAAK,QAAQ;AACjB,QAAI,SAAS,QAAQ;AACrB,QAAI,WAAW;AACf,QAAI,UAAU,QAAQ,IAAI,gBAAgB;AAY1C,YAAO,QAAQ,WAAW,SAAU,KAAK;AACvC,UAAI,MAAM,QAAQ,MAAM;AACtB,eAAO;AAAA;AAUT,aAAO,SAAS,KAAK;AAAA;AAOvB,YAAO,QAAQ,QAAQ,eAAgB,KAAK;AAC1C,aAAO,+CAA+C,KAAK;AAAA;AAO7D,YAAO,QAAQ,QAAQ,eAAgB,KAAK;AAC1C,UAAI,MAAM;AACV,eAAS,IAAI,GAAG,IAAI,IAAI,QAAQ,KAAK;AACnC,eAAO,KAAK,IAAI,WAAW,GAAG,SAAS;AAAA;AAEzC,aAAO;AAAA;AAQT,YAAO,QAAQ,UAAU,CAAC,UAAU,UAAU,UAAU,eAAe,eAAe,eAAe,OAAO,QAAQ;AACpH,QAAI,UAAU,QAAO,QAAQ;AAa7B,YAAO,QAAQ,qBAAqB,SAAU,SAAS,QAAQ,mBAAmB;AAChF,UAAI,CAAC,WAAW,CAAC,OAAO,UAAU,eAAe,KAAK,SAAS,eAAe,CAAC,OAAO,UAAU,eAAe,KAAK,SAAS,eAAe,CAAC,kBAAkB,KAAK,QAAQ,WAAW;AACrL,eAAO;AAAA;AAET,UAAI,eAAe,QAAQ,KAAK,SAAS,OAAO,YAAY,IAAI,SAAS;AACzE,wBAAkB,KAAK;AACvB,cAAQ,WAAW,QAAQ,SAAS;AACpC,UAAI,QAAQ,aAAa,IAAI;AAC3B,gBAAQ,WAAW;AAAA;AAErB,UAAI,QAAQ,UAAW,QAAQ,QAAQ,QAAQ,YAAY,IAAK;AAC9D,eAAO,KAAK,MAAM,QAAQ;AAAA;AAE5B,aAAO,KAAK,UAAU,QAAQ;AAC9B,UAAI,QAAQ,UAAU;AACpB,eAAO,KAAK,UAAU,QAAQ;AAAA,aACzB;AACL,YAAG,cAAc,cAAc,QAAQ;AACvC,eAAO,KAAK,UAAU;AAAA;AAExB,aAAO;AAAA;AAQT,YAAO,QAAQ,kBAAkB,SAAU,OAAO,UAAU;AAC1D,UAAI,UAAU;AACd,UAAI,OAAO,UAAU,UAAU;AAC7B,gBAAQ,KAAK;AAAA,iBACJ,MAAM,QAAQ,QAAQ;AAC/B,kBAAU;AAAA,aACL;AACL,eAAO,SAAS,IAAI,MAAM;AAAA;AAE5B,UAAI,eAAe,SAAU,MAAM,eAAe;AAChD,YAAI,KAAK,QAAQ;AACf,cAAI,OAAO,KAAK;AAChB,cAAI,aAAa,SAAU,KAAK;AAC9B,gBAAI,OAAO,IAAI,SAAS,UAAU;AAEhC,qBAAO,aAAa,MAAM;AAAA,uBACjB,KAAK;AAEd,qBAAO,cAAc;AAAA,mBAChB;AACL,qBAAO,aAAa,MAAM;AAAA;AAAA;AAG9B,cAAI,QAAQ,OAAO,SAAS,UAAU;AACpC,gBAAG,OAAO,MAAM;AAAA,iBACX;AACL,mBAAO,aAAa,MAAM;AAAA;AAAA,eAEvB;AACL,iBAAO,cAAc;AAAA;AAAA;AAGzB,mBAAa,SAAS;AAAA;AAAA;AAAA;;;ACpIxB;AAAA;AAAA,YAAO,UAAU;AACjB,UAAM,OAAO;AAEb,QAAI,MAAK,QAAQ;AAEjB,0BAAuB,OAAM,SAAS;AACpC,UAAI,UAAU,QAAQ,YAAY,SAChC,QAAQ,UAAU,QAAQ,IAAI;AAEhC,UAAI,CAAC,SAAS;AACZ,eAAO;AAAA;AAGT,gBAAU,QAAQ,MAAM;AACxB,UAAI,QAAQ,QAAQ,QAAQ,IAAI;AAC9B,eAAO;AAAA;AAET,eAAS,IAAI,GAAG,IAAI,QAAQ,QAAQ,KAAK;AACvC,YAAI,IAAI,QAAQ,GAAG;AACnB,YAAI,KAAK,MAAK,OAAO,CAAC,EAAE,QAAQ,kBAAkB,GAAG;AACnD,iBAAO;AAAA;AAAA;AAGX,aAAO;AAAA;AAGT,uBAAoB,MAAM,OAAM,SAAS;AACvC,UAAI,CAAC,KAAK,oBAAoB,CAAC,KAAK,UAAU;AAC5C,eAAO;AAAA;AAET,aAAO,aAAa,OAAM;AAAA;AAG5B,mBAAgB,OAAM,SAAS,IAAI;AACjC,UAAG,KAAK,OAAM,SAAU,IAAI,MAAM;AAChC,WAAG,IAAI,KAAK,QAAQ,UAAU,MAAM,OAAM;AAAA;AAAA;AAI9C,kBAAe,OAAM,SAAS;AAC5B,aAAO,UAAU,IAAG,SAAS,QAAO,OAAM;AAAA;AAAA;AAAA;;;ACxC5C;AAAA;AAAA,YAAO,UAAU;AACjB,UAAM,OAAO;AAEb,QAAI,MAAK,QAAQ;AAEjB,mBAAgB,OAAM,SAAS,IAAI;AACjC,UAAG,KAAK,OAAM,SAAU,IAAI,MAAM;AAChC,WAAG,IAAI,KAAK,QAAQ,UAAU,MAAM;AAAA;AAAA;AAIxC,kBAAe,OAAM,SAAS;AAC5B,aAAO,UAAU,IAAG,SAAS,QAAO;AAAA;AAGtC,uBAAoB,MAAM,SAAS;AACjC,aAAO,KAAK,YAAY,UAAU,MAAM;AAAA;AAG1C,uBAAoB,MAAM,SAAS;AACjC,UAAI,MAAM,KAAK;AACf,UAAI,MAAM,KAAK;AACf,UAAI,MAAM,KAAK;AAEf,UAAI,QAAQ,QAAQ,QAAQ,SAC1B,QAAQ,MAAM,QAAQ,UAAU,QAAQ;AAC1C,UAAI,QAAQ,QAAQ,QAAQ,SAC1B,QAAQ,MAAM,QAAQ,UAAU,QAAQ;AAE1C,UAAI,IAAI,SAAS,OAAO;AACxB,UAAI,IAAI,SAAS,OAAO;AACxB,UAAI,IAAI,SAAS,OAAO;AACxB,UAAI,KAAK,IAAI;AAEb,UAAI,MAAO,MAAM,KACd,MAAM,KAAM,QAAQ,SACpB,MAAM,KAAM,QAAQ,SACpB,MAAM,MAAO,UAAU;AAE1B,aAAO;AAAA;AAAA;AAAA;;;ACvCT;AAAA;AAAA,QAAI,MAAK,QAAQ;AACjB,QAAI;AACJ,QAAI,QAAQ,aAAa,WAAW,OAAO,iBAAiB;AAC1D,aAAO;AAAA,WACF;AACL,aAAO;AAAA;AAGT,YAAO,UAAU;AACjB,UAAM,OAAO;AAEb,mBAAgB,OAAM,SAAS,IAAI;AACjC,UAAI,OAAO,YAAY,YAAY;AACjC,aAAK;AACL,kBAAU;AAAA;AAGZ,UAAI,CAAC,IAAI;AACP,YAAI,OAAO,YAAY,YAAY;AACjC,gBAAM,IAAI,UAAU;AAAA;AAGtB,eAAO,IAAI,QAAQ,SAAU,UAAS,QAAQ;AAC5C,gBAAM,OAAM,WAAW,IAAI,SAAU,IAAI,IAAI;AAC3C,gBAAI,IAAI;AACN,qBAAO;AAAA,mBACF;AACL,uBAAQ;AAAA;AAAA;AAAA;AAAA;AAMhB,WAAK,OAAM,WAAW,IAAI,SAAU,IAAI,IAAI;AAE1C,YAAI,IAAI;AACN,cAAI,GAAG,SAAS,YAAY,WAAW,QAAQ,cAAc;AAC3D,iBAAK;AACL,iBAAK;AAAA;AAAA;AAGT,WAAG,IAAI;AAAA;AAAA;AAIX,kBAAe,OAAM,SAAS;AAE5B,UAAI;AACF,eAAO,KAAK,KAAK,OAAM,WAAW;AAAA,eAC3B,IAAP;AACA,YAAI,WAAW,QAAQ,gBAAgB,GAAG,SAAS,UAAU;AAC3D,iBAAO;AAAA,eACF;AACL,gBAAM;AAAA;AAAA;AAAA;AAAA;AAAA;;;ACrDZ;AAAA;AAAA,QAAM,YAAY,QAAQ,aAAa,WACnC,QAAQ,IAAI,WAAW,YACvB,QAAQ,IAAI,WAAW;AAE3B,QAAM,QAAO,QAAQ;AACrB,QAAM,QAAQ,YAAY,MAAM;AAChC,QAAM,QAAQ;AAEd,QAAM,mBAAmB,CAAC,QACxB,OAAO,OAAO,IAAI,MAAM,cAAc,QAAQ,EAAE,MAAM;AAExD,QAAM,cAAc,CAAC,KAAK,QAAQ;AAChC,YAAM,QAAQ,IAAI,SAAS;AAI3B,YAAM,UAAU,IAAI,MAAM,SAAS,aAAa,IAAI,MAAM,QAAQ,CAAC,MAE/D;AAAA,QAEE,GAAI,YAAY,CAAC,QAAQ,SAAS;AAAA,QAClC,GAAI,KAAI,QAAQ,QAAQ,IAAI,QACe,IAAI,MAAM;AAAA;AAG3D,YAAM,aAAa,YACf,IAAI,WAAW,QAAQ,IAAI,WAAW,wBACtC;AACJ,YAAM,UAAU,YAAY,WAAW,MAAM,SAAS,CAAC;AAEvD,UAAI,WAAW;AACb,YAAI,IAAI,QAAQ,SAAS,MAAM,QAAQ,OAAO;AAC5C,kBAAQ,QAAQ;AAAA;AAGpB,aAAO;AAAA,QACL;AAAA,QACA;AAAA,QACA;AAAA;AAAA;AAIJ,QAAM,QAAQ,CAAC,KAAK,KAAK,OAAO;AAC9B,UAAI,OAAO,QAAQ,YAAY;AAC7B,aAAK;AACL,cAAM;AAAA;AAER,UAAI,CAAC;AACH,cAAM;AAER,YAAM,EAAE,SAAS,SAAS,eAAe,YAAY,KAAK;AAC1D,YAAM,QAAQ;AAEd,YAAM,OAAO,OAAK,IAAI,QAAQ,CAAC,UAAS,WAAW;AACjD,YAAI,MAAM,QAAQ;AAChB,iBAAO,IAAI,OAAO,MAAM,SAAS,SAAQ,SACrC,OAAO,iBAAiB;AAE9B,cAAM,QAAQ,QAAQ;AACtB,cAAM,WAAW,SAAS,KAAK,SAAS,MAAM,MAAM,GAAG,MAAM;AAE7D,cAAM,OAAO,MAAK,KAAK,UAAU;AACjC,cAAM,IAAI,CAAC,YAAY,YAAY,KAAK,OAAO,IAAI,MAAM,GAAG,KAAK,OAC7D;AAEJ,iBAAQ,QAAQ,GAAG,GAAG;AAAA;AAGxB,YAAM,UAAU,CAAC,GAAG,GAAG,OAAO,IAAI,QAAQ,CAAC,UAAS,WAAW;AAC7D,YAAI,OAAO,QAAQ;AACjB,iBAAO,SAAQ,KAAK,IAAI;AAC1B,cAAM,MAAM,QAAQ;AACpB,cAAM,IAAI,KAAK,EAAE,SAAS,cAAc,CAAC,IAAI,OAAO;AAClD,cAAI,CAAC,MAAM,IAAI;AACb,gBAAI,IAAI;AACN,oBAAM,KAAK,IAAI;AAAA;AAEf,qBAAO,SAAQ,IAAI;AAAA;AAEvB,iBAAO,SAAQ,QAAQ,GAAG,GAAG,KAAK;AAAA;AAAA;AAItC,aAAO,KAAK,KAAK,GAAG,KAAK,SAAO,GAAG,MAAM,MAAM,MAAM,KAAK;AAAA;AAG5D,QAAM,YAAY,CAAC,KAAK,QAAQ;AAC9B,YAAM,OAAO;AAEb,YAAM,EAAE,SAAS,SAAS,eAAe,YAAY,KAAK;AAC1D,YAAM,QAAQ;AAEd,eAAS,IAAI,GAAG,IAAI,QAAQ,QAAQ,KAAM;AACxC,cAAM,QAAQ,QAAQ;AACtB,cAAM,WAAW,SAAS,KAAK,SAAS,MAAM,MAAM,GAAG,MAAM;AAE7D,cAAM,OAAO,MAAK,KAAK,UAAU;AACjC,cAAM,IAAI,CAAC,YAAY,YAAY,KAAK,OAAO,IAAI,MAAM,GAAG,KAAK,OAC7D;AAEJ,iBAAS,IAAI,GAAG,IAAI,QAAQ,QAAQ,KAAM;AACxC,gBAAM,MAAM,IAAI,QAAQ;AACxB,cAAI;AACF,kBAAM,KAAK,MAAM,KAAK,KAAK,EAAE,SAAS;AACtC,gBAAI,IAAI;AACN,kBAAI,IAAI;AACN,sBAAM,KAAK;AAAA;AAEX,uBAAO;AAAA;AAAA,mBAEJ,IAAP;AAAA;AAAA;AAAA;AAIN,UAAI,IAAI,OAAO,MAAM;AACnB,eAAO;AAET,UAAI,IAAI;AACN,eAAO;AAET,YAAM,iBAAiB;AAAA;AAGzB,YAAO,UAAU;AACjB,UAAM,OAAO;AAAA;AAAA;;;AC5Hb;AAAA;AAAA,QAAI,SAAS;AACb,QAAI,UAAU,QAAQ,iBAAiB;AACvC,QAAI,UAAU,QAAQ;AACtB,QAAI,MAAK,QAAQ;AACjB,QAAI,WAAW;AACf,QAAI,SAAS,QAAQ;AACrB,QAAI,QAAQ;AACZ,QAAI,WAAW;AACf,QAAI,UAAU,QAAQ,IAAI,gBAAgB;AAe1C,iBAAc,QAAQ,OAAO;AAC3B,eAAS,UAAU;AAAA;AASrB,iBAAc,QAAQ;AACpB,aAAO,SAAS,WAAW;AAAA;AAY7B,kBAAe,QAAQ,WAAW,UAAU,UAAU;AACpD,UAAI,CAAC,YAAY,OAAO,aAAa,YAAY;AAC/C,mBAAW;AACX,mBAAW;AAAA;AAGb,mBAAa,QAAQ,UAAU,SAAU,KAAK,MAAM,QAAQ,QAAQ;AAClE,YAAI,OAAO;AAEX,YAAI,KAAK;AACP,iBAAO,SAAS;AAAA;AAGlB,YAAK,QAAQ,OAAO,MAAM,IAAI,OAAO,eAAe,YAAY,SAAS,OAAQ;AAC/E,kBAAQ,MAAM;AAAA,eACT;AACL,kBAAQ;AAAA;AAIV,YAAI,cAAc,iBAAiB;AACjC,sBAAY;AAAA;AAGd,YAAK,MAAM,OAAO,MAAM,IAAI,OAAO,cAAc,YAAY,QAAQ,OAAQ;AAC3E,gBAAM,IAAI,QAAQ,IAAI,GAAG;AAAA,eACpB;AACL,gBAAM;AAAA;AAGR,YAAI,SAAS,KAAK,OAAO,GAAG;AAC1B,iBAAO,SAAS,MAAM,OAAO,UAAU,OAAO;AAAA,eACzC;AACL,iBAAO,SAAS,IAAI,MAAM,YAAY,oDAAoD,SAAS,qBAAqB,SAAS,aAAa;AAAA;AAAA;AAAA;AAapJ,wBAAqB,QAAQ,UAAU,UAAU;AAC/C,UAAI,CAAC,YAAY,OAAO,aAAa,YAAY;AAC/C,mBAAW;AACX,mBAAW;AAAA;AAEb,mBAAa,QAAQ,UAAU,MAAM,SAAU,KAAK,MAAM,QAAQ,QAAQ;AACxE,YAAI,KAAK;AACP,iBAAO,SAAS;AAAA;AAElB,eAAO,SAAS,MAAM;AAAA;AAAA;AAY1B,mBAAgB,QAAQ,QAAQ,UAAU;AACxC,UAAI,UAAU,IAAI,kBAAkB,QAAQ,IAAI,eAAe;AAE/D,sBAAgB,SAAS,SAAU,KAAK;AACtC,YAAI,KAAK;AACP,iBAAO,SAAS;AAAA;AAElB,YAAI,UAAU,QAAQ,SAAS;AAC/B,YAAI,SAAS;AAEb,YAAI,SAAU,SAAS,OAAO,MAAM,KAAK;AACzC,gBAAQ,OAAO,GAAG,QAAQ,SAAU,MAAM;AACxC,cAAI,CAAC,QAAQ;AACX,sBAAU,KAAK,SAAS;AAAA,iBACnB;AACL,qBAAS,OAAO,OAAO,CAAC,QAAQ;AAAA;AAAA;AAIpC,gBAAQ,OAAO,GAAG,QAAQ,SAAU,MAAM;AACxC,oBAAU,KAAK,SAAS;AAAA;AAK1B,YAAI,SAAS;AACb,YAAI,OAAO;AACX,YAAI,WAAW;AACf,YAAI,OAAO,SAAU,MAAK;AACxB,cAAI,UAAU;AACZ;AAAA;AAGF,cAAI,MAAK;AACP,uBAAW;AACX,mBAAO,SAAS;AAAA;AAGlB,cAAI,EAAE,SAAS,GAAG;AAChB,uBAAW;AACX,gBAAI,MAAM;AACR,kBAAI,SAAS,KAAM,YAAW,MAAM,0BAA0B,KAAK,UAAU;AAC3E,uBAAO,SAAS,MAAM,MAAM,QAAQ;AAAA;AAEtC,qBAAO,SAAS,IAAI,MAAM,gCAAgC,OAAO,iBAAiB,OAAO,KAAK,OAAO,OAAO,SAAS;AAAA,mBAChH;AACL,qBAAO,SAAS,MAAM,MAAM,QAAQ;AAAA;AAAA;AAAA;AAK1C,gBAAQ,GAAG,SAAS;AAEpB,gBAAQ,GAAG,QAAQ,SAAU,KAAK;AAChC,iBAAO;AACP;AAAA;AAGF,gBAAQ,GAAG,SAAS,WAAY;AAC9B,mBAAU,SAAS,SAAS,OAAO,KAAK,QAAQ,UAAU,SAAS;AACnE,mBAAS,OAAO,KAAK,QAAQ,UAAU,SAAS;AAChD;AAAA;AAAA;AAAA;AAcN,0BAAuB,QAAQ,UAAU,QAAQ,UAAU;AACzD,UAAI,CAAC,YAAY,OAAO,WAAW,YAAY;AAC7C,mBAAW;AACX,iBAAS;AAAA;AAGX,UAAI,QAAQ;AACZ,UAAI,iBAAiB;AAErB,UAAI,UAAU;AACZ,mBAAW,GAAG,OAAO;AACrB,YAAI,OAAO;AACX,aAAK,IAAI,GAAG,IAAI,OAAO,QAAQ,KAAK;AAClC,cAAI,OAAO,OAAO,eAAe;AAC/B,oBAAQ,QAAQ,KAAK,SAAS,OAAO,YAAY,IAAI,SAAS;AAC9D,kBAAM,KAAK;AAAA,cACT,MAAM;AAAA,cACN,UAAU,SAAS;AAAA;AAErB,mBAAO,KAAK;AACZ,2BAAe,KAAK;AAAA;AAAA;AAAA;AAK1B,UAAI;AACJ,WAAK,IAAI,GAAG,IAAI,MAAM,QAAQ,KAAK;AACjC,eAAO,MAAM;AACb,YAAG,cAAc,KAAK,MAAM,KAAK;AAAA;AAGnC,YAAM,QAAQ,QAAQ,SAAU,KAAK,MAAM,QAAQ,QAAQ;AACzD,eAAO,gBAAgB,gBAAgB,SAAU,OAAO;AACtD,mBAAS,OAAO,OAAO,MAAM,QAAQ;AAAA;AAAA;AAAA;AAY3C,6BAA0B,SAAS,UAAU;AAC3C,YAAM,SAAS,SAAU,OAAO;AAC9B,YAAI,OAAO;AACT,iBAAO,SAAS,IAAI,MAAM,yDAAyD;AAAA;AAErF;AAAA;AAAA;AAKJ,UAAM,CAAC,YAAY,OAAO,SAAU,KAAK,MAAM,QAAQ,QAAQ;AAC7D,UAAI,OAAO,OAAO,UAAU,OAAO,OAAO,UAAU,OAAO,OAAO;AAClE,UAAI,MAAM,KAAK,MAAM;AACrB,UAAI,kBAAmB,QAAO,IAAI,KAAK,aAAa,WAAW;AAAA;AAGjE,YAAO,UAAU;AAAA,MACf;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA;AAAA;AAAA;;;AC/PF;AAAA;AAAA;AAEA,QAAI,UAAU;AACd,QAAI,SAAS;AA8Bb,YAAO,QAAQ,UAAU,SAAU,QAAQ,SAAS,MAAM,UAAU;AAClE,UAAI,CAAC,YAAY,OAAO,SAAS,YAAY;AAC3C,mBAAW;AACX,eAAO;AAAA;AAET,UAAI,SAAS;AAAA,QACX;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA;AAEF,cAAQ,aAAa,QAAQ,OAAO,SAAU,OAAO,MAAM;AACzD,YAAI,OAAO;AACT,mBAAS;AAAA,eACJ;AACL,mBAAS,MAAM,SAAS;AAAA;AAAA;AAAA;AAY9B,YAAO,QAAQ,UAAU,SAAU,QAAQ,SAAS,MAAM,UAAU;AAClE,UAAI,CAAC,YAAY,OAAO,SAAS,YAAY;AAC3C,mBAAW;AACX,eAAO;AAAA;AAET,UAAI,SAAS;AAAA,QACX;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA;AAEF,cAAQ,aAAa,QAAQ,OAAO,SAAU,OAAO,MAAM;AACzD,YAAI,OAAO;AACT,mBAAS;AAAA,eACJ;AACL,mBAAS,MAAM,SAAS;AAAA;AAAA;AAAA;AAW9B,YAAO,QAAQ,UAAU,SAAU,cAAc,SAAS,UAAU;AAClE,UAAI,SAAS;AAAA,QACX;AAAA,QACA;AAAA,QACA;AAAA,QACA,aAAa;AAAA,QACb;AAAA,QACA;AAAA;AAEF,UAAI,aAAa,IAAI;AACnB,YAAI,CAAC,MAAM,QAAQ,aAAa,KAAK;AACnC,uBAAa,KAAK,CAAC,aAAa;AAAA;AAElC,qBAAa,GAAG,QAAQ,SAAU,IAAI;AACpC,iBAAO,KAAK;AACZ,iBAAO,KAAK;AAAA;AAAA;AAGhB,cAAQ,aAAa,QAAQ,OAAO,SAAU,OAAO,MAAM;AACzD,YAAI,OAAO;AACT,mBAAS;AAAA,eACJ;AACL,mBAAS,MAAM,SAAS;AAAA;AAAA;AAAA;AAW9B,YAAO,QAAQ,UAAU,SAAU,QAAQ,SAAS,UAAU;AAC5D,UAAI,SAAS;AAAA,QACX;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA;AAEF,cAAQ,aAAa,QAAQ,OAAO,SAAU,OAAO,MAAM;AACzD,YAAI,OAAO;AACT,mBAAS;AAAA,eACJ;AACL,mBAAS,MAAM,SAAS;AAAA;AAAA;AAAA;AAY9B,YAAO,QAAQ,UAAU,SAAU,cAAc,SAAS,UAAU,UAAU;AAC5E,UAAI,SAAS;AAAA,QACX;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA,aAAa;AAAA,QACb;AAAA,QACA,aAAa;AAAA;AAEf,UAAI,aAAa,IAAI;AACnB,YAAI,CAAC,MAAM,QAAQ,aAAa,KAAK;AACnC,uBAAa,KAAK,CAAC,aAAa;AAAA;AAElC,qBAAa,GAAG,QAAQ,SAAU,IAAI;AACpC,iBAAO,KAAK;AACZ,iBAAO,KAAK;AAAA;AAAA;AAGhB,UAAI,iBAAiB;AACrB,aAAO,mBAAmB,EAAE,QAAQ,IAAI,UAAoB,UAAU,QAAQ,QAAQ;AACtF,aAAO,mBAAmB,EAAE,QAAQ,IAAI,UAAoB,UAAU,SAAS,QAAQ;AACvF,cAAQ,aAAa,QAAQ,OAAO,SAAU,OAAO,MAAM;AACzD,sBAAe,QAAO;AACpB,cAAI,QAAO;AACT,qBAAS;AAAA,iBACJ;AACL,qBAAS,MAAM,SAAS;AAAA;AAAA;AAG5B,eAAO,gBAAgB,gBAAgB,SAAU,OAAO;AACtD,eAAK,SAAS;AAAA;AAAA;AAAA;AAYpB,YAAO,QAAQ,UAAU,SAAU,QAAQ,SAAS,UAAU,UAAU;AACtE,UAAI,SAAS;AAAA,QACX;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA;AAEF,UAAI,iBAAiB;AACrB,aAAO,mBAAmB,EAAE,QAAQ,IAAI,UAAoB,UAAU,QAAQ,QAAQ;AACtF,aAAO,mBAAmB,EAAE,QAAQ,IAAI,UAAoB,UAAU,SAAS,QAAQ;AACvF,cAAQ,aAAa,QAAQ,OAAO,SAAU,OAAO,MAAM;AACzD,sBAAe,QAAO;AACpB,cAAI,QAAO;AACT,qBAAS;AAAA,iBACJ;AACL,qBAAS,MAAM,SAAS;AAAA;AAAA;AAG5B,eAAO,gBAAgB,gBAAgB,SAAU,OAAO;AACtD,eAAK,SAAS;AAAA;AAAA;AAAA;AAYpB,YAAO,QAAQ,UAAU,SAAU,cAAc,SAAS,UAAU,UAAU;AAC5E,UAAI,UAAU,aAAa,KAAK,QAAQ,YAAY;AACpD,UAAI,SAAS;AAAA,QACX;AAAA,QACA;AAAA,QACA;AAAA,QACA,aAAa;AAAA,QACb;AAAA,QACA;AAAA;AAEF,cAAQ,aAAa,QAAQ,OAAO,SAAU,OAAO,MAAM;AACzD,YAAI,OAAO;AACT,mBAAS;AAAA,eACJ;AACL,cAAI,UAAS;AAAA,YACX;AAAA,YACA;AAAA,YACA;AAAA,YACA;AAAA,YACA;AAAA,YACA,aAAa;AAAA,YACb;AAAA,YACA;AAAA;AAEF,cAAI,aAAa,IAAI;AACnB,gBAAI,CAAC,MAAM,QAAQ,aAAa,KAAK;AACnC,2BAAa,KAAK,CAAC,aAAa;AAAA;AAElC,yBAAa,GAAG,QAAQ,SAAU,IAAI;AACpC,sBAAO,KAAK;AACZ,sBAAO,KAAK;AAAA;AAAA;AAGhB,cAAI,iBAAiB,CAAC;AACtB,iBAAO,mBAAmB,EAAE,QAAQ,IAAI,UAAoB,UAAU,QAAQ,SAAQ;AACtF,iBAAO,mBAAmB,EAAE,QAAQ,IAAI,UAAoB,UAAU,SAAS,SAAQ;AACvF,kBAAQ,aAAa,SAAQ,OAAO,SAAU,QAAO,OAAM;AACzD,0BAAe,QAAO;AACpB,kBAAI,QAAO;AACT,yBAAS;AAAA,qBACJ;AACL,yBAAS,MAAM,UAAS;AAAA;AAAA;AAG5B,mBAAO,gBAAgB,gBAAgB,SAAU,OAAO;AACtD,mBAAK,UAAS;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;AChRxB;AAAA;AAAA;AAQA,QAAM,EAAE,cAAc;AACtB,QAAI,MAAM,QAAQ;AAClB,QAAI,SAAS;AACb,QAAI,UAAU;AAEd,YAAO,QAAQ,mBAAmB;AAClC,YAAO,QAAQ,gBAAgB;AAC/B,YAAO,QAAQ,gBAAgB;AAC/B,YAAO,QAAQ,YAAY;AAC3B,YAAO,QAAQ,oBAAoB;AACnC,YAAO,QAAQ,sBAAsB;AACrC,YAAO,QAAQ,eAAe;AAC9B,YAAO,QAAQ,iBAAiB;AAChC,YAAO,QAAQ,aAAa;AAC5B,YAAO,QAAQ,iBAAiB;AAChC,YAAO,QAAQ,eAAe;AAC9B,YAAO,QAAQ,aAAa;AAC5B,YAAO,QAAQ,qBAAqB;AACpC,YAAO,QAAQ,mBAAmB;AAClC,YAAO,QAAQ,cAAc;AAC7B,YAAO,QAAQ,SAAS;AAMxB,YAAO,QAAQ,UAAU;AAEzB,QAAI,YAAY;AAChB,QAAI,UAAU;AACd,QAAI,gBAAgB;AACpB,QAAI,cAAc;AAClB,QAAI,sBAAsB;AAC1B,QAAI,oBAAoB;AACxB,QAAI,aAAa;AACjB,QAAI,WAAW;AAYf,8BAA2B,YAAY,SAAS,UAAU;AACxD,UAAI,CAAC,YAAY,CAAC,WAAW,OAAO,eAAe,YAAY;AAC7D,mBAAW;AACX,qBAAa;AACb,kBAAU;AAAA,iBACD,CAAC,YAAY,cAAc,OAAO,YAAY,YAAY;AACnE,mBAAW;AACX,kBAAU;AAAA;AAGZ,mBAAa,OAAO,eAAe;AAEnC,UAAI,SAAS,CAAC;AACd,UAAI,iBAAiB;AAErB,UAAI,WAAW,QAAQ,UAAW,OAAO,OAAO,QAAQ,QAAQ,QAAQ,aAAa,MAAO,QAAQ,UAAU;AAC5G,eAAO,mBAAmB,EAAE,QAAQ,QAAQ,QAAQ,UAAU,QAAQ,UAAU,UAAU,SAAS,QAAQ;AAAA;AAG7G,aAAO,KAAK;AAEZ,cAAQ,KAAK,QAAQ,mBAAmB,SAAU,QAAQ,KAAK;AAC7D,sBAAe,KAAK;AAClB,cAAI,KAAK;AACP,mBAAO,SAAS;AAAA;AAElB,mBAAS,MAAM;AAAA,YACb;AAAA;AAAA;AAGJ,eAAO,gBAAgB,gBAAgB,SAAU,OAAO;AACtD,eAAK,UAAU;AAAA;AAAA;AAAA;AAYrB,2BAAwB,YAAY,UAAU;AAC5C,UAAI,CAAC,YAAY,OAAO,eAAe,YAAY;AACjD,mBAAW;AACX,qBAAa;AAAA;AAGf,mBAAa,OAAO,eAAe;AAEnC,UAAI,SAAS;AAAA,QAAC;AAAA,QACZ;AAAA,QACA;AAAA,QACA;AAAA;AAGF,cAAQ,KAAK,QAAQ,iBAAiB,SAAU,OAAO,SAAS;AAC9D,YAAI,OAAO;AACT,iBAAO,SAAS;AAAA;AAElB,eAAO,SAAS,MAAM;AAAA,UACpB;AAAA;AAAA;AAAA;AAaN,2BAAwB,SAAS,UAAU,OAAO,UAAU;AAC1D,UAAI,CAAC,YAAY,OAAO,UAAU,eAAe,CAAC,YAAY,OAAO,YAAY,YAAY;AAC3F,mBAAW;AACX,kBAAU;AAAA,iBACD,CAAC,YAAY,OAAO,UAAU,eAAe,WAAW,OAAO,aAAa,YAAY;AACjG,mBAAW;AACX,mBAAW;AAAA,iBACF,CAAC,YAAY,OAAO,UAAU,cAAc,WAAW,UAAU;AAC1E,mBAAW;AACX,gBAAQ;AAAA;AAGV,gBAAU,WAAW;AACrB,iBAAW,YAAY;AACvB,cAAQ,SAAS;AAEjB,UAAI,SAAS;AAAA,QAAC;AAAA,QACZ;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA;AAGF,UAAI,eAAe;AACnB,UAAI,OAAO;AACT,eAAO,KAAK;AACZ,uBAAe;AAAA;AAGjB,cAAQ,KAAK,QAAQ,cAAc,SAAU,OAAO,SAAS;AAC3D,YAAI,OAAO;AACT,iBAAO,SAAS;AAAA;AAElB,eAAO,SAAS,MAAM;AAAA,UACpB;AAAA;AAAA;AAAA;AAyBN,uBAAoB,SAAS,UAAU;AACrC,UAAI,CAAC,YAAY,OAAO,YAAY,YAAY;AAC9C,mBAAW;AACX,kBAAU;AAAA;AAGZ,gBAAU,WAAW;AAGrB,UAAI,QAAQ,cAAe,KAAI,OAAO,QAAQ,eAAe,IAAI,OAAO,QAAQ,cAAc;AAC5F,YAAI,CAAC,QAAQ,UAAU;AACrB,kBAAQ,WAAW,CAAC,QAAQ;AAAA,mBACnB,QAAQ,SAAS,QAAQ,QAAQ,gBAAgB,IAAI;AAC9D,kBAAQ,WAAW,QAAQ,SAAS,OAAO,CAAC,QAAQ;AAAA;AAAA;AAIxD,UAAI,CAAC,QAAQ,WAAW;AACtB,yBAAiB,QAAQ,cAAc,MAAM,SAAU,OAAO,SAAS;AACrE,cAAI,OAAO;AACT,mBAAO,SAAS;AAAA;AAElB,kBAAQ,YAAY,QAAQ;AAC5B,oBAAU,SAAS;AAAA;AAErB;AAAA;AAGF,UAAI,SAAS;AAAA,QAAC;AAAA,QACZ;AAAA,QACA,MAAO,SAAQ,QAAQ;AAAA;AAGzB,UAAI,QAAQ,eAAe;AACzB,eAAO,KAAK;AACZ,eAAO,KAAK,QAAQ;AAAA,aACf;AACL,eAAO,KAAK;AACZ,eAAO,KAAK,mBAAmB;AAAA;AAGjC,aAAO,KAAK;AACZ,aAAO,KAAK;AAEZ,UAAI,WAAW,CAAC,QAAQ;AACxB,UAAI,UAAS;AAEb,UAAI,QAAQ,YAAY,MAAM,QAAQ,QAAQ,aAAa,QAAQ,SAAS,QAAQ;AAClF,eAAO,KAAK;AACZ,eAAO,KAAK;AACZ,eAAO,KAAK;AACZ,eAAO,KAAK;AACZ,YAAI,cAAc;AAClB,iBAAS,IAAI,GAAG,IAAI,QAAQ,SAAS,QAAQ,KAAK;AAChD,sBAAY,KAAM,KAAI,KAAK,QAAQ,SAAS,MAAM,OAAO,SAAS,MAAO,KAAI,KAAK,QAAQ,QAAQ,SAAS;AAAA;AAG7G,iBAAS,KAAK,UAAS;AAAA,UACrB;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA,UACA,YAAY,KAAK;AAAA,UACjB;AAAA,UACA;AAAA,UACA;AAAA,UACA,KAAK;AAAA,iBACE,QAAQ,QAAQ;AACzB,kBAAS,QAAQ;AAAA;AAGnB,UAAI,iBAAiB;AACrB,UAAI,QAAQ,mBAAmB;AAC7B,eAAO,mBAAmB,EAAE,QAAQ,IAAI,UAAU,QAAQ,mBAAmB,UAAU,QAAQ,QAAQ;AAAA;AAGzG,cAAQ,KAAK,QAAQ,uBAAuB,UAAU,SAAU,QAAQ,MAAM;AAC5E,sBAAe,KAAK;AAClB,cAAI,KAAK;AACP,mBAAO,SAAS;AAAA;AAElB,mBAAS,MAAM;AAAA,YACb,KAAK;AAAA,YACL,QAAQ;AAAA,YACR,WAAW,QAAQ;AAAA;AAAA;AAGvB,eAAO,gBAAgB,gBAAgB,SAAU,OAAO;AACtD,eAAK,UAAU;AAAA;AAAA;AAAA;AA2BrB,+BAA4B,SAAS,UAAU;AAC7C,UAAI,CAAC,YAAY,OAAO,YAAY,YAAY;AAC9C,mBAAW;AACX,kBAAU;AAAA;AAGZ,gBAAU,WAAW;AAErB,UAAI,CAAC,QAAQ,KAAK;AAChB,kBAAU,SAAS,SAAU,OAAO,SAAS;AAC3C,cAAI,OAAO;AACT,mBAAO,SAAS;AAAA;AAElB,kBAAQ,MAAM,QAAQ;AACtB,kBAAQ,SAAS,QAAQ;AACzB,kBAAQ,YAAY,QAAQ;AAC5B,4BAAkB,SAAS;AAAA;AAE7B;AAAA;AAGF,UAAI,CAAC,QAAQ,WAAW;AACtB,gBAAQ,YAAY;AAAA;AAGtB,UAAI,CAAC,QAAQ,YAAY;AACvB,YAAI,QAAQ,YAAY;AACtB,kBAAQ,aAAa,QAAQ;AAAA,eACxB;AACL,2BAAiB,QAAQ,cAAc,MAAM,SAAU,OAAO,SAAS;AACrE,gBAAI,OAAO;AACT,qBAAO,SAAS;AAAA;AAElB,oBAAQ,aAAa,QAAQ;AAC7B,8BAAkB,SAAS;AAAA;AAE7B;AAAA;AAAA;AAIJ,0BAAoB,QAAQ,KAAK,SAAU,QAAQ,OAAO;AACxD,YAAI,QAAQ;AACV,iBAAO,SAAS;AAAA;AAGlB,YAAI,SAAS;AAAA,UAAC;AAAA,UACZ;AAAA,UACA,MAAO,SAAQ,QAAQ;AAAA,UACvB;AAAA,UACA,OAAO,QAAQ,SAAS;AAAA,UACxB;AAAA,UACA;AAAA;AAEF,YAAI,WAAW,CAAC,QAAQ;AACxB,YAAI,iBAAiB;AAErB,YAAI,QAAQ,oBAAoB;AAC9B,iBAAO,KAAK;AACZ,iBAAO,KAAK;AACZ,iBAAO,KAAK;AACZ,iBAAO,KAAK;AACZ,cAAI,QAAQ,QAAQ;AAClB,mBAAO,KAAK;AACZ,gBAAI,OAAO,SAAS,QAAQ,SAAS;AAQnC,qBAAO,KAAK,OAAQ,8CAA6C,QAAQ,OAAO,SAAS,KAAK,MAAM;AAAA,mBAC/F;AACL,kBAAI,OAAO,MAAM,QAAQ,SAAS;AAChC,oBAAI,QAAQ,OAAO,WAAW,OAAO;AACnC,0BAAQ,SAAS,QAAQ,OAAO,UAAU,GAAG,QAAQ,OAAO;AAAA;AAE9D,uBAAO,KAAK,OAAQ,8CAA6C,QAAQ,QAAQ,MAAM;AAAA,qBAClF;AACL,uBAAO,KAAK,OAAQ,8CAA6C,OAAO,MAAM,QAAQ,SAAS,MAAM;AAAA;AAAA;AAAA,iBAGpG;AACL,mBAAO,KAAK;AACZ,gBAAI,QAAQ,YAAY;AACtB,qBAAO,KAAK;AACZ,qBAAO,KAAK,QAAQ,aAAa;AAAA;AAAA;AAGrC,cAAI,QAAQ,oBAAoB;AAC9B,mBAAO,mBAAmB,EAAE,QAAQ,IAAI,UAAU,QAAQ,oBAAoB,UAAU,QAAQ,QAAQ;AAAA;AAE1G,mBAAS,KAAK,QAAQ;AACtB,mBAAS,KAAK,QAAQ;AAAA,eACjB;AACL,iBAAO,KAAK;AACZ,iBAAO,KAAK;AACZ,cAAI,QAAQ,oBAAoB;AAC9B,mBAAO,mBAAmB,EAAE,QAAQ,IAAI,UAAU,QAAQ,oBAAoB,UAAU,QAAQ,QAAQ;AAAA;AAE1G,mBAAS,KAAK,QAAQ;AAAA;AAGxB,YAAI,QAAQ,QAAQ;AAClB,iBAAO,KAAK;AACZ,iBAAO,KAAK;AACZ,iBAAO,KAAK;AACZ,iBAAO,KAAK;AACZ,mBAAS,KAAK,QAAQ;AAAA,mBACb,QAAQ,SAAS;AAC1B,iBAAO,KAAK;AACZ,iBAAO,KAAK,QAAQ;AAAA,eACf;AACL,cAAI,cAAc;AAClB,cAAI,SAAS,MAAM,KAAK;AACtB,qBAAS,IAAI,GAAG,IAAI,MAAM,IAAI,IAAI,QAAQ,KAAK;AAC7C,0BAAY,KAAK,SAAe,KAAI,KAAK,QAAQ,MAAM,IAAI,IAAI;AAAA;AAEjE,qBAAS,KAAK,GAAG,KAAK,MAAM,IAAI,GAAG,QAAQ,MAAM;AAC/C,0BAAY,KAAK,QAAc,MAAK,KAAK,QAAQ,MAAM,IAAI,GAAG;AAAA;AAEhE,qBAAS,KAAK,GAAG,KAAK,MAAM,IAAI,MAAM,QAAQ,MAAM;AAClD,0BAAY,KAAK,WAAiB,MAAK,KAAK,QAAQ,MAAM,IAAI,MAAM;AAAA;AAEtE,mBAAO,KAAK;AACZ,mBAAO,KAAK;AACZ,mBAAO,KAAK;AACZ,mBAAO,KAAK;AACZ,qBAAS,KAAK;AAAA,cACZ;AAAA,cACA;AAAA,cACA;AAAA,cACA,YAAY,KAAK;AAAA,cACjB,KAAK;AAAA;AAAA;AAIX,YAAI,QAAQ,mBAAmB;AAC7B,iBAAO,mBAAmB,EAAE,QAAQ,IAAI,UAAU,QAAQ,mBAAmB,UAAU,QAAQ,QAAQ;AAAA;AAGzG,gBAAQ,KAAK,QAAQ,eAAe,UAAU,SAAU,QAAQ,MAAM;AACpE,wBAAe,KAAK;AAClB,gBAAI,KAAK;AACP,qBAAO,SAAS;AAAA;AAElB,gBAAI,WAAW;AAAA,cACb,KAAK,QAAQ;AAAA,cACb,WAAW,QAAQ;AAAA,cACnB,aAAa;AAAA,cACb,YAAY,QAAQ;AAAA;AAEtB,mBAAO,SAAS,MAAM;AAAA;AAGxB,iBAAO,gBAAgB,gBAAgB,SAAU,OAAO;AACtD,iBAAK,UAAU;AAAA;AAAA;AAAA;AAAA;AAYvB,0BAAuB,aAAa,UAAU;AAC5C,UAAI,CAAC,YAAY,OAAO,gBAAgB,YAAY;AAClD,mBAAW;AACX,sBAAc;AAAA;AAGhB,oBAAe,gBAAe,IAAI;AAElC,UAAI;AAEJ,UAAI,YAAY,MAAM,sCAAsC;AAC1D,iBAAS;AAAA,UAAC;AAAA,UACR;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA;AAAA,iBAEO,YAAY,MAAM,4BAA4B,YAAY,MAAM,sBAAsB;AAC/F,iBAAS;AAAA,UAAC;AAAA,UACR;AAAA,UACA;AAAA,UACA;AAAA;AAAA,aAEG;AACL,iBAAS;AAAA,UAAC;AAAA,UACR;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA;AAAA;AAIJ,cAAQ,KAAK,QAAQ,cAAc,aAAa,SAAU,OAAO,KAAK;AACpE,YAAI,OAAO;AACT,iBAAO,SAAS;AAAA;AAElB,eAAO,SAAS,MAAM;AAAA,UACpB,WAAW;AAAA;AAAA;AAAA;AAWjB,iCAA8B,aAAa,UAAU;AACnD,UAAI,CAAC,YAAY,OAAO,gBAAgB,YAAY;AAClD,mBAAW;AACX,sBAAc;AAAA;AAGhB,oBAAe,gBAAe,IAAI;AAClC,UAAI,UAAU,YAAY,MAAM;AAChC,UAAI,OAAO,UAAU,QAAQ;AAC7B,UAAI,SAAS;AAAA,QAAC;AAAA,QACZ;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA;AAEF,cAAQ,aAAa,QAAQ,aAAa,SAAU,KAAK,MAAM,QAAQ,QAAQ;AAC7E,YAAI,KAAK;AACP,iBAAO,SAAS;AAAA,mBACP,QAAQ;AACjB,iBAAO,SAAS;AAAA;AAElB,eAAO,qBAAqB,QAAQ;AAAA;AAAA;AAYxC,wBAAqB,aAAa,UAAU,MAAM,UAAU;AAC1D,UAAI,CAAC,YAAY,CAAC,QAAQ,OAAO,aAAa,YAAY;AACxD,mBAAW;AACX,mBAAW;AACX,eAAO;AAAA,iBACE,CAAC,YAAY,QAAQ,OAAO,SAAS,YAAY;AAC1D,mBAAW;AACX,eAAO;AAAA;AAOT,UAAI,QAAQ,SAAS,OAAO;AAC1B,eAAO;AAAA;AAGT,oBAAe,OAAO,SAAS,gBAAgB,YAAY,cAAe;AAE1E,UAAI,OAAO;AACX,UAAI,YAAY,MAAM,sCAAsC;AAC1D,eAAO;AAAA,iBACE,YAAY,MAAM,4BAA4B,YAAY,MAAM,sBAAsB;AAC/F,eAAO;AAAA,aACF;AACL,eAAO;AAAA;AAET,UAAI,SAAS;AAAA,QACX;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA;AAEF,UAAI,iBAAiB;AACrB,UAAI,UAAU;AACZ,eAAO,mBAAmB,EAAE,QAAQ,IAAI,UAAoB,UAAU,QAAQ,QAAQ;AAAA;AAGxF,cAAQ,aAAa,QAAQ,aAAa,SAAU,QAAQ,MAAM,QAAQ,QAAQ;AAChF,sBAAe,KAAK;AAClB,cAAI,KAAK;AACP,mBAAO,SAAS;AAAA;AAElB,cAAI,QAAQ,OAAO,MAAM;AACzB,cAAI,OAAO;AACT,mBAAO,SAAS,MAAM;AAAA,cACpB,SAAS,OAAO,QAAQ,MAAM,MAAM,MAAM,MAAM;AAAA;AAAA,iBAE7C;AACL,mBAAO,SAAS,IAAI,MAAM;AAAA;AAAA;AAG9B,eAAO,gBAAgB,gBAAgB,SAAU,OAAO;AACtD,eAAK,UAAU,SAAS;AAAA;AAAA;AAAA;AAW9B,4BAAyB,IAAI,UAAU;AACrC,WAAM,OAAO,SAAS,OAAO,GAAG,cAAe;AAE/C,UAAI,SAAS;AAAA,QACX;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA;AAGF,cAAQ,aAAa,QAAQ,IAAI,SAAU,KAAK,MAAM,QAAQ,QAAQ;AACpE,YAAI,KAAK;AACP,iBAAO,SAAS;AAAA,mBACP,QAAQ;AACjB,iBAAO,SAAS;AAAA;AAGlB,YAAI,SAAS;AACb,YAAI,QAAQ,OAAO,MAAM;AAEzB,YAAI,OAAO;AACT,iBAAO,OAAO,OAAO,MAAM;AAAA;AAG7B,YAAI,QAAQ;AACZ,eAAO,MAAM,MAAM,QAAQ,SAAU,MAAM;AACzC,cAAI,6CAA6C,KAAK,OAAO;AAC3D,qBAAS,KAAK;AAAA;AAAA;AAIlB,YAAI,OAAO;AACT,iBAAO,QAAQ;AAAA;AAGjB,YAAI,CAAC,SAAS,CAAC,OAAO;AACpB,iBAAO,SAAS,IAAI,MAAM;AAAA;AAG5B,eAAO,SAAS,MAAM;AAAA;AAAA;AAS1B,oBAAiB,SAAS;AACxB,aAAO,KAAK,SAAS,QAAQ,SAAU,GAAG;AACxC,gBAAQ,IAAI,GAAG,QAAQ;AAAA;AAAA;AAW3B,4BAAyB,aAAa,MAAM,UAAU;AACpD,UAAI,CAAC,YAAY,OAAO,SAAS,YAAY;AAC3C,mBAAW;AACX,eAAO;AAAA;AAGT,aAAO,QAAQ;AAEf,UAAI,SAAS;AAAA,QAAC;AAAA,QACZ;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA,MAAM;AAAA;AAGR,cAAQ,aAAa,QAAQ,aAAa,SAAU,KAAK,MAAM,QAAQ,QAAQ;AAC7E,YAAI,KAAK;AACP,iBAAO,SAAS;AAAA,mBACP,QAAQ;AACjB,iBAAO,SAAS;AAAA;AAElB,YAAI,QAAQ,OAAO,MAAM;AACzB,YAAI,OAAO;AACT,iBAAO,SAAS,MAAM;AAAA,YACpB,aAAa,MAAM;AAAA;AAAA,eAEhB;AACL,iBAAO,SAAS,IAAI,MAAM;AAAA;AAAA;AAAA;AAchC,0BAAuB,KAAK,aAAa,UAAU,SAAS,UAAU;AACpE,UAAI,CAAC,YAAY,OAAO,YAAY,YAAY;AAC9C,mBAAW;AACX,kBAAU;AAAA;AAGZ,UAAI,SAAS,CAAC,UAAU;AACxB,UAAI,iBAAiB;AAErB,UAAI,QAAQ,UAAU,QAAQ,mBAAmB;AAG/C,eAAO,mBAAmB,EAAE,QAAQ,QAAQ,QAAQ,UAAU,QAAQ,mBAAmB,UAAU,QAAQ,QAAQ;AAAA;AAIrH,aAAO,mBAAmB,EAAE,QAAQ,IAAI,UAAoB,UAAU,UAAU,QAAQ;AAExF,aAAO,KAAK;AACZ,aAAO,KAAK;AACZ,aAAO,KAAK;AACZ,aAAO,KAAK;AAEZ,UAAI,WAAW,CAAC,aAAa;AAE7B,UAAI,QAAQ,WAAW;AACrB,iBAAS,KAAK,QAAQ,UAAU,KAAK;AAErC,eAAO,KAAK;AACZ,eAAO,KAAK;AAAA;AAGd,cAAQ,WAAW,QAAQ,UAAU,SAAU,QAAQ,QAAQ;AAC7D,sBAAe,KAAK;AAClB,cAAI,KAAK;AACP,mBAAO,SAAS;AAAA;AAElB,iBAAO,SAAS,MAAM;AAAA,YACpB;AAAA;AAAA;AAGJ,eAAO,gBAAgB,gBAAgB,SAAU,OAAO;AACtD,eAAK,UAAU;AAAA;AAAA;AAAA;AAYrB,wBAAqB,cAAc,SAAS,UAAU;AACpD,UAAI,CAAC,YAAY,OAAO,YAAY,YAAY;AAC9C,mBAAW;AACX,kBAAU;AAAA;AAGZ,cAAQ,cAAc,QAAQ,eAAe;AAE7C,UAAI,WAAW;AACf,UAAI,iBAAiB;AACrB,UAAI,OAAO,CAAC,UAAU,OAAO;AAE7B,aAAO,mBAAmB,EAAE,QAAQ,IAAI,UAAU,QAAQ,aAAa,UAAU,QAAQ,MAAM;AAE/F,UAAI,OAAO,SAAS,eAAe;AACjC,mBAAW,CAAC;AACZ,aAAK,KAAK;AAAA;AAGZ,UAAI,QAAQ,mBAAmB;AAC7B,eAAO,mBAAmB,EAAE,QAAQ,IAAI,UAAU,QAAQ,mBAAmB,UAAU,SAAS,MAAM;AAAA,aACjG;AACL,aAAK,KAAK;AAAA;AAGZ,cAAQ,WAAW,MAAM,UAAU,SAAU,QAAQ,QAAQ;AAC3D,sBAAe,KAAK;AAClB,cAAI,YAAY;AAEhB,cAAI,OAAO,IAAI,QAAQ,QAAQ,iCAAiC,IAAI;AAClE,gBAAI,OAAO;AAAA;AAGb,cAAI,CAAC,KAAK;AACR,gBAAI,QAAQ,eAAe,QAAQ,YAAY;AAC/C,sBAAU,OAAO,MAAM;AACvB,sBAAU,KAAK;AACf,sBAAU,MAAM,eAAe,QAAQ,WAAW,SAAS;AAE3D,gBAAI,UAAU,KAAK;AAEjB,qBAAO,QAAQ,KAAK,CAAC,OAAO,OAAO,gBAAgB,mBAAmB,CAAC,UAAU,MAAM,SAAU,MAAK,KAAK;AACzG,0BAAU,MAAM;AAEhB,uBAAO,SAAS,MAAK;AAAA;AAAA;AAIzB,gBAAI,QAAQ,mBAAmB;AAC7B,wBAAU,MAAM,eAAe,QAAQ,qBAAqB,mBAAmB;AAAA,mBAC1E;AACL,wBAAU,MAAM,eAAe,QAAQ,eAAe,aAAa;AAAA;AAAA;AAIvE,iBAAO,SAAS,KAAK;AAAA;AAEvB,eAAO,gBAAgB,gBAAgB,SAAU,OAAO;AACtD,eAAK,UAAU;AAAA;AAAA;AAAA;AAYrB,8BAA2B,aAAa,YAAY,UAAU;AAC5D,UAAI;AACJ,UAAI,iBAAiB;AAErB,UAAI,CAAC,YAAY,OAAO,eAAe,YAAY;AACjD,mBAAW;AACX,qBAAa;AAAA;AAEf,oBAAe,gBAAe,IAAI;AAElC,UAAI,YAAY,MAAM,sCAAsC;AAC1D,iBAAS,CAAC,OAAO,SAAS,UAAU,WAAW,OAAO;AAAA,iBAC7C,YAAY,MAAM,4BAA4B,YAAY,MAAM,sBAAsB;AAC/F,iBAAS,CAAC,OAAO,UAAU,UAAU,OAAO;AAAA,aACvC;AACL,iBAAS,CAAC,QAAQ,SAAS,UAAU,OAAO;AAAA;AAE9C,UAAI,YAAY;AACd,eAAO,mBAAmB,EAAE,QAAQ,IAAI,UAAU,YAAY,UAAU,QAAQ,QAAQ;AAAA;AAG1F,cAAQ,aAAa,QAAQ,aAAa,SAAU,QAAQ,MAAM,QAAQ,QAAQ;AAChF,sBAAe,KAAK;AAClB,cAAI,OAAO,IAAI,WAAW,WAAW,aAAa;AAChD,mBAAO,SAAS;AAAA;AAElB,cAAI;AACJ,kBAAQ,OAAO;AAAA,iBACR;AACH,uBAAS,gBAAgB,KAAK,OAAO;AACrC;AAAA;AAEA,uBAAS,wBAAwB,KAAK;AACtC;AAAA;AAGJ,mBAAS,MAAM;AAAA;AAEjB,eAAO,gBAAgB,gBAAgB,SAAU,OAAO;AACtD,eAAK,UAAU,SAAS;AAAA;AAAA;AAAA;AAY9B,yBAAsB,cAAc,YAAY,UAAU;AACxD,UAAI,CAAC,YAAY,OAAO,eAAe,YAAY;AACjD,mBAAW;AACX,qBAAa;AAAA;AAGf,UAAI,WAAW;AACf,UAAI,iBAAiB;AACrB,UAAI,OAAO,CAAC,UAAU,SAAS,OAAO,cAAc,UAAU,YAAY;AAE1E,aAAO,mBAAmB,EAAE,QAAQ,IAAI,UAAU,YAAY,UAAU,QAAQ,MAAM;AAEtF,UAAI,OAAO,SAAS,eAAe;AACjC,mBAAW,CAAC;AACZ,aAAK,KAAK;AAAA;AAGZ,cAAQ,aAAa,MAAM,UAAU,SAAU,QAAQ,MAAM,QAAQ,QAAQ;AAC3E,sBAAe,KAAK;AAClB,cAAI,KAAK;AACP,mBAAO,SAAS;AAAA;AAElB,mBAAS,MAAO,oBAAoB,KAAK,WAAY,CAAE,oBAAoB,KAAK,WAAY,CAAE,qBAAqB,KAAK;AAAA;AAE1H,eAAO,gBAAgB,gBAAgB,SAAU,OAAO;AACtD,eAAK,UAAU;AAAA;AAAA;AAAA;AAYrB,gCAA6B,aAAa,IAAI,UAAU;AACtD,UAAI,CAAC,YAAY,OAAO,OAAO,YAAY;AACzC,mBAAW;AACX,aAAK;AAAA;AAEP,UAAI,CAAC,MAAM,QAAQ,cAAc;AAC/B,sBAAc,CAAC;AAAA;AAEjB,UAAI,CAAC,MAAM,QAAQ,OAAO,OAAO,QAAW;AAC1C,YAAI,OAAO,IAAI;AACb,eAAK,CAAC;AAAA;AAAA;AAIV,UAAI,QAAQ;AAEZ,UAAI,OAAO,QAAW;AAEpB,cAAM,KAAK,GAAG,KAAK;AAAA;AAGrB,YAAM,KAAK,YAAY,KAAK;AAE5B,UAAI,SAAS,CAAC;AAEd,UAAI,OAAO,QAAW;AAEpB,eAAO,KAAK;AACZ,eAAO,KAAK;AAAA;AAGd,aAAO,KAAK;AAEZ,cAAQ,aAAa,QAAQ,OAAO,SAAU,KAAK,MAAM,QAAQ,QAAQ;AACvE,YAAI,KAAK;AACP,iBAAO,SAAS;AAAA;AAGlB,iBAAS,MAAM,OAAO,OAAO,MAAM,QAAQ;AAAA;AAAA;AAK/C,kCAA+B,UAAU,UAAU;AAEjD,UAAI;AACF,mBAAY,aAAY,IAAI;AAE5B,YAAI,QAAQ,SAAS,KAAK;AAC1B,YAAI,aAAa;AAAA,UACf,QAAQ;AAAA;AAEV,YAAI,WAAW;AACf,YAAI;AAEJ,YAAI,IAAI;AAGR,YAAK,UAAS,SAAS,MAAM,sDAAsD,OAAO,SAAS,GAAG;AACpG,qBAAW,SAAS,OAAO;AAAA;AAG7B,YAAK,WAAU,SAAS,MAAM,sEAAsE,QAAQ,SAAS,GAAG;AACtH,oBAAU,QAAQ;AAClB,gBAAM,SAAS,SAAS;AACxB,cAAI,KAAK;AACP,iBAAK,IAAI,GAAG,IAAI,IAAI,QAAQ,KAAK;AAC/B,mBAAK,IAAI,GAAG,GAAG;AACf,kBAAI,GAAG,MAAM,uCAAuC,OAAO,IAAI;AAC7D;AAAA;AAEF,yBAAW,MAAM,IAAI,GAAG,GAAG;AAAA;AAAA;AAK/B,gBAAM,QAAQ,MAAM;AACpB,qBAAW,UAAW,OAAO,IAAI,MAAO;AAGxC,gBAAM,QAAQ,MAAM;AACpB,qBAAW,QAAS,OAAO,IAAI,MAAO;AAGtC,gBAAM,QAAQ,MAAM;AACpB,qBAAW,WAAY,OAAO,IAAI,MAAO;AAGzC,gBAAM,SAAS,SAAS;AACxB,qBAAW,eAAe,MAAO,IAAI,SAAS,IAAI,IAAI,KAAK,SAAU,GAAG,GAAG;AACzE,gBAAI,IAAI,EAAE,GAAG;AACb,gBAAI,IAAI,EAAE,GAAG;AACb,mBAAO,IAAI,IAAI,KAAK,IAAI,IAAI,IAAI;AAAA,aAC/B,KAAK,SAAU,GAAG,GAAG;AACtB,mBAAO,EAAE,GAAG,SAAS,EAAE,GAAG;AAAA,aACzB,IAAI,SAAU,GAAG;AAClB,mBAAO,EAAE;AAAA,eACN,IAAI,GAAG,KAAM;AAGlB,gBAAM,SAAS,SAAS;AACxB,qBAAW,mBAAmB,MAAO,IAAI,SAAS,IAAI,IAAI,KAAK,SAAU,GAAG,GAAG;AAC7E,gBAAI,IAAI,EAAE,GAAG;AACb,gBAAI,IAAI,EAAE,GAAG;AACb,mBAAO,IAAI,IAAI,KAAK,IAAI,IAAI,IAAI;AAAA,aAC/B,KAAK,SAAU,GAAG,GAAG;AACtB,mBAAO,EAAE,GAAG,SAAS,EAAE,GAAG;AAAA,aACzB,IAAI,SAAU,GAAG;AAClB,mBAAO,EAAE;AAAA,eACN,IAAI,GAAG,KAAM;AAGlB,gBAAM,SAAS,SAAS;AACxB,qBAAW,aAAa,MAAO,IAAI,SAAS,IAAI,IAAI,KAAK,SAAU,GAAG,GAAG;AACvE,gBAAI,IAAI,EAAE,GAAG;AACb,gBAAI,IAAI,EAAE,GAAG;AACb,mBAAO,IAAI,IAAI,KAAK,IAAI,IAAI,IAAI;AAAA,aAC/B,KAAK,SAAU,GAAG,GAAG;AACtB,mBAAO,EAAE,GAAG,SAAS,EAAE,GAAG;AAAA,aACzB,IAAI,SAAU,GAAG;AAClB,mBAAO,EAAE;AAAA,eACN,IAAI,GAAG,KAAM;AAGlB,gBAAM,SAAS,SAAS;AACxB,qBAAW,eAAe,MAAO,IAAI,SAAS,IAAI,IAAI,KAAK,SAAU,GAAG,GAAG;AACzE,gBAAI,IAAI,EAAE,GAAG;AACb,gBAAI,IAAI,EAAE,GAAG;AACb,mBAAO,IAAI,IAAI,KAAK,IAAI,IAAI,IAAI;AAAA,aAC/B,KAAK,SAAU,GAAG,GAAG;AACtB,mBAAO,EAAE,GAAG,SAAS,EAAE,GAAG;AAAA,aACzB,IAAI,SAAU,GAAG;AAClB,mBAAO,EAAE;AAAA,eACN,IAAI,GAAG,KAAM;AAGlB,gBAAM,SAAS,SAAS;AACxB,qBAAW,KAAK,MAAO,IAAI,SAAS,IAAI,IAAI,KAAK,SAAU,GAAG,GAAG;AAC/D,gBAAI,IAAI,EAAE,GAAG;AACb,gBAAI,IAAI,EAAE,GAAG;AACb,mBAAO,IAAI,IAAI,KAAK,IAAI,IAAI,IAAI;AAAA,aAC/B,KAAK,SAAU,GAAG,GAAG;AACtB,mBAAO,EAAE,GAAG,SAAS,EAAE,GAAG;AAAA,aACzB,IAAI,SAAU,GAAG;AAClB,mBAAO,EAAE;AAAA,eACN,IAAI,GAAG,KAAM;AAAA;AAGpB,YAAK,UAAS,SAAS,MAAM,oEAAoE,OAAO,SAAS,GAAG;AAClH,mBAAS,OAAO;AAChB,gBAAM,SAAS,QAAQ;AACvB,eAAK,IAAI,GAAG,IAAI,IAAI,QAAQ,KAAK;AAC/B,iBAAK,IAAI,GAAG,GAAG;AACf,gBAAI,GAAG,MAAM,qCAAqC;AAChD;AAAA;AAEF,uBAAW,OAAO,MAAM,IAAI,GAAG,GAAG;AAAA;AAIpC,gBAAM,OAAO,MAAM;AACnB,qBAAW,OAAO,UAAW,OAAO,IAAI,MAAO;AAG/C,gBAAM,OAAO,MAAM;AACnB,qBAAW,OAAO,QAAS,OAAO,IAAI,MAAO;AAG7C,gBAAM,OAAO,MAAM;AACnB,qBAAW,OAAO,WAAY,OAAO,IAAI,MAAO;AAGhD,gBAAM,SAAS,QAAQ;AACvB,qBAAW,OAAO,eAAe,MAAO,IAAI,SAAS,IAAI,IAAI,KAAK,SAAU,GAAG,GAAG;AAChF,gBAAI,IAAI,EAAE,GAAG;AACb,gBAAI,IAAI,EAAE,GAAG;AACb,mBAAO,IAAI,IAAI,KAAK,IAAI,IAAI,IAAI;AAAA,aAC/B,KAAK,SAAU,GAAG,GAAG;AACtB,mBAAO,EAAE,GAAG,SAAS,EAAE,GAAG;AAAA,aACzB,IAAI,SAAU,GAAG;AAClB,mBAAO,EAAE;AAAA,eACN,IAAI,GAAG,KAAM;AAGlB,gBAAM,SAAS,QAAQ;AACvB,qBAAW,OAAO,mBAAmB,MAAO,IAAI,SAAS,IAAI,IAAI,KAAK,SAAU,GAAG,GAAG;AACpF,gBAAI,IAAI,EAAE,GAAG;AACb,gBACE,IAAI,EAAE,GAAG;AACX,mBAAO,IAAI,IAAI,KAAK,IAAI,IAAI,IAAI;AAAA,aAC/B,KAAK,SAAU,GAAG,GAAG;AACtB,mBAAO,EAAE,GAAG,SAAS,EAAE,GAAG;AAAA,aACzB,IAAI,SAAU,GAAG;AAClB,mBAAO,EAAE;AAAA,eACN,IAAI,GAAG,KAAM;AAGlB,gBAAM,SAAS,QAAQ;AACvB,qBAAW,OAAO,aAAa,MAAO,IAAI,SAAS,IAAI,IAAI,KAAK,SAAU,GAAG,GAAG;AAC9E,gBAAI,IAAI,EAAE,GAAG;AACb,gBACE,IAAI,EAAE,GAAG;AACX,mBAAO,IAAI,IAAI,KAAK,IAAI,IAAI,IAAI;AAAA,aAC/B,KAAK,SAAU,GAAG,GAAG;AACtB,mBAAO,EAAE,GAAG,SAAS,EAAE,GAAG;AAAA,aACzB,IAAI,SAAU,GAAG;AAClB,mBAAO,EAAE;AAAA,eACN,IAAI,GAAG,KAAM;AAGlB,gBAAM,SAAS,QAAQ;AACvB,qBAAW,OAAO,KAAK,MAAO,IAAI,SAAS,IAAI,IAAI,KAAK,SAAU,GAAG,GAAG;AACtE,gBAAI,IAAI,EAAE,GAAG;AACb,gBACE,IAAI,EAAE,GAAG;AACX,mBAAO,IAAI,IAAI,KAAK,IAAI,IAAI,IAAI;AAAA,aAC/B,KAAK,SAAU,GAAG,GAAG;AACtB,mBAAO,EAAE,GAAG,SAAS,EAAE,GAAG;AAAA,aACzB,IAAI,SAAU,GAAG;AAClB,mBAAO,EAAE;AAAA,eACN,IAAI,GAAG,KAAM;AAAA;AAIpB,YAAK,OAAM,SAAS,MAAM,6DAA6D,IAAI,SAAS,GAAG;AACrG,gBAAM,IAAI,GAAG,SAAS;AACtB,qBAAW,MAAM;AAGjB,gBAAM,aAAa,mCAAmC;AACtD,qBAAW,IAAI,MAAM,OAAO;AAG5B,gBAAM,aAAa,0CAA0C;AAC7D,qBAAW,IAAI,KAAK,OAAO;AAG3B,gBAAM,aAAa,qCAAqC;AACxD,qBAAW,IAAI,QAAQ,OAAO;AAAA;AAIhC,YAAK,OAAM,SAAS,MAAM,wCAAwC,IAAI,SAAS,GAAG;AAChF,mBAAS,QAAQ,KAAK,MAAO,OAAO,IAAI,MAAO;AAAA;AAGjD,YAAK,OAAM,SAAS,MAAM,uCAAuC,IAAI,SAAS,GAAG;AAC/E,mBAAS,MAAM,KAAK,MAAO,OAAO,IAAI,MAAO;AAAA;AAG/C,YAAI,SAAS,SAAS,SAAS,KAAK;AAClC,qBAAW,WAAW;AAAA;AAKxB,YAAK,OAAM,SAAS,MAAM,4CAA4C,IAAI,SAAS,GAAG;AACpF,qBAAW,qBAAsB,OAAO,IAAI,MAAO;AAAA;AAIrD,YAAK,OAAM,SAAS,MAAM,sCAAsC,IAAI,SAAS,GAAG;AAC9E,qBAAW,gBAAkB,QAAO,IAAI,MAAO,IAAI,QAAQ,SAAS;AAAA;AAItE,YAAK,OAAM,SAAS,MAAM,6CAA6C,IAAI,SAAS,GAAG;AACrF,qBAAW,qBAAsB,OAAO,IAAI,MAAO;AAAA;AAGrD,iBAAS,MAAM;AAAA,eACR,KAAP;AACA,iBAAS;AAAA;AAAA;AAIb,sBAAmB,KAAK,QAAQ;AAC9B,UAAI,UAAU;AACd,UAAI,QAAQ,QAAQ,WAAY;AAC9B,YAAI,MAAO,GAAI,MAAM,KAAK,WAAW;AACrC,YAAI,SAAS,IAAI,OAAO;AACxB,YAAI,QAAQ,OAAO;AACnB,YAAI,QAAQ,OAAO;AACnB,gBAAQ,KAAK;AAAA;AAEf,aAAO,QAAQ,SAAS,UAAU;AAAA;AAGpC,0BAAuB,OAAO,UAAU;AACtC,UAAI,cAAc,IAAI,OAAO,OAAO;AACpC,UAAI,cAAc,SAAS,MAAM,gBAAgB;AACjD,UAAI,aAAa;AACjB,UAAI,gBAAgB;AACpB,eAAS,IAAI,GAAG,IAAI,YAAY,QAAQ,KAAK;AAC3C,yBAAiB,IAAI,OAAO;AAC5B,yBAAiB,YAAY,GAAG,MAAM;AACtC,mBAAW,KAAK,eAAe;AAAA;AAEjC,aAAO;AAAA;AAGT,gCAA6B,SAAS;AACpC,gBAAU,WAAW;AAErB,UAAI,UAAU;AAAA,QACZ,GAAG,QAAQ,WAAW,QAAQ;AAAA,QAC9B,IAAI,QAAQ,SAAS,QAAQ;AAAA,QAC7B,GAAG,QAAQ,YAAY,QAAQ;AAAA,QAC/B,GAAG,QAAQ,gBAAgB,QAAQ;AAAA,QACnC,IAAI,QAAQ,oBAAoB,QAAQ;AAAA,QACxC,IAAI,QAAQ,cAAc,QAAQ,MAAM;AAAA,QACxC,IAAI,QAAQ,MAAM,QAAQ,MAAM;AAAA,QAChC,cAAc,QAAQ;AAAA;AAGxB,UAAI,aAAa,OAAO,KAAK,SAAS,IAAI,SAAU,KAAK;AACvD,YAAI,QAAQ,MAAM;AAChB,cAAI,OAAO,QAAQ,SAAS,YAAY,QAAQ,KAAK,UAAU,GAAG;AAChE,gBAAI,SAAS;AACb,oBAAQ,KAAK,IAAI,SAAU,GAAG;AAC5B,wBAAU,MAAM,MAAM,MAAM,EAAE,QAAQ,mBAAmB,KAAK;AAAA;AAEhE,mBAAO;AAAA,iBACF;AACL,mBAAO,MAAM,MAAM,MAAM,QAAQ,KAAK,QAAQ,mBAAmB,KAAK;AAAA;AAAA;AAAA;AAK5E,aAAO,WAAW,KAAK;AAAA;AAGzB,4BAAyB,QAAQ,OAAO,KAAK;AAC3C,UAAI,OAAO,SAAS,SAAS;AAC3B,iBAAS,OAAO,SAAS;AAAA;AAG3B,UAAI,SAAS;AAEb,UAAI,CAAC,QAAQ;AACX,eAAO;AAAA;AAGT,UAAI,SAAS,OAAO,QAAQ;AAE5B,aAAO,WAAW,IAAI;AACpB,iBAAS,OAAO,UAAU;AAE1B,YAAI,YAAY,OAAO,QAAQ;AAE/B,YAAI,cAAc,IAAI;AACpB;AAAA;AAGF,qBAAa,IAAI;AAEjB,eAAO,KAAK,OAAO,UAAU,GAAG;AAChC,iBAAS,OAAO,QAAQ,OAAO;AAAA;AAGjC,aAAO;AAAA;AAcT,YAAO,QAAQ,cAAc;AAAA,MAC3B,kBAAkB,UAAU;AAAA,MAC5B,eAAe,UAAU;AAAA,MACzB,eAAe,UAAU;AAAA,MACzB,WAAW,UAAU;AAAA,MACrB,mBAAmB,UAAU;AAAA,MAC7B,qBAAqB,UAAU;AAAA,MAC/B,cAAc,UAAU;AAAA,MACxB,gBAAgB,UAAU;AAAA,MAC1B,YAAY,UAAU;AAAA,MACtB,gBAAgB,UAAU;AAAA,MAC1B,cAAc,UAAU;AAAA,MACxB,YAAY,UAAU;AAAA,MACtB,oBAAoB,UAAU;AAAA,MAC9B,kBAAkB,UAAU;AAAA,MAC5B,aAAa,UAAU;AAAA;AAAA;AAAA;;;AChzCzB;AAAA;AAAA;AAAA;AAAA;AAAA;;;ACAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;ACQA,oBAAmB;AARnB;AAWA,IAAM,SAAS,sBAAO,SAAS;AAC/B,IAAM,YAAY,OAAM,MAAM,IAAI;AAQ3B,IAAM,WAAW,CAAC,MAAM,WAAW,OAAO,QAAQ,KACtD,OACC,CAAC,GAAG,CAAC,GAAG,OAAQ,GAAE,eAAe,OAAO,UAAU,IAAI,QAAQ,GAC9D;AAUG,IAAM,UAAU,CAAC,KAA2B,OAAO;AAAlC,eAAE,WAAS,OAAX,IAAkB,iBAAlB,IAAkB,CAAhB;AACxB,aAAW,KAAK,QAAQ;AACtB,QAAI,OAAO,eAAe,MAAM,OAAO,IAAI,WAAW,GAAG;AAGvD,UAAI,SAAS;AAAK,gBAAQ,IAAI,KAAK,OAAO;AAC1C,aAAO,KAAK,OAAO;AAAA;AAAA;AAIvB,SAAO,EAAE,QAAQ,YAAY;AAAA;AASxB,IAAM,aAAa,CAAC,KAA2B,OAAI;AAA/B,eAAE,WAAS,OAAX,IAAkB,iBAAlB,IAAkB,CAAhB;AAAiC,0CACzD,OADyD;AAAA,IAE5D,QAAQ,OAAO,OAAO,IAAI,QAAQ;AAAA;AAAA;AAQ7B,IAAM,mBAAmB,CAAC,OAA6B;AAA7B,eAAE,WAAS,OAAX,IAAkB,iBAAlB,IAAkB,CAAhB;AAEjC,SAAO,OAAO,OACZ,IACA,QAAQ,EAAE,WACV,WAAW,iBAAE,UAAW;AAAA;;;ACnE5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA,kBAA8B;;;ACD9B,iBAA4B;AAC5B,qBAAoB;AACpB,kBAAiB;AAEV,kBAAkB,OAAM;AAC7B,QAAM,YAAY,oBAAK,QAAQ;AAC/B,MAAI,CAAC,WAAW;AACd,WAAO;AAAA;AAGT,SAAO,MAAK,MAAM,GAAG,CAAC,UAAU;AAAA;AAGnB,sBAAS,MAAM;AAC5B,QAAM,aAAa,8BAAc,KAAK;AAEtC,QAAM,aAAa,uBAAQ,KAAK;AAChC,QAAM,YAAY,oBAAK,QAAQ;AAC/B,MAAI,WAAW;AACb,WAAO,eAAe;AAAA;AAGxB,SAAO,SAAS,gBAAgB;AAAA;;;ADnBlC,gBAAe;AACf,oBAAmB;AACnB,mBAAiB;AALjB;AAcO,IAAM,SAAS,CAAC,aAAa,eAAe;AACjD,MAAI,OAAO,YAAY,aAAa;AAClC,WAAO,eAAe;AAAA,SAEnB;AACH,QAAI,CAAE,OAAO;AAAa,YAAM;AAEhC,WAAO,aAAO;AAAA;AAAA;AAIX,IAAM,WAAW,kBAAG,SAAS;AAC7B,IAAM,YAAY,OAAO,QAAQ,OAAO;AAC7C,SAAO,CAAC,MAAM,SACZ,KACA,QAAQ,IAAI,MAAM,IAAI,CAAC,EAAC,UAAU,WAAW,aAC3C,SAAS,UAAU;AAAA;AAIlB,IAAM,YAAY,UAAU,SAAS;AAC1C,MAAI;AACF,UAAM,2BAAO,qBAAK,QAAQ,KAAK;AAAA,WACxB,GAAP;AAAA,YACF;AACE,WAAO,kBAAG,SAAS,UAAU,MAAM,mBAAI;AAAA;AAAA;AAIpC,IAAM,aAAa,OAAO,QAAQ,OAAO;AAC9C,SAAO,CAAC,MAAM,SACV,KACA,QAAQ,IAAI,MAAM,IAClB,CAAC,OAA6C;AAA7C,iBAAC,YAAU,MAAM,WAAU,WAA3B,IAAsC,iBAAtC,IAAsC,CAArC,YAAU,QAAM;AAA+B,qBAC7C,UACA,MACA,iBAAE,YAAa;AAAA,MAEhB,MAAM,OAAK,CAAC;AAAA;AAId,IAAM,YAAY,CAAC,aAAa,gBACrC,YAAY,MACR,+BAAc,WAAW,OACzB,OAAO;AAUN,IAAM,UAAU,OAAO,cAAc,SAAS,gBAAgB;AACnE,SAAO,aAAa,UAChB,MAAM,YAAY,QAAQ,cAAc,UACxC,qBAAK,KAAK,qBAAK,QAAQ,SAAS;AAAA;;;AEhEtC,mBAAiB;AACjB,iBAAgB;AAThB;AAAA;AAYO,IAAM,aAAa,OAAO,KAU7B,OAAO;AAVsB,eAC/B;AAAA,iBAAa;AAAA,IACb,OAAO;AAAA,IACP,SAAS,QAAQ,IAAI,cAAc;AAAA,IACnC,SAAS,QAAQ,IAAI;AAAA,IAGrB,aAAa,KAAK;AAAA,MAPa,IAS5B,iBAT4B,IAS5B;AAAA,IARH;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IAGA;AAAA;AAKA,MAAI,CAAC;AAAQ,YAAQ,IAAI,eAAe,qBAAK,QAAQ,AAAQ,UAAU,iBAAgB;AAIvF,MAAI,aAAa,WAAW,KAAK,YAAY,OAAO;AACpD,QAAM,QAAQ;AAAA,IACZ,aAAa,QAAQ,IAAI,eAAe,IAAS;AAAA,IACjD,WAAW,QAAQ,IAAI,eAAe,IAAS;AAAA,IAC/C,KAAK,QAAQ,IAAI,eAAe,IAAS;AAAA,IACzC,YAAY,QAAQ,IAAI,eAAe,IAAS;AAAA;AAGlD,MAAI;AACF,IAAC;AAAA,MACC;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,QACE,MAAM,AAAQ,UAAU;AAAA,MAC1B,EAAE,UAAU,MAAM;AAAA,MAClB,EAAE,UAAU,MAAM;AAAA,MAClB,EAAE,UAAU,MAAM;AAAA,MAClB,EAAE,UAAU,MAAM;AAAA;AAGpB,QAAI,CAAC,eAAe,CAAC,cAAc,CAAC,OAAO,CAAC;AAAW,YAAM;AAG7D,UAAM,YAAY,MAAM,mBAAI,YAAY,iBAAiB;AAEzD,QAAI,CAAC;AAAW,YAAM;AAEtB,WAAO;AAAA,MACL;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA;AAAA,WAEK,GAAP;AAAY,SAAK,KAAK,EAAE;AAAA;AAEzB,MAAI;AACH,IAAC;AAAA,MACC;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,QACE,MAAM,mBAAI,YAAY,kBAAkB;AAAA,MAC1C;AAAA,MACA;AAAA,MACA;AAAA;AAGF,QAAI,uBAAuB,OAAO;AAChC,cAAQ,KAAK,+BAA+B;AAE5C,aAAO;AAAA,eAGA,CAAC,eAAe,CAAC,cAAc,CAAC,OAAO,CAAC;AAAW,YAAM;AAElE,WAAO,AAAQ,WAAW;AAAA,MACxB,EAAE,UAAU,MAAM,aAAa,MAAM;AAAA,MACrC,EAAE,UAAU,MAAM,WAAW,MAAM;AAAA,MACnC,EAAE,UAAU,MAAM,KAAK,MAAM;AAAA,MAC7B,EAAE,UAAU,MAAM,YAAY,MAAM;AAAA,OACnC,KAAK,MAAO,GAAE,aAAa,WAAW,KAAK;AAAA,WACvC,GAAP;AACA,YAAQ,MAAM,8DAA8D,KAAK,OAAO,EAAE,UAAU;AAAA;AAAA;;;AC3FxG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;ACaA,iBAAe;AACf,mBAAiB;AAMV,IAAM,QAAQ,IAAI;AAIlB,IAAM,iBAAiB,OAAM,eAAc;AAChD,MAAI;AACJ,MAAI;AACF,SAAK,MAAM,mBAAG,SAAS,KAAK,YAAW;AACvC,QAAI,CAAC;AAAI;AAET,UAAM,UAAW,OAAM,GAAG,QAAQ;AAClC,UAAM,UAAU,MAAM,IAAI,aAAa;AACvC,OAAG;AACH,WAAQ,EAAC,WAAY,UAAU,YAAa;AAAA,WACrC,GAAP;AACA,YAAQ,KAAK,+CAA+C,EAAC,YAAY;AACzE,QAAI;AACJ,UAAM,OAAO;AAEb,WAAO;AAAA;AAAA;AAKJ,IAAM,WAAW,OAAO,YAAY,YAAY,WAAW;AAChE,MAAI;AACF,QAAI,YAAY;AACd,YAAM,UAAU,GAAG,UAAU,qBAAK,SAAS;AAC3C,YAAM,IAAI,YAAY,EAAE,IAAI,YAAY;AAExC,YAAM,mBAAG,SAAS,MAAM,QAAQ,EAAE,WAAW;AAC7C,YAAM,mBAAG,SAAS,SAAS,YAAY;AAAA;AAAA,WAGlC,GAAP;AACA,UAAM,OAAO;AACb,YAAQ,KAAK,uCAAuC,EAAC,YAAY;AAAA;AAAA;AAO9D,IAAM,cAAc,aAAW;AACpC,QAAM,MAAM;AAEZ,MAAI,CAAC,QAAQ;AAAQ,WAAO,QAAQ,KAAK,GAAG,qBAAqB;AAEjE,UAAQ,QAAQ,OAAO,OAAoD;AAApD,iBAAE,UAAQ,YAAY,OAAO,YAA7B,IAAyC,iBAAzC,IAAyC,CAAvC,UAAQ,cAAY,SAAO;AAClD,QAAI;AACF,UACE,CAAE,uBAAsB,WACpB,EAAC,SAAS,CAAC,MAAM,WAAW,SAC5B,EAAC,UAAU,CAAC,OAAO,WAAW;AAElC,eAAO,QAAQ,KACf,GAAG,sBACH,EAAC,QAAQ,YAAY,OAAO,SAAS;AAGvC,YAAM,aAAa,MAAM,mBAAG,SAAS,QAAQ,OAAO,EAAE,UAAU,QAAQ,eAAe,WAAW;AAElG,iBAAW,QAAQ,YAAU;AAI3B,YAAI,CAAC,OAAO,KAAK,SAAS,QAAQ;AAAS,sBAAY;AAAA,YACnD;AAAA,cACE;AAAA,cACA;AAAA,cACA;AAAA,cACA,OAAO,GAAG,SAAS,OAAO;AAAA,eACvB;AAAA;AAAA,aAGJ;AAEH,cAAI,WAAW,KAAK,OAAO,OAAO;AAEhC,kBAAM,aAAa,GAAG,SAAS,OAAO;AACtC,kBAAM,UAAU,GAAG,UAAU,OAAO;AACpC,kBAAM,IAAI,YAAY,EAAE,IAAI,MAAM;AAAA;AAAA;AAAA;AAAA,aAIjC,GAAP;AACA,cAAQ,MAAM,yBAAyB;AAAA;AAAA;AAAA;AAM7C,IAAM,OAAO;AAEN,iBAAkB,QAAQ;AAC/B,UAAQ,UAAU;AAClB,UAAQ,YAAY;AAEpB,SAAO;AAAA,IACL;AAAA,IACA,MAAO,OAAO;AAcZ,YAAM,EAAE,YAAY,QAAQ,WAAW;AACvC,UAAI,CAAC;AAAS;AAMd,kBAAY;AAEZ,YAAM,UACJ,EAAC,QAAQ,eACT,MAAO;AAGT,YAAM,QAAQ,YAAY;AACxB,YAAI,QAAQ;AAAW;AACvB,gBAAQ,YAAY;AAIpB,YAAI,MAAM;AAAM,qBAAW,CAAC,YAAY,EAAE,IAAI,cAAc,OAAO;AACjE,gBAAI;AACF,oBAAM,aAAa,MAAM,eAAe;AACxC,kBAAI;AAAY,sBAAM,SAAS,YAAY,YAAY,qBAAK,QAAQ;AAAA,qBAC7D,GAAP;AACA,sBAAQ,KAAK,yBAAyB;AAAA;AAAA;AAI1C;AAAA;AAIF,YAAM,MAAM,YAAU;AACpB,gBAAQ,YAAY;AACpB;AAAA;AAAA;AAAA;AAAA;;;AP/JR,IAAO,gBAAQ,EAAE,4BAAU,0BAAS;",
  "names": []
}
