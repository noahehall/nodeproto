{
  "bugs": "https://github.com/noahehall/nodeproto/issues",
  "description": "@nodeproto/membrane - the virtualization layer for @nodeproto product framework that separates the interior apps, libraries and tools from the outside environment",
  "homepage": "https://github.com/noahehall/nodeproto",
  "license": "SEE LICENSE IN LICENSE.md",
  "main": "index.js",
  "name": "@nodeproto/membrane",
  "packageManager": "pnpm@6.15.1",
  "private": true,
  "repository": "git://github.com/noahehall/nodeproto.git",
  "type": "module",
  "version": "0.0.0",
  "author": {
    "email": "noahedwardhall+souls@gmail.com",
    "name": "theDRAGON",
    "url": "https://github.com/noahehall"
  },
  "config": {
    "DIRS_TO_TRANSPILE": "./src",
    "FLOW_LOADER": "./node_modules/@nodeproto/configproto/src/node/loaders/flow.mjs",
    "NODE_ENV": "production",
    "NODE_OPTIONS": "--experimental-loader=\"./node_modules/@nodeproto/configproto/src/node/loaders/flow.mjs\" --experimental-specifier-resolution=node --experimental-json-modules --experimental-top-level-await --experimental-vm-modules --experimental-import-meta-resolve node --enable-source-maps --heapsnapshot-near-heap-limit=3 --use-largepages=on --pending-deprecation --trace-sigint --trace-warnings --trace-exit --report-uncaught-exception --report-on-fatalerror --abort-on-uncaught-exception",
    "PATH_DIST": "./dist",
    "PATH_SRC": "./src"
  },
  "dependencies": {
    "ultra-runner": "3.10.5"
  },
  "devDependencies": {
    "@changesets/cli": "2.17.0",
    "@nodeproto/configproto": "workspace:0.0.0",
    "@nodeproto/jsync": "workspace:0.0.0",
    "@octokit/core": "3.5.1",
    "eslint": "7.32.0",
    "flow-bin": "0.161.0",
    "flow-remove-types": "2.161.0",
    "flow-typed": "3.3.1",
    "uvu": "0.5.1"
  },
  "engines": {
    "node": "^14.17.0 || >=16.0.0"
  },
  "jsync": {
    "root": false
  },
  "keywords": [
    "@nirv",
    "@nodeproto",
    "api",
    "bodyguard",
    "docker",
    "esbuild",
    "fullstack",
    "grafana",
    "haproxy",
    "inception",
    "jsync",
    "koa",
    "micro service",
    "microservice",
    "nirv",
    "nodeproto",
    "openapi",
    "pnpm",
    "prometheus",
    "prototype",
    "react",
    "ssl",
    "starter",
    "swagger",
    "webpack5"
  ],
  "os": [
    "darwin",
    "linux"
  ],
  "scripts": {
    "proto": "pnpm exec ultra -r",
    "proto:slice": "NODE_OPTIONS=\"$npm_package_config_NODE_OPTIONS\" pnpm exec ultra -r --filter",
    "repo:about": "npm run-script && echo 'available via `bin/FILENAME`:\n'; ls bin/*.sh || exit 0",
    "repo:config:list": "pnpm config list --json",
    "repo:cp:browserslist": "rm -f .browserslistrc && cp ./node_modules/@nodeproto/configproto/src/browserslist/.browserslistrc .",
    "repo:cp:cjs": "rm -f ./dist/package.json && mkdir -p dist && cp ./node_modules/@nodeproto/configproto/src/node/cjs.json ./dist/package.json",
    "repo:cp:configproto": "pnpm repo:cp:flow; pnpm repo:cp:cjs; pnpm repo:cp:browserslist",
    "repo:cp:flow": "rm -f .flowconfig && cp ./node_modules/@nodeproto/configproto/src/flowtype/.flowconfig .",
    "repo:deps": "pnpm exec ultra --info",
    "repo:eslint": "eslint './**/*'",
    "repo:eslint:fix": "pnpm repo:eslint -- --fix",
    "repo:exec:list": "pnpm exec ultra --list",
    "repo:flow": "pnpm exec flow",
    "repo:flow:status": "pnpm exec flow status",
    "repo:flowtyped:install": "pnpm exec flow-typed install",
    "repo:monitor": "pnpm exec ultra --monitor",
    "repo:nuke": "pnpm repo:rm:dist; pnpm repo:rm:nodemodules",
    "repo:rm:dist": "rm -rf dist/*",
    "repo:rm:nodemodules": "rm -rf node_modules",
    "repo:test": "NODE_OPTIONS=\"$npm_package_config_NODE_OPTIONS\" uvu ./src \"test.(m|c)?js\"",
    "repo:test:file": "node --experimental-specifier-resolution=node --experimental-import-meta-resolve $*",
    "repo:test:help": "uvu --help",
    "repo:testing": "pnpm repo:test; chokidar \"src/**/*(?:.test)?.(m|c)?js\" -c \"pnpm repo:test\"",
    "repo:upgrade": "pnpm upgrade -L",
    "test": "echo \"Error: no test specified\" && exit 1"
  },
  "ultra": {
    "concurrent": [
      "eslint",
      "test",
      "cp:flow"
    ]
  }
}
