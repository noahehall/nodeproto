{
  "browserslistEnv": "client",
  "extends": "./base.babelrc.json",
  "overrides": [
    // will always use these options
    // because we dont specify a condition
    {
      "presets": [
        [
          // https://babeljs.io/docs/en/babel-preset-env
          "@babel/preset-env",
          {
            "bugfixes": true,
            "debug": false,
            "forceAllTransforms": false, // set to true if only support es5/running through uglifyjs
            "ignoreBrowserslistConfig": false,
            "modules": "auto",
            "shippedProposals": true,
            "spec": false,
            "useBuiltIns": "entry", // include corejs imports for each file based on the env transpiling to and the files src code
            // entry: you have to specify the imports of core-js in src
            // usage: automatically imports core-js modules in src
            "corejs": {
              "version": "3.21.0",
              "proposals": true
            }
          }
        ],
        [
          "@babel/preset-react",
          {
            // applies to both classic & automatic runtimes
            "throwIfNamespace": false,

            // use automatic by default-----------------------------------------
            "development": true,
            "importSource": "@emotion/react", // https://emotion.sh/docs/css-prop##babel-preset
            "runtime": "automatic" // automatically import React shit at the top of files

            // uncomment for classic -------------------------------------------
            // "pragma": "React.default.createElement",
            // "pragmaFrag": "React.default.Fragment",
            // "runtime": "classic", // enables other commented options
            // "useBuiltIns": false,
            // "useSpread": true
          }
        ]
      ],
      "plugins": [
        [
          "@emotion",
          {
            "autoLabel": "dev-only",
            "cssPropOptimization": true,
            "labelFormat": "[local]",
            "sourceMap": true
          }
        ],
        "@babel/plugin-transform-react-constant-elements"
        // "@babel/plugin-transform-react-inline-elements" incompatible with @emotion
      ]
    }
  ]
}
