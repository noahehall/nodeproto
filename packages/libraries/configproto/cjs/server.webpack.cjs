"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault").default;

exports.__esModule = true;
exports.default = webpackServer;

var _koa = _interopRequireDefault(require("koa"));

var _webpackDevMiddleware = _interopRequireDefault(require("webpack-dev-middleware-2"));

var _webpack = _interopRequireDefault(require("webpack"));

var _webpackHotMiddleware = _interopRequireDefault(require("webpack-hot-middleware-2"));

const app = new _koa.default();

const r = (t, msg = 'is required') => {
  throw new Error(`${t}: ${msg}`);
};

function webpackServer(useConfig = r('useConfig: Object'), pack = {}) {
  const CLIENT_PORT = pack.CLIENT_PORT || process.env.CLIENT_PORT || 8080;
  const APP_NAME = pack.APP_NAME || process.env.APP_NAME || '@nodeproto/configproto.webpack.server';
  const compiler = (0, _webpack.default)(useConfig);
  app.use((0, _webpackDevMiddleware.default)(compiler, {
    publicPath: useConfig.publicPath,
    stats: 'errors-warnings',
    useBff: 'useKoa2',
    writeToDisk: pack.writeToDisk
  }));
  app.use((0, _webpackHotMiddleware.default)(compiler, {
    useBff: 'useKoa2'
  }));
  app.listen(CLIENT_PORT, () => console.info(`${APP_NAME} running on: ${CLIENT_PORT}`));
  return app;
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uL3dlYnBhY2svYmZmL3NlcnZlci53ZWJwYWNrLm1qcyJdLCJuYW1lcyI6WyJhcHAiLCJLb2EiLCJyIiwidCIsIm1zZyIsIkVycm9yIiwid2VicGFja1NlcnZlciIsInVzZUNvbmZpZyIsInBhY2siLCJDTElFTlRfUE9SVCIsInByb2Nlc3MiLCJlbnYiLCJBUFBfTkFNRSIsImNvbXBpbGVyIiwidXNlIiwicHVibGljUGF0aCIsInN0YXRzIiwidXNlQmZmIiwid3JpdGVUb0Rpc2siLCJsaXN0ZW4iLCJjb25zb2xlIiwiaW5mbyJdLCJtYXBwaW5ncyI6Ijs7Ozs7OztBQUVBOztBQUNBOztBQUNBOztBQUNBOztBQUVBLE1BQU1BLEdBQUcsR0FBRyxJQUFJQyxZQUFKLEVBQVo7O0FBQ0EsTUFBTUMsQ0FBQyxHQUFHLENBQUNDLENBQUQsRUFBSUMsR0FBRyxHQUFHLGFBQVYsS0FBNEI7QUFBRSxRQUFNLElBQUlDLEtBQUosQ0FBVyxHQUFFRixDQUFFLEtBQUlDLEdBQUksRUFBdkIsQ0FBTjtBQUFrQyxDQUExRTs7QUFFZSxTQUFTRSxhQUFULENBQ2JDLFNBQVMsR0FBR0wsQ0FBQyxDQUFDLG1CQUFELENBREEsRUFFYk0sSUFBSSxHQUFHLEVBRk0sRUFHYjtBQUNBLFFBQU1DLFdBQVcsR0FBR0QsSUFBSSxDQUFDQyxXQUFMLElBQW9CQyxPQUFPLENBQUNDLEdBQVIsQ0FBWUYsV0FBaEMsSUFBK0MsSUFBbkU7QUFDQSxRQUFNRyxRQUFRLEdBQUdKLElBQUksQ0FBQ0ksUUFBTCxJQUFpQkYsT0FBTyxDQUFDQyxHQUFSLENBQVlDLFFBQTdCLElBQXlDLHVDQUExRDtBQUVBLFFBQU1DLFFBQVEsR0FBRyxzQkFBUU4sU0FBUixDQUFqQjtBQUVBUCxFQUFBQSxHQUFHLENBQUNjLEdBQUosQ0FBUSxtQ0FDTkQsUUFETSxFQUVOO0FBQ0VFLElBQUFBLFVBQVUsRUFBRVIsU0FBUyxDQUFDUSxVQUR4QjtBQUVFQyxJQUFBQSxLQUFLLEVBQUUsaUJBRlQ7QUFHRUMsSUFBQUEsTUFBTSxFQUFFLFNBSFY7QUFJRUMsSUFBQUEsV0FBVyxFQUFFVixJQUFJLENBQUNVO0FBSnBCLEdBRk0sQ0FBUjtBQVVBbEIsRUFBQUEsR0FBRyxDQUFDYyxHQUFKLENBQVEsbUNBQ05ELFFBRE0sRUFFTjtBQUFFSSxJQUFBQSxNQUFNLEVBQUU7QUFBVixHQUZNLENBQVI7QUFLQWpCLEVBQUFBLEdBQUcsQ0FBQ21CLE1BQUosQ0FDRVYsV0FERixFQUVFLE1BQU9XLE9BQU8sQ0FBQ0MsSUFBUixDQUFjLEdBQUVULFFBQVMsZ0JBQWVILFdBQVksRUFBcEQsQ0FGVDtBQUtBLFNBQU9ULEdBQVA7QUFDRCIsInNvdXJjZXNDb250ZW50IjpbIi8vIFRPRE86IGVuYWJsZSB0ZXN0Y29tcGlsZXIubWpzXG5cbmltcG9ydCBLb2EgZnJvbSAna29hJztcbmltcG9ydCBtaWRkbGV3YXJlIGZyb20gJ3dlYnBhY2stZGV2LW1pZGRsZXdhcmUtMic7XG5pbXBvcnQgd2VicGFjayBmcm9tICd3ZWJwYWNrJztcbmltcG9ydCB3ZWJwYWNrSG90TWlkZGxld2FyZSBmcm9tICd3ZWJwYWNrLWhvdC1taWRkbGV3YXJlLTInO1xuXG5jb25zdCBhcHAgPSBuZXcgS29hKCk7XG5jb25zdCByID0gKHQsIG1zZyA9ICdpcyByZXF1aXJlZCcpID0+IHsgdGhyb3cgbmV3IEVycm9yKGAke3R9OiAke21zZ31gKTsgfTtcblxuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gd2VicGFja1NlcnZlcihcbiAgdXNlQ29uZmlnID0gcigndXNlQ29uZmlnOiBPYmplY3QnKSxcbiAgcGFjayA9IHt9LFxuKSB7XG4gIGNvbnN0IENMSUVOVF9QT1JUID0gcGFjay5DTElFTlRfUE9SVCB8fCBwcm9jZXNzLmVudi5DTElFTlRfUE9SVCB8fCA4MDgwO1xuICBjb25zdCBBUFBfTkFNRSA9IHBhY2suQVBQX05BTUUgfHwgcHJvY2Vzcy5lbnYuQVBQX05BTUUgfHwgJ0Bub2RlcHJvdG8vY29uZmlncHJvdG8ud2VicGFjay5zZXJ2ZXInO1xuXG4gIGNvbnN0IGNvbXBpbGVyID0gd2VicGFjayh1c2VDb25maWcpO1xuXG4gIGFwcC51c2UobWlkZGxld2FyZShcbiAgICBjb21waWxlcixcbiAgICB7XG4gICAgICBwdWJsaWNQYXRoOiB1c2VDb25maWcucHVibGljUGF0aCxcbiAgICAgIHN0YXRzOiAnZXJyb3JzLXdhcm5pbmdzJyxcbiAgICAgIHVzZUJmZjogJ3VzZUtvYTInLFxuICAgICAgd3JpdGVUb0Rpc2s6IHBhY2sud3JpdGVUb0Rpc2ssXG4gICAgfVxuICApKTtcblxuICBhcHAudXNlKHdlYnBhY2tIb3RNaWRkbGV3YXJlKFxuICAgIGNvbXBpbGVyLFxuICAgIHsgdXNlQmZmOiAndXNlS29hMicgfVxuICApKTtcblxuICBhcHAubGlzdGVuKFxuICAgIENMSUVOVF9QT1JULFxuICAgICgpID0+ICBjb25zb2xlLmluZm8oYCR7QVBQX05BTUV9IHJ1bm5pbmcgb246ICR7Q0xJRU5UX1BPUlR9YClcbiAgKTtcblxuICByZXR1cm4gYXBwO1xufVxuIl19