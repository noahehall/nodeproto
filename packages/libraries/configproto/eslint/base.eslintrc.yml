# @nodeproto/configproto - base eslint config
# @see https://eslint.org/docs/user-guide/configuring/language-options
# todo base should implement everything
# ^ and everything should extend and restrict
# ^^ move everything from client.eslintrc.yml into this one, and restrict if needed

reportUnusedDisableDirectives: true
ignorePatterns: ['**/node_modules/**', '**/dist/**']

# @see https://eslint.org/docs/user-guide/configuring/language-options#specifying-environments
env:
  browser: true
  es2021: true
  node: true
  serviceworker: true
  shelljs: true
  webextensions: true
  worker: true

plugins:
  - '@babel'
  - flowtype
  - import
  - markdown
  - node
  - promise
  - react
  - yml

extends:
  # general plugins up here
  - 'eslint:recommended'
  - 'plugin:node/recommended'
  - 'plugin:import/recommended'
  - 'plugin:promise/recommended'
  # priority plugins here
  - plugin:react/jsx-runtime # todo: https://github.com/yannickcr/eslint-plugin-react#configuration
  - plugin:react-hooks/recommended
  - 'plugin:markdown/recommended'
  - 'plugin:yml/standard'
  - 'plugin:json/recommended-with-comments'
  - 'plugin:flowtype/recommended'

# @see https://github.com/yannickcr/eslint-plugin-react#configuration
settings:
  react:
    createClass: createReactClass
    pragma: React
    fragment: Fragment
    version: detect
    flowVersion: '0.157.0'
    componentWrapperFunctions:
      - styled
    linkComponents:
      - name: Link
        linkAttribute: to
  flowtype:
    # with this option you do not have to add @flow in files
    onlyFilesWithFlowAnnotation: false
  # @see https://github.com/import-js/eslint-plugin-import#settings
  'import/extensions':
    - '.js'
    - '.jsx'
    - '.mjs'

# todo
# @see https://eslint.org/docs/user-guide/configuring/language-options#specifying-environments
globals:
  # flow
  $Keys: true
  Iterator: true



# @see https://github.com/babel/babel/tree/main/eslint/babel-eslint-parser
# @see https://github.com/babel/babel/blob/main/eslint/babel-eslint-config-internal/index.js
# dont use /experimental-worker like in ^
parser: '@babel/eslint-parser'
parserOptions:
  allowImportExportEverywhere: false
  ecmaVersion: 12
  requireConfigFile: false
  sourceType: module
  ecmaFeatures:
    globalReturn: true
    impliedStrict: true
    jsx: true
  # set babelOptions when extending if dont want to use a babel config/using webpack + babel-loader
  # babelOptions

# glob-based configuration
overrides:
  - files: ['**/*.cjs']
    parserOptions:
      sourceType: 'script'
  - files: ['**/*.yaml', '**/*.yml']
    parser: 'yaml-eslint-parser'
  # @see https://github.com/eslint/eslint-plugin-markdown
  - files: ['**/*.md']
    processor: 'markdown/markdown'
    rules:
      '@babel/no-unused-expressions': 'off'
      'import/no-unresolved': 'off'
      no-console: 'off'
      no-undef: 'off'
      no-unused-vars: 'off'
      padded-blocks: 'off'

# any enabled @babel rule requires you to turn off the same eslint rule, e.g. see semi
rules:
# great rules here
  '@babel/new-cap': 'error'
  '@babel/no-invalid-this': 'error'
  '@babel/no-unused-expressions': 'error'
  '@babel/object-curly-spacing': ['error', 'always']
  '@babel/semi': ['error', 'always'] # love ending semi - read this https://eslint.org/docs/rules/semi
  function-call-argument-newline: ['error', 'consistent']
  no-multiple-empty-lines: 'error'
  no-throw-literal: 'error'
  no-undef: 'error'
  no-unused-vars: 'error'
  node/no-unpublished-require: 'warn'
  padded-blocks: ['error', 'never']
  prefer-named-capture-group: 'off' # performance
  prefer-object-spread: 'error'
  sort-imports: 'error' # I hate serching a list for shit
  sort-keys: 'error' # i hate searchig a list for shit
  max-lines-per-function:
    - error
    - skipBlankLines: true
      skipComments: true
  no-console:
    - 'error' # console.log
    - allow:
      - 'warn'
      - 'error'
      - 'info'
      - 'table'
      - 'assert'

  # flow specific rules
  flowtype/define-flow-type: 'warn'
  flowtype/use-flow-type: 'warn'

  # react specific
  jsx-quotes: ['error', 'prefer-single']
  react-hooks/exhaustive-deps: 'warn'
  react-hooks/rules-of-hooks: 'error'
  react/display-name: 'error'
  react/forbid-component-props: ['error', {forbid: ['reactsucks', 'angularisgreat']}]
  react/jsx-indent-props: ['error', 2]
  react/jsx-indent: ['error', 2]
  react/jsx-max-depth: ['error', {max: 5}]
  react/jsx-max-props-per-line: ['error', {maximum: 3, when: multiline}]
  react/jsx-no-literals: 'warn'
  react/jsx-one-expression-per-line: ['error', {allow: single-child}]

# dumb fkn rules here
  arrow-parens: 'off'
  capitalized-comments: 'off'
  comma-dangle: 'off' # love trailing commas
  id-length: 'off' # we support junior devs without hampering others
  line-comment-position: 'off'
  multiline-comment-style: 'off'
  no-inline-comments: 'off'
  no-ternary: 'off'
  react/destructuring-assignment: 'off'
  react/jsx-filename-extension: 'off'
  react/jsx-props-no-spreading: 'off'
  react/prop-types: 'off' # not a fan, dont care if you are
  semi: 'off'

# doesnt seem to work right - but would be great if it did
  node/no-unpublished-import: 'off'
  node/no-missing-require: 'off'
