// @flow

import HtmlWebpackPlugin from 'html-webpack-plugin';
import webpack from 'webpack';

import { baseWebpackConfig } from './base.webpack.config';

import type {
  BaseWebpackType,
  ObjectType,
  WebpackConfigType,
  WebpackPluginType,
} from '../../libdefs';

export const getHtmlWebpackPlugin = (
  htmlOptions: ObjectType | ObjectType[]
): WebpackPluginType[] => {
  if (Array.isArray(htmlOptions))
    return htmlOptions.map(
      ({ inject = true, ...rest }) =>
        new HtmlWebpackPlugin({
          ...rest,
          inject, // Inject all files that are generated by webpack, e.g. bundle.js
        })
    );

  const { inject = true, ...rest } = htmlOptions;

  return [
    new HtmlWebpackPlugin({
      ...rest,
      inject: true, // Inject all files that are generated by webpack, e.g. bundle.js
    }),
  ];
};

export const reactDevWebpackConfig = ({
  entry,
  htmlOptions = {},
  entryUnshift = ['react-devtools', 'webpack-hot-middleware-2/client'],
  pack = {},
  plugins = [
    ...getHtmlWebpackPlugin(htmlOptions),

    // new ScriptExtHtmlWebpackPlugin({
    //   module: /(workers|sw)/,
    // }),
  ].filter((x) => x),

  ...rest
}: BaseWebpackType): WebpackConfigType => {
  const basePlugins = entryUnshift.some((e) => e.includes('webpack-hot'))
      ? [new webpack.HotModuleReplacementPlugin()]
      : [];

  return baseWebpackConfig({
    ...rest,
    entry,
    entryUnshift,
    pack,
    plugins: basePlugins.concat(plugins),
  });
};
