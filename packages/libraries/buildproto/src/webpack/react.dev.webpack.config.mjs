// $FlowTODO

import baseWebpackConfig from "./base.webpack.config";
import HtmlWebpackPlugin from "html-webpack-plugin";
import webpack from "webpack";

const r = (t, msg = "is required") => {
  throw new Error(`${t}: ${msg}`);
};

const getHtmlWebpackPlugin = (htmlOptions) =>
  Array.isArray(htmlOptions)
    ? htmlOptions.map(
        (o) =>
          new HtmlWebpackPlugin({
            inject: true, // Inject all files that are generated by webpack, e.g. bundle.js
            ...o,
          })
      )
    : [
        new HtmlWebpackPlugin({
          inject: true, // Inject all files that are generated by webpack, e.g. bundle.js
          ...htmlOptions,
        }),
      ];

export default function reactDevWebpackConfig({
  // required
  entry = r("entry: []|{}"),
  htmlOptions = r("htmlOptions: []|{}"),

  // defaults
  entryUnshift = ["react-devtools", "webpack-hot-middleware-2/client"],
  pack = {},

  // dependent
  pathDist = pack.pathDist || r("pathDist"),
  pathSrc = pack.pathSrc || r("pathSrc"),

  ...overrides
}) {
  return baseWebpackConfig({
    entry,
    entryUnshift,
    pack,
    pathDist,
    pathSrc,
    plugins: [
      entryUnshift.some((e) => e.includes("webpack-hot"))
        ? new webpack.HotModuleReplacementPlugin()
        : false,

      ...getHtmlWebpackPlugin(htmlOptions),

      // new ScriptExtHtmlWebpackPlugin({
      //   module: /(workers|sw)/,
      // }),
    ].filter((x) => x),
    ...overrides,
  });
}
