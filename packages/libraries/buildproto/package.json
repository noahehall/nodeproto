{
  "bugs": "https://github.com/noahehall/nodeproto/issues",
  "description": "@nodeproto/buildproto - reusable configs",
  "homepage": "https://github.com/noahehall/nodeproto",
  "license": "SEE LICENSE IN LICENSE.md",
  "main": "./dist/index.js",
  "module": "./src/index.mjs",
  "name": "@nodeproto/buildproto",
  "packageManager": "pnpm@6.29.1",
  "private": true,
  "repository": "git://github.com/noahehall/nodeproto.git",
  "type": "module",
  "version": "0.0.0",
  "author": {
    "email": "nodeproto@nirvai.mozmail.com",
    "name": "theDRAGON",
    "url": "https://github.com/noahehall"
  },
  "config": {
    "BABEL_SHOW_CONFIG_FOR": "e.g. BABEL_SHOW_CONFIG_FOR=absolute/path/to/file somePkgJsonScriptName",
    "DIRS_TO_TRANSPILE": "./src",
    "FLOW_LOADER": "./node_modules/@nodeproto/configproto/src/node/loaders/flow.mjs",
    "NODE_ENV": "production",
    "NODE_OPTIONS": "--abort-on-uncaught-exception --diagnostic-dir=\"/var/.nodeproto/diagnostics\" --enable-source-maps --experimental-abortcontroller --experimental-modules --experimental-import-meta-resolve --experimental-json-modules --experimental-loader=\"./node_modules/@nodeproto/configproto/src/node/loaders/flow.mjs\" --experimental-specifier-resolution=node --experimental-top-level-await --experimental-vm-modules --pending-deprecation --report-compact --report-dir=\"/var/.nodeproto/reports\" --report-filename=nodeprotolog --report-on-fatalerror --report-on-signal --report-signal=SIGUSR2 --report-uncaught-exception --trace-deprecation --trace-exit --trace-sigint --trace-uncaught --trace-warnings --unhandled-rejections=throw --use-largepages=on",
    "NODE_OPTIONS_REMOVED": " --preserve-symlinks --preserve-symlinks-main   --v8-pool-size=0 --zero-fill-buffers",
    "PATH_DIST": "./dist",
    "PATH_SRC": "./src",
    "REMOVED_BABEL_OPTIONS": "--copy-files",
    "REMOVED_NODE_OPTIONS": ""
  },
  "dependencies": {
    "@babel/cli": "7.16.8",
    "@babel/core": "7.16.12",
    "@babel/plugin-syntax-top-level-await": "7.14.5",
    "@babel/plugin-transform-flow-strip-types": "7.16.7",
    "@babel/runtime": "7.16.7",
    "@babel/traverse": "7.16.10",
    "@emotion/styled": "11.6.0",
    "@nodeproto/configproto": "workspace:0.0.0",
    "@nodeproto/wtf": "workspace:0.0.0",
    "babel-loader": "8.2.3",
    "browserslist": "4.19.1",
    "bundle-stats-webpack-plugin": "3.2.4",
    "copy-webpack-plugin": "10.2.3",
    "core-js": "3.20.3",
    "css-loader": "6.5.1",
    "esbuild": "0.14.14",
    "esbuild-loader": "2.18.0",
    "esbuild-plugin-manifest": "0.5.0",
    "flow-remove-types": "2.170.0",
    "html-webpack-plugin": "5.5.0",
    "http-terminator": "3.0.4",
    "koa": "2.13.4",
    "memfs": "3.4.1",
    "mini-svg-data-uri": "1.4.3",
    "regenerator-runtime": "0.13.9",
    "schema-utils": "4.0.0",
    "string-replace-loader": "3.1.0",
    "style-loader": "3.3.1",
    "ultra-runner": "3.10.5",
    "webpack": "5.67.0",
    "webpack-dev-middleware-2": "5.0.2",
    "webpack-hot-middleware-2": "2.25.2"
  },
  "devDependencies": {
    "@babel/core": "7.16.12",
    "@babel/eslint-parser": "7.16.5",
    "@babel/eslint-plugin": "7.16.5",
    "@changesets/cli": "2.20.0",
    "@nodeproto/configproto": "workspace:0.0.0",
    "@nodeproto/jsync": "workspace:0.0.0",
    "@nodeproto/testproto": "workspace:0.0.0",
    "@octokit/core": "3.5.1",
    "browserslist": "4.19.1",
    "chokidar-cli": "3.0.0",
    "eslint": "8.8.0",
    "eslint-config-prettier": "8.3.0",
    "eslint-plugin-fb-flow": "0.0.4",
    "eslint-plugin-flowtype-errors": "4.5.0",
    "eslint-plugin-html": "6.2.0",
    "eslint-plugin-json": "3.1.0",
    "eslint-plugin-markdown": "2.2.1",
    "eslint-plugin-node": "11.1.0",
    "eslint-plugin-prettier": "4.0.0",
    "eslint-plugin-promise": "6.0.0",
    "eslint-plugin-react": "7.28.0",
    "eslint-plugin-react-hooks": "4.3.0",
    "eslint-plugin-yml": "0.13.0",
    "flow-bin": "0.170.0",
    "flow-remove-types": "2.170.0",
    "flow-typed": "3.6.1",
    "prettier": "2.5.1",
    "react": "17.0.2",
    "react-devtools": "~4.23.0",
    "react-dom": "17.0.2",
    "uvu": "0.5.3",
    "yaml-eslint-parser": "0.5.0"
  },
  "directories": {
    "dist": "./dist",
    "flowtyped": "./flow-typed",
    "src": "./src"
  },
  "engines": {
    "node": "^14.17.0 || ^16.11.0 || >=17.1.0"
  },
  "exports": {
    ".": {
      "import": "./src/index.mjs",
      "default": "./dist/index.js"
    },
    "./libdefs": "./libdefs.mjs"
  },
  "files": [ "./libdefs.mjs", "./src"],
  "jsync": {
    "root": false
  },
  "keywords": [
    "@nirv",
    "@nodeproto",
    "api",
    "bodyguard",
    "cloudnative",
    "development",
    "fullstack",
    "inception",
    "jsync",
    "micro service",
    "microservice",
    "noahedwardhall",
    "openapi",
    "product development framework",
    "production",
    "prototype",
    "secure",
    "theDRAGON",
    "virtual",
    "virtualization"
  ],
  "os": [
    "darwin",
    "linux"
  ],
  "scripts": {
    "build": "pnpm repo:rm:dist && NODE_OPTIONS=$npm_package_config_NODE_OPTIONS babel $npm_package_config_DIRS_TO_TRANSPILE -d $npm_package_config_PATH_DIST --out-file-extension .js --ignore 'src/**/*.test.mjs' --ignore src/webpack/test.compiler.mjs",
    "clean": "pnpm repo:rm:dist && pnpm repo:cp:cjs",
    "js:to:cjs": "for f in ./dist/**/*.js; do mv -- \"$f\" \"${f%.js}.cjs\"; done",
    "proto": "pnpm exec ultra -r",
    "proto:bin": "pnpm -r exec $*",
    "proto:script": "NODE_OPTIONS=\"$npm_package_config_NODE_OPTIONS\" pnpm -r $*",
    "proto:slice": "NODE_OPTIONS=\"$npm_package_config_NODE_OPTIONS\" pnpm exec ultra -r --filter",
    "repo:about": "npm run-script && npm --versions && pnpm -r config list --json t && echo \"NODE OPTIONS set to: $npm_package_config_NODE_OPTIONS\"",
    "repo:about:scripts": "npm run-script",
    "repo:cp:browserslist": "rm -f .browserslistrc && cp ./node_modules/@nodeproto/configproto/.browserslistrc .",
    "repo:cp:cjs": "rm -f ./dist/package.json && mkdir -p dist && cp ./node_modules/@nodeproto/configproto/src/node/cjs.json ./dist/package.json",
    "repo:cp:configproto": "pnpm repo:cp:flow; pnpm repo:cp:cjs; pnpm repo:cp:browserslist; pnpm repo:cp:pretty",
    "repo:cp:flow": "rm -f .flowconfig && cp ./node_modules/@nodeproto/configproto/.flowconfig .",
    "repo:cp:pretty": "rm -f .prettier* && cp ./node_modules/@nodeproto/configproto/.prettier* .",
    "repo:deps": "ultra --info",
    "repo:deps:direct": "npm ls",
    "repo:eslint": "eslint './**/*'; pnpm repo:flow:coverage",
    "repo:eslint:fix": "pnpm repo:eslint -- --fix",
    "repo:flow:coverage": "pnpm flow batch-coverage src",
    "repo:flowtyped:install": "flow-typed install",
    "repo:jsync": "jsync",
    "repo:monitor": "ultra --monitor",
    "repo:nuke": "pnpm repo:rm:dist; pnpm repo:rm:nodemodules",
    "repo:rm:dist": "rm -rf dist/*",
    "repo:rm:nodemodules": "rm -rf node_modules/*",
    "repo:scripts": "ultra --list",
    "repo:scripts:v": "npm run-script",
    "repo:test": "NODE_OPTIONS=\"$npm_package_config_NODE_OPTIONS\" uvu ./src \"test.(m|c)?js\"",
    "repo:test:file": "NODE_OPTIONS=\"$npm_package_config_NODE_OPTIONS\" node $*",
    "repo:test:help": "uvu --help",
    "repo:testing": "pnpm repo:test; chokidar \"src/**/*(?:.test)?.(m|c)?js\" -c \"pnpm repo:test\"",
    "repo:update": "pnpm -r up --latest"
  },
  "ultra": {
    "concurrent": [
      "eslint",
      "test",
      "cp:flow"
    ]
  }
}
